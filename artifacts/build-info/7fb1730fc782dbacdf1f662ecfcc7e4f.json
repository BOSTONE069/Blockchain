{
	"id": "7fb1730fc782dbacdf1f662ecfcc7e4f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"web3token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// The above line indicates that the license for this Solidity code is MIT.\r\n\r\n// The following line specifies that the Solidity compiler should only be used from version v0.8.13 to v0.9.0.\r\npragma solidity ^0.8.13;\r\n\r\n// The following line imports the SafeMath library from the OpenZeppelin smart contract library.\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\n\r\n// The following contract is named web3ClubsToken.\r\ncontract web3ClubsToken {\r\n\r\n    // The following line specifies that the SafeMath library should be used for uint256 data types in this contract.\r\n    using SafeMath for uint256;\r\n\r\n    //global var\r\n    uint public totatSupply = 10000;\r\n    string public tokenName = \"web3ClubsToken\";\r\n    string public symbol = \"WCT\";\r\n    uint public decimals = 18; //decimal numbers\r\n    uint public balancesOf; // balance of address \r\n\r\n\r\n    //mapping\r\n    mapping (address => uint256) balances;\r\n\r\n    event TRANSFER(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    function transfer(address _sender, address _receiver, uint _amount) public returns (bool) {\r\n        require(balances[msg.sender] > 0);\r\n        require(balances[msg.sender] >= _amount);\r\n        require(_receiver != address(0));\r\n        require(_receiver != msg.sender);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_receiver] = balances[_receiver].add(_amount);\r\n        emit TRANSFER(msg.sender, _receiver, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom() public view {\r\n        // Add implementation here\r\n    }\r\n}\r\n\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"web3token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"web3token.sol": {
				"web3ClubsToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TRANSFER",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balancesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totatSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"web3token.sol\":467:1628  contract web3ClubsToken {... */\n  mstore(0x40, 0x80)\n    /* \"web3token.sol\":698:703  10000 */\n  0x2710\n    /* \"web3token.sol\":672:703  uint public totatSupply = 10000 */\n  0x00\n  sstore\n    /* \"web3token.sol\":710:752  string public tokenName = \"web3ClubsToken\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x77656233436c756273546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"web3token.sol\":759:787  string public symbol = \"WCT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5743540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"web3token.sol\":817:819  18 */\n  0x12\n    /* \"web3token.sol\":794:819  uint public decimals = 18 */\n  0x03\n  sstore\n    /* \"web3token.sol\":467:1628  contract web3ClubsToken {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  jump(tag_5)\n    /* \"#utility.yul\":7:106   */\ntag_6:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_7:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_8:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_9:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_31:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_33\n  tag_8\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":714:798   */\ntag_32:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_10:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_11:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_12:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_13:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_38\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_12\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1429:1468   */\n  tag_39\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_12\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_14:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_15:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_16:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_43\n    /* \"#utility.yul\":1818:1852   */\n  tag_44\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1818:1852   */\n  tag_15\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1800:1853   */\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_17:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_18:\n    /* \"#utility.yul\":2056:2095   */\n  tag_48\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2117:2208   */\n  tag_49\n    /* \"#utility.yul\":2166:2207   */\n  tag_50\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_13\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_19:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_20:\n    /* \"#utility.yul\":2377:2409   */\n  tag_53\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2418:2483   */\n  tag_54\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_21:\n    /* \"#utility.yul\":2555:2675   */\ntag_56:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_59\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_22:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_62\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2906:2935   */\n  tag_63\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_11\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_64:\n    /* \"#utility.yul\":3133:3213   */\n  tag_65\n    /* \"#utility.yul\":3189:3211   */\n  tag_66\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_11\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_21\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_61:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_23:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_24:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_69\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_25:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_71\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_24\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_73\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_6\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_75\n  tag_7\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4038:4094   */\ntag_74:\n    /* \"#utility.yul\":4118:4156   */\n  tag_76\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_9\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4203:4270   */\n  tag_77\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_80:\n    /* \"#utility.yul\":5144:5211   */\n  tag_81\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_25\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_78)\n    /* \"#utility.yul\":4365:4983   */\ntag_79:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_82\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_10\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_83:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_83)\ntag_85:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_87\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_24\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_86:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_78:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"web3token.sol\":467:1628  contract web3ClubsToken {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"web3token.sol\":467:1628  contract web3ClubsToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x6c02a931\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x811c34d3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbeabacc8\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x19d37e4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2aefc8d2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"web3token.sol\":844:866  uint public balancesOf */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":672:703  uint public totatSupply = 10000 */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":794:819  uint public decimals = 18 */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":710:752  string public tokenName = \"web3ClubsToken\" */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":1545:1625  function transferFrom() public view {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"web3token.sol\":759:787  string public symbol = \"WCT\" */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":1044:1537  function transfer(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"web3token.sol\":844:866  uint public balancesOf */\n    tag_12:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"web3token.sol\":672:703  uint public totatSupply = 10000 */\n    tag_16:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"web3token.sol\":794:819  uint public decimals = 18 */\n    tag_19:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"web3token.sol\":710:752  string public tokenName = \"web3ClubsToken\" */\n    tag_22:\n      0x01\n      dup1\n      sload\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_38\n      swap1\n      tag_37\n      jump\t// in\n    tag_38:\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_40\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_39)\n    tag_40:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_41:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_41\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"web3token.sol\":1545:1625  function transferFrom() public view {... */\n    tag_26:\n      jump\t// out\n        /* \"web3token.sol\":759:787  string public symbol = \"WCT\" */\n    tag_28:\n      0x02\n      dup1\n      sload\n      tag_43\n      swap1\n      tag_37\n      jump\t// in\n    tag_43:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_44\n      swap1\n      tag_37\n      jump\t// in\n    tag_44:\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_46\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_45)\n    tag_46:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_47:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_47\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"web3token.sol\":1044:1537  function transfer(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n    tag_33:\n        /* \"web3token.sol\":1128:1132  bool */\n      0x00\n        /* \"web3token.sol\":1176:1177  0 */\n      dup1\n        /* \"web3token.sol\":1153:1161  balances */\n      0x05\n        /* \"web3token.sol\":1153:1173  balances[msg.sender] */\n      0x00\n        /* \"web3token.sol\":1162:1172  msg.sender */\n      caller\n        /* \"web3token.sol\":1153:1173  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"web3token.sol\":1153:1177  balances[msg.sender] > 0 */\n      gt\n        /* \"web3token.sol\":1145:1178  require(balances[msg.sender] > 0) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"web3token.sol\":1221:1228  _amount */\n      dup2\n        /* \"web3token.sol\":1197:1205  balances */\n      0x05\n        /* \"web3token.sol\":1197:1217  balances[msg.sender] */\n      0x00\n        /* \"web3token.sol\":1206:1216  msg.sender */\n      caller\n        /* \"web3token.sol\":1197:1217  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"web3token.sol\":1197:1228  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"web3token.sol\":1189:1229  require(balances[msg.sender] >= _amount) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"web3token.sol\":1269:1270  0 */\n      0x00\n        /* \"web3token.sol\":1248:1271  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"web3token.sol\":1248:1257  _receiver */\n      dup4\n        /* \"web3token.sol\":1248:1271  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"web3token.sol\":1240:1272  require(_receiver != address(0)) */\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n        /* \"web3token.sol\":1304:1314  msg.sender */\n      caller\n        /* \"web3token.sol\":1291:1314  _receiver != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"web3token.sol\":1291:1300  _receiver */\n      dup4\n        /* \"web3token.sol\":1291:1314  _receiver != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"web3token.sol\":1283:1315  require(_receiver != msg.sender) */\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n        /* \"web3token.sol\":1351:1384  balances[msg.sender].sub(_amount) */\n      tag_53\n        /* \"web3token.sol\":1376:1383  _amount */\n      dup3\n        /* \"web3token.sol\":1351:1359  balances */\n      0x05\n        /* \"web3token.sol\":1351:1371  balances[msg.sender] */\n      0x00\n        /* \"web3token.sol\":1360:1370  msg.sender */\n      caller\n        /* \"web3token.sol\":1351:1371  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"web3token.sol\":1351:1375  balances[msg.sender].sub */\n      tag_54\n      swap1\n        /* \"web3token.sol\":1351:1384  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"web3token.sol\":1328:1336  balances */\n      0x05\n        /* \"web3token.sol\":1328:1348  balances[msg.sender] */\n      0x00\n        /* \"web3token.sol\":1337:1347  msg.sender */\n      caller\n        /* \"web3token.sol\":1328:1348  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"web3token.sol\":1328:1384  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"web3token.sol\":1417:1449  balances[_receiver].add(_amount) */\n      tag_55\n        /* \"web3token.sol\":1441:1448  _amount */\n      dup3\n        /* \"web3token.sol\":1417:1425  balances */\n      0x05\n        /* \"web3token.sol\":1417:1436  balances[_receiver] */\n      0x00\n        /* \"web3token.sol\":1426:1435  _receiver */\n      dup7\n        /* \"web3token.sol\":1417:1436  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"web3token.sol\":1417:1440  balances[_receiver].add */\n      tag_56\n      swap1\n        /* \"web3token.sol\":1417:1449  balances[_receiver].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"web3token.sol\":1395:1403  balances */\n      0x05\n        /* \"web3token.sol\":1395:1414  balances[_receiver] */\n      0x00\n        /* \"web3token.sol\":1404:1413  _receiver */\n      dup6\n        /* \"web3token.sol\":1395:1414  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"web3token.sol\":1395:1449  balances[_receiver] = balances[_receiver].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"web3token.sol\":1486:1495  _receiver */\n      dup3\n        /* \"web3token.sol\":1465:1505  TRANSFER(msg.sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"web3token.sol\":1474:1484  msg.sender */\n      caller\n        /* \"web3token.sol\":1465:1505  TRANSFER(msg.sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a9\n        /* \"web3token.sol\":1497:1504  _amount */\n      dup5\n        /* \"web3token.sol\":1465:1505  TRANSFER(msg.sender, _receiver, _amount) */\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"web3token.sol\":1525:1529  true */\n      0x01\n        /* \"web3token.sol\":1518:1529  return true */\n      swap1\n      pop\n        /* \"web3token.sol\":1044:1537  function transfer(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_64:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_65:\n        /* \"#utility.yul\":177:201   */\n      tag_87\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_64\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_89\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_65\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_66:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_67:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_68:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_93:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_93)\n    tag_95:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_69:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_70:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_98\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_66\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1253:1324   */\n      tag_99\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_67\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_100\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_68\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1423:1452   */\n      tag_101\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_69\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_24:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_103\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_70\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_72:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2237   */\n    tag_74:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2188:2230   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2181:2186   */\n      dup3\n        /* \"#utility.yul\":2177:2231   */\n      and\n        /* \"#utility.yul\":2166:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2339   */\n    tag_75:\n        /* \"#utility.yul\":2280:2287   */\n      0x00\n        /* \"#utility.yul\":2309:2333   */\n      tag_109\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2309:2333   */\n      tag_74\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2298:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2243:2339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2467   */\n    tag_76:\n        /* \"#utility.yul\":2418:2442   */\n      tag_111\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_75\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_112:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2612   */\n    tag_77:\n        /* \"#utility.yul\":2519:2524   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup2\n        /* \"#utility.yul\":2544:2564   */\n      calldataload\n        /* \"#utility.yul\":2535:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2606   */\n      tag_114\n        /* \"#utility.yul\":2600:2605   */\n      dup2\n        /* \"#utility.yul\":2573:2606   */\n      tag_76\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2473:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2740   */\n    tag_78:\n        /* \"#utility.yul\":2691:2715   */\n      tag_116\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2691:2715   */\n      tag_64\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2716   */\n      eq\n        /* \"#utility.yul\":2671:2734   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2671:2734   */\n    tag_117:\n        /* \"#utility.yul\":2618:2740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2885   */\n    tag_79:\n        /* \"#utility.yul\":2792:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup2\n        /* \"#utility.yul\":2817:2837   */\n      calldataload\n        /* \"#utility.yul\":2808:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2879   */\n      tag_119\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2846:2879   */\n      tag_78\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2746:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3510   */\n    tag_32:\n        /* \"#utility.yul\":2968:2974   */\n      0x00\n        /* \"#utility.yul\":2976:2982   */\n      dup1\n        /* \"#utility.yul\":2984:2990   */\n      0x00\n        /* \"#utility.yul\":3033:3035   */\n      0x60\n        /* \"#utility.yul\":3021:3030   */\n      dup5\n        /* \"#utility.yul\":3012:3019   */\n      dup7\n        /* \"#utility.yul\":3008:3031   */\n      sub\n        /* \"#utility.yul\":3004:3036   */\n      slt\n        /* \"#utility.yul\":3001:3120   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3039:3118   */\n      tag_122\n      tag_72\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3001:3120   */\n    tag_121:\n        /* \"#utility.yul\":3159:3160   */\n      0x00\n        /* \"#utility.yul\":3184:3237   */\n      tag_123\n        /* \"#utility.yul\":3229:3236   */\n      dup7\n        /* \"#utility.yul\":3220:3226   */\n      dup3\n        /* \"#utility.yul\":3209:3218   */\n      dup8\n        /* \"#utility.yul\":3205:3227   */\n      add\n        /* \"#utility.yul\":3184:3237   */\n      tag_77\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3174:3237   */\n      swap4\n      pop\n        /* \"#utility.yul\":3130:3247   */\n      pop\n        /* \"#utility.yul\":3286:3288   */\n      0x20\n        /* \"#utility.yul\":3312:3365   */\n      tag_124\n        /* \"#utility.yul\":3357:3364   */\n      dup7\n        /* \"#utility.yul\":3348:3354   */\n      dup3\n        /* \"#utility.yul\":3337:3346   */\n      dup8\n        /* \"#utility.yul\":3333:3355   */\n      add\n        /* \"#utility.yul\":3312:3365   */\n      tag_77\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3302:3365   */\n      swap3\n      pop\n        /* \"#utility.yul\":3257:3375   */\n      pop\n        /* \"#utility.yul\":3414:3416   */\n      0x40\n        /* \"#utility.yul\":3440:3493   */\n      tag_125\n        /* \"#utility.yul\":3485:3492   */\n      dup7\n        /* \"#utility.yul\":3476:3482   */\n      dup3\n        /* \"#utility.yul\":3465:3474   */\n      dup8\n        /* \"#utility.yul\":3461:3483   */\n      add\n        /* \"#utility.yul\":3440:3493   */\n      tag_79\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3430:3493   */\n      swap2\n      pop\n        /* \"#utility.yul\":3385:3503   */\n      pop\n        /* \"#utility.yul\":2891:3510   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3516:3606   */\n    tag_80:\n        /* \"#utility.yul\":3550:3557   */\n      0x00\n        /* \"#utility.yul\":3593:3598   */\n      dup2\n        /* \"#utility.yul\":3586:3599   */\n      iszero\n        /* \"#utility.yul\":3579:3600   */\n      iszero\n        /* \"#utility.yul\":3568:3600   */\n      swap1\n      pop\n        /* \"#utility.yul\":3516:3606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3612:3721   */\n    tag_81:\n        /* \"#utility.yul\":3693:3714   */\n      tag_128\n        /* \"#utility.yul\":3708:3713   */\n      dup2\n        /* \"#utility.yul\":3693:3714   */\n      tag_80\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3688:3691   */\n      dup3\n        /* \"#utility.yul\":3681:3715   */\n      mstore\n        /* \"#utility.yul\":3612:3721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3727:3937   */\n    tag_35:\n        /* \"#utility.yul\":3814:3818   */\n      0x00\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3841:3850   */\n      dup3\n        /* \"#utility.yul\":3837:3855   */\n      add\n        /* \"#utility.yul\":3829:3855   */\n      swap1\n      pop\n        /* \"#utility.yul\":3865:3930   */\n      tag_130\n        /* \"#utility.yul\":3927:3928   */\n      0x00\n        /* \"#utility.yul\":3916:3925   */\n      dup4\n        /* \"#utility.yul\":3912:3929   */\n      add\n        /* \"#utility.yul\":3903:3909   */\n      dup5\n        /* \"#utility.yul\":3865:3930   */\n      tag_81\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3727:3937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4123   */\n    tag_82:\n        /* \"#utility.yul\":3991:4068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3988:3989   */\n      0x00\n        /* \"#utility.yul\":3981:4069   */\n      mstore\n        /* \"#utility.yul\":4088:4092   */\n      0x22\n        /* \"#utility.yul\":4085:4086   */\n      0x04\n        /* \"#utility.yul\":4078:4093   */\n      mstore\n        /* \"#utility.yul\":4112:4116   */\n      0x24\n        /* \"#utility.yul\":4109:4110   */\n      0x00\n        /* \"#utility.yul\":4102:4117   */\n      revert\n        /* \"#utility.yul\":4129:4449   */\n    tag_37:\n        /* \"#utility.yul\":4173:4179   */\n      0x00\n        /* \"#utility.yul\":4210:4211   */\n      0x02\n        /* \"#utility.yul\":4204:4208   */\n      dup3\n        /* \"#utility.yul\":4200:4212   */\n      div\n        /* \"#utility.yul\":4190:4212   */\n      swap1\n      pop\n        /* \"#utility.yul\":4257:4258   */\n      0x01\n        /* \"#utility.yul\":4251:4255   */\n      dup3\n        /* \"#utility.yul\":4247:4259   */\n      and\n        /* \"#utility.yul\":4278:4296   */\n      dup1\n        /* \"#utility.yul\":4268:4349   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4334:4338   */\n      0x7f\n        /* \"#utility.yul\":4326:4332   */\n      dup3\n        /* \"#utility.yul\":4322:4339   */\n      and\n        /* \"#utility.yul\":4312:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4268:4349   */\n    tag_133:\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4388:4394   */\n      dup3\n        /* \"#utility.yul\":4385:4399   */\n      lt\n        /* \"#utility.yul\":4365:4383   */\n      dup2\n        /* \"#utility.yul\":4362:4400   */\n      sub\n        /* \"#utility.yul\":4359:4443   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4415:4433   */\n      tag_135\n      tag_82\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4359:4443   */\n    tag_134:\n        /* \"#utility.yul\":4180:4449   */\n      pop\n        /* \"#utility.yul\":4129:4449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4455:4635   */\n    tag_83:\n        /* \"#utility.yul\":4503:4580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4500:4501   */\n      0x00\n        /* \"#utility.yul\":4493:4581   */\n      mstore\n        /* \"#utility.yul\":4600:4604   */\n      0x11\n        /* \"#utility.yul\":4597:4598   */\n      0x04\n        /* \"#utility.yul\":4590:4605   */\n      mstore\n        /* \"#utility.yul\":4624:4628   */\n      0x24\n        /* \"#utility.yul\":4621:4622   */\n      0x00\n        /* \"#utility.yul\":4614:4629   */\n      revert\n        /* \"#utility.yul\":4641:4835   */\n    tag_60:\n        /* \"#utility.yul\":4681:4685   */\n      0x00\n        /* \"#utility.yul\":4701:4721   */\n      tag_138\n        /* \"#utility.yul\":4719:4720   */\n      dup3\n        /* \"#utility.yul\":4701:4721   */\n      tag_64\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4696:4721   */\n      swap2\n      pop\n        /* \"#utility.yul\":4735:4755   */\n      tag_139\n        /* \"#utility.yul\":4753:4754   */\n      dup4\n        /* \"#utility.yul\":4735:4755   */\n      tag_64\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4730:4755   */\n      swap3\n      pop\n        /* \"#utility.yul\":4779:4780   */\n      dup3\n        /* \"#utility.yul\":4776:4777   */\n      dup3\n        /* \"#utility.yul\":4772:4781   */\n      sub\n        /* \"#utility.yul\":4764:4781   */\n      swap1\n      pop\n        /* \"#utility.yul\":4803:4804   */\n      dup2\n        /* \"#utility.yul\":4797:4801   */\n      dup2\n        /* \"#utility.yul\":4794:4805   */\n      gt\n        /* \"#utility.yul\":4791:4828   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":4808:4826   */\n      tag_141\n      tag_83\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4791:4828   */\n    tag_140:\n        /* \"#utility.yul\":4641:4835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4841:5032   */\n    tag_63:\n        /* \"#utility.yul\":4881:4884   */\n      0x00\n        /* \"#utility.yul\":4900:4920   */\n      tag_143\n        /* \"#utility.yul\":4918:4919   */\n      dup3\n        /* \"#utility.yul\":4900:4920   */\n      tag_64\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4895:4920   */\n      swap2\n      pop\n        /* \"#utility.yul\":4934:4954   */\n      tag_144\n        /* \"#utility.yul\":4952:4953   */\n      dup4\n        /* \"#utility.yul\":4934:4954   */\n      tag_64\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4929:4954   */\n      swap3\n      pop\n        /* \"#utility.yul\":4977:4978   */\n      dup3\n        /* \"#utility.yul\":4974:4975   */\n      dup3\n        /* \"#utility.yul\":4970:4979   */\n      add\n        /* \"#utility.yul\":4963:4979   */\n      swap1\n      pop\n        /* \"#utility.yul\":4998:5001   */\n      dup1\n        /* \"#utility.yul\":4995:4996   */\n      dup3\n        /* \"#utility.yul\":4992:5002   */\n      gt\n        /* \"#utility.yul\":4989:5025   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5005:5023   */\n      tag_146\n      tag_83\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4989:5025   */\n    tag_145:\n        /* \"#utility.yul\":4841:5032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220850fc3aef9bb1e28b3ec1f71b023a8c5b8563e9bc2e70cddf82bfbfa7064532564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"array_dataslot_t_string_storage": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:2"
															},
															"nodeType": "YulIf",
															"src": "623:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:2"
															},
															"nodeType": "YulIf",
															"src": "714:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:2",
														"type": ""
													}
												],
												"src": "484:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:2",
														"type": ""
													}
												],
												"src": "810:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:2",
														"type": ""
													}
												],
												"src": "957:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:2",
														"type": ""
													}
												],
												"src": "1056:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:2",
														"type": ""
													}
												],
												"src": "1169:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"src": "1568:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													}
												],
												"src": "1651:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:2",
														"type": ""
													}
												],
												"src": "1717:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:2",
														"type": ""
													}
												],
												"src": "1865:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:2",
														"type": ""
													}
												],
												"src": "1946:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:2",
														"type": ""
													}
												],
												"src": "2221:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:2",
														"type": ""
													}
												],
												"src": "2300:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:2",
																"statements": []
															},
															"src": "2555:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:2",
														"type": ""
													}
												],
												"src": "2495:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:2"
															},
															"nodeType": "YulIf",
															"src": "2777:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:2",
														"type": ""
													}
												],
												"src": "2687:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:2",
														"type": ""
													}
												],
												"src": "3236:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:2",
														"type": ""
													}
												],
												"src": "3359:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:2",
														"type": ""
													}
												],
												"src": "3533:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:2"
															},
															"nodeType": "YulIf",
															"src": "4038:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:2",
																					"statements": []
																				},
																				"src": "4524:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:2",
														"type": ""
													}
												],
												"src": "3833:1395:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526127106000556040518060400160405280600e81526020017f77656233436c756273546f6b656e000000000000000000000000000000000000815250600190816200005091906200032b565b506040518060400160405280600381526020017f5743540000000000000000000000000000000000000000000000000000000000815250600290816200009791906200032b565b506012600355348015620000aa57600080fd5b5062000412565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013357607f821691505b602082108103620001495762000148620000eb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000174565b620001bf868362000174565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200020c620002066200020084620001d7565b620001e1565b620001d7565b9050919050565b6000819050919050565b6200022883620001eb565b62000240620002378262000213565b84845462000181565b825550505050565b600090565b6200025762000248565b620002648184846200021d565b505050565b5b818110156200028c57620002806000826200024d565b6001810190506200026a565b5050565b601f821115620002db57620002a5816200014f565b620002b08462000164565b81016020851015620002c0578190505b620002d8620002cf8562000164565b83018262000269565b50505b505050565b600082821c905092915050565b60006200030060001984600802620002e0565b1980831691505092915050565b60006200031b8383620002ed565b9150826002028217905092915050565b6200033682620000b1565b67ffffffffffffffff811115620003525762000351620000bc565b5b6200035e82546200011a565b6200036b82828562000290565b600060209050601f831160018114620003a357600084156200038e578287015190505b6200039a85826200030d565b8655506200040a565b601f198416620003b3866200014f565b60005b82811015620003dd57848901518255600182019150602085019450602081019050620003b6565b86831015620003fd5784890151620003f9601f891682620002ed565b8355505b6001600288020188555050505b505050505050565b61087d80620004226000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c02a9311161005b5780636c02a931146100dc578063811c34d3146100fa57806395d89b4114610104578063beabacc8146101225761007d565b806319d37e4a146100825780632aefc8d2146100a0578063313ce567146100be575b600080fd5b61008a610152565b604051610097919061056b565b60405180910390f35b6100a8610158565b6040516100b5919061056b565b60405180910390f35b6100c661015e565b6040516100d3919061056b565b60405180910390f35b6100e4610164565b6040516100f19190610616565b60405180910390f35b6101026101f2565b005b61010c6101f4565b6040516101199190610616565b60405180910390f35b61013c600480360381019061013791906106c7565b610282565b6040516101499190610735565b60405180910390f35b60045481565b60005481565b60035481565b600180546101719061077f565b80601f016020809104026020016040519081016040528092919081815260200182805461019d9061077f565b80156101ea5780601f106101bf576101008083540402835291602001916101ea565b820191906000526020600020905b8154815290600101906020018083116101cd57829003601f168201915b505050505081565b565b600280546102019061077f565b80601f016020809104026020016040519081016040528092919081815260200182805461022d9061077f565b801561027a5780601f1061024f5761010080835404028352916020019161027a565b820191906000526020600020905b81548152906001019060200180831161025d57829003601f168201915b505050505081565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102cf57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561031b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361038c57600080fd5b6103de82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061047382600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610513919061056b565b60405180910390a3600190509392505050565b6000818361053491906107df565b905092915050565b6000818361054a9190610813565b905092915050565b6000819050919050565b61056581610552565b82525050565b6000602082019050610580600083018461055c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105c05780820151818401526020810190506105a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e882610586565b6105f28185610591565b93506106028185602086016105a2565b61060b816105cc565b840191505092915050565b6000602082019050818103600083015261063081846105dd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106688261063d565b9050919050565b6106788161065d565b811461068357600080fd5b50565b6000813590506106958161066f565b92915050565b6106a481610552565b81146106af57600080fd5b50565b6000813590506106c18161069b565b92915050565b6000806000606084860312156106e0576106df610638565b5b60006106ee86828701610686565b93505060206106ff86828701610686565b9250506040610710868287016106b2565b9150509250925092565b60008115159050919050565b61072f8161071a565b82525050565b600060208201905061074a6000830184610726565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061079757607f821691505b6020821081036107aa576107a9610750565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea82610552565b91506107f583610552565b925082820390508181111561080d5761080c6107b0565b5b92915050565b600061081e82610552565b915061082983610552565b9250828201905080821115610841576108406107b0565b5b9291505056fea2646970667358221220850fc3aef9bb1e28b3ec1f71b023a8c5b8563e9bc2e70cddf82bfbfa7064532564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77656233436C756273546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x50 SWAP2 SWAP1 PUSH3 0x32B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5743540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP2 PUSH3 0x97 SWAP2 SWAP1 PUSH3 0x32B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x412 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x133 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x149 JUMPI PUSH3 0x148 PUSH3 0xEB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1B3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x174 JUMP JUMPDEST PUSH3 0x1BF DUP7 DUP4 PUSH3 0x174 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20C PUSH3 0x206 PUSH3 0x200 DUP5 PUSH3 0x1D7 JUMP JUMPDEST PUSH3 0x1E1 JUMP JUMPDEST PUSH3 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x228 DUP4 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x240 PUSH3 0x237 DUP3 PUSH3 0x213 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x181 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x257 PUSH3 0x248 JUMP JUMPDEST PUSH3 0x264 DUP2 DUP5 DUP5 PUSH3 0x21D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x28C JUMPI PUSH3 0x280 PUSH1 0x0 DUP3 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x26A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2DB JUMPI PUSH3 0x2A5 DUP2 PUSH3 0x14F JUMP JUMPDEST PUSH3 0x2B0 DUP5 PUSH3 0x164 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2C0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2D8 PUSH3 0x2CF DUP6 PUSH3 0x164 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x269 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x300 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2E0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B DUP4 DUP4 PUSH3 0x2ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x336 DUP3 PUSH3 0xB1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0xBC JUMP JUMPDEST JUMPDEST PUSH3 0x35E DUP3 SLOAD PUSH3 0x11A JUMP JUMPDEST PUSH3 0x36B DUP3 DUP3 DUP6 PUSH3 0x290 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3A3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x38E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x39A DUP6 DUP3 PUSH3 0x30D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x40A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3B3 DUP7 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3DD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3B6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3FD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3F9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x87D DUP1 PUSH3 0x422 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x811C34D3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x19D37E4A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2AEFC8D2 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x1F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19D SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22D SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DE DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x526 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x473 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x53C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 DUP3 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x5F2 DUP2 DUP6 PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH2 0x602 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x630 DUP2 DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x65D JUMP JUMPDEST DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x695 DUP2 PUSH2 0x66F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP2 EQ PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C1 DUP2 PUSH2 0x69B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E0 JUMPI PUSH2 0x6DF PUSH2 0x638 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6FF DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x710 DUP7 DUP3 DUP8 ADD PUSH2 0x6B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F DUP2 PUSH2 0x71A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x797 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AA JUMPI PUSH2 0x7A9 PUSH2 0x750 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F5 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x7B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81E DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x829 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x7B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xF 0xC3 0xAE 0xF9 0xBB 0x1E 0x28 0xB3 0xEC 0x1F PUSH18 0xB023A8C5B8563E9BC2E70CDDF82BFBFA7064 MSTORE8 0x25 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "467:1161:1:-:0;;;698:5;672:31;;710:42;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;759:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;817:2;794:25;;467:1161;;;;;;;;;;;;7:99:2;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;467:1161:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 1340,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balancesOf_331": {
									"entryPoint": 338,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_329": {
									"entryPoint": 350,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 1318,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_326": {
									"entryPoint": 500,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenName_323": {
									"entryPoint": 356,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totatSupply_320": {
									"entryPoint": 344,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_426": {
									"entryPoint": 498,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transfer_422": {
									"entryPoint": 642,
									"id": 422,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5035:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "512:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "484:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "494:6:2",
														"type": ""
													}
												],
												"src": "442:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "643:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "681:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "615:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "620:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "631:11:2",
														"type": ""
													}
												],
												"src": "547:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "784:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "803:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "798:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "863:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "835:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "837:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "849:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "817:3:2",
																"statements": []
															},
															"src": "813:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "960:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "935:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "766:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "771:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "776:6:2",
														"type": ""
													}
												],
												"src": "722:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1032:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1005:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1015:6:2",
														"type": ""
													}
												],
												"src": "974:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1174:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1246:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1407:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1155:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1162:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1170:3:2",
														"type": ""
													}
												],
												"src": "1082:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1685:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1555:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1567:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1578:4:2",
														"type": ""
													}
												],
												"src": "1465:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1834:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1817:6:2",
														"type": ""
													}
												],
												"src": "1784:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2166:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2181:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2188:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2138:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2148:7:2",
														"type": ""
													}
												],
												"src": "2111:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2288:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2298:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2309:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2298:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2270:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2280:7:2",
														"type": ""
													}
												],
												"src": "2243:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2388:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:43:2"
															},
															"nodeType": "YulIf",
															"src": "2398:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2381:5:2",
														"type": ""
													}
												],
												"src": "2345:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2535:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2535:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2600:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2573:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2573:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2503:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2511:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2519:5:2",
														"type": ""
													}
												],
												"src": "2473:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2661:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2718:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2684:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2691:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2691:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2681:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:43:2"
															},
															"nodeType": "YulIf",
															"src": "2671:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2654:5:2",
														"type": ""
													}
												],
												"src": "2618:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2817:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2846:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2846:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2776:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2784:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2792:5:2",
														"type": ""
													}
												],
												"src": "2746:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2991:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3037:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3039:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3039:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3039:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3012:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3021:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3008:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3004:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:32:2"
															},
															"nodeType": "YulIf",
															"src": "3001:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3130:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3145:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3159:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3149:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3174:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3209:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3220:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3205:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3205:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3229:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3184:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3174:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3257:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3272:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3276:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3302:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3337:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3348:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3333:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3333:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3357:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3312:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3302:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3385:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3400:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3404:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3430:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3465:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3476:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3485:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3440:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3440:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3430:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2945:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2956:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2968:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2976:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2984:6:2",
														"type": ""
													}
												],
												"src": "2891:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3558:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3568:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3593:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3586:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3568:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3540:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3550:7:2",
														"type": ""
													}
												],
												"src": "3516:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3671:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3688:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3708:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3693:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3681:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3659:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3666:3:2",
														"type": ""
													}
												],
												"src": "3612:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3819:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3829:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3841:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3829:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3865:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3865:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3791:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3803:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3814:4:2",
														"type": ""
													}
												],
												"src": "3727:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3971:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4085:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4078:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4112:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4102:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4102:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4102:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3943:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4190:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4204:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4210:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4200:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4190:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4221:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4251:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4257:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4247:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4225:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4298:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4312:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4326:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4334:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4322:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4322:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4312:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4278:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:26:2"
															},
															"nodeType": "YulIf",
															"src": "4268:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4401:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4415:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4415:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4415:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4365:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4396:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4385:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4362:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:38:2"
															},
															"nodeType": "YulIf",
															"src": "4359:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4164:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4173:6:2",
														"type": ""
													}
												],
												"src": "4129:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4483:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4503:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4600:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4590:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4621:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4614:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4455:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4686:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4696:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4719:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4701:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4696:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4730:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4753:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4735:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4730:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4764:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4776:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4779:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4764:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4806:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4808:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4808:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4808:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4797:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4803:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4794:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:11:2"
															},
															"nodeType": "YulIf",
															"src": "4791:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4672:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4675:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4681:4:2",
														"type": ""
													}
												],
												"src": "4641:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4885:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4895:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4918:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4900:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4895:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4929:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4952:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4934:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4929:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4963:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4974:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4977:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5003:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5005:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5005:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5005:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4995:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4998:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:10:2"
															},
															"nodeType": "YulIf",
															"src": "4989:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4872:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4875:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4881:3:2",
														"type": ""
													}
												],
												"src": "4841:191:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c02a9311161005b5780636c02a931146100dc578063811c34d3146100fa57806395d89b4114610104578063beabacc8146101225761007d565b806319d37e4a146100825780632aefc8d2146100a0578063313ce567146100be575b600080fd5b61008a610152565b604051610097919061056b565b60405180910390f35b6100a8610158565b6040516100b5919061056b565b60405180910390f35b6100c661015e565b6040516100d3919061056b565b60405180910390f35b6100e4610164565b6040516100f19190610616565b60405180910390f35b6101026101f2565b005b61010c6101f4565b6040516101199190610616565b60405180910390f35b61013c600480360381019061013791906106c7565b610282565b6040516101499190610735565b60405180910390f35b60045481565b60005481565b60035481565b600180546101719061077f565b80601f016020809104026020016040519081016040528092919081815260200182805461019d9061077f565b80156101ea5780601f106101bf576101008083540402835291602001916101ea565b820191906000526020600020905b8154815290600101906020018083116101cd57829003601f168201915b505050505081565b565b600280546102019061077f565b80601f016020809104026020016040519081016040528092919081815260200182805461022d9061077f565b801561027a5780601f1061024f5761010080835404028352916020019161027a565b820191906000526020600020905b81548152906001019060200180831161025d57829003601f168201915b505050505081565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102cf57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561031b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361038c57600080fd5b6103de82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061047382600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610513919061056b565b60405180910390a3600190509392505050565b6000818361053491906107df565b905092915050565b6000818361054a9190610813565b905092915050565b6000819050919050565b61056581610552565b82525050565b6000602082019050610580600083018461055c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105c05780820151818401526020810190506105a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e882610586565b6105f28185610591565b93506106028185602086016105a2565b61060b816105cc565b840191505092915050565b6000602082019050818103600083015261063081846105dd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106688261063d565b9050919050565b6106788161065d565b811461068357600080fd5b50565b6000813590506106958161066f565b92915050565b6106a481610552565b81146106af57600080fd5b50565b6000813590506106c18161069b565b92915050565b6000806000606084860312156106e0576106df610638565b5b60006106ee86828701610686565b93505060206106ff86828701610686565b9250506040610710868287016106b2565b9150509250925092565b60008115159050919050565b61072f8161071a565b82525050565b600060208201905061074a6000830184610726565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061079757607f821691505b6020821081036107aa576107a9610750565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea82610552565b91506107f583610552565b925082820390508181111561080d5761080c6107b0565b5b92915050565b600061081e82610552565b915061082983610552565b9250828201905080821115610841576108406107b0565b5b9291505056fea2646970667358221220850fc3aef9bb1e28b3ec1f71b023a8c5b8563e9bc2e70cddf82bfbfa7064532564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x811C34D3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x122 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x19D37E4A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2AEFC8D2 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x1F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19D SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22D SWAP1 PUSH2 0x77F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DE DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x526 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x473 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x53C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x813 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 DUP3 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x5F2 DUP2 DUP6 PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH2 0x602 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x60B DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x630 DUP2 DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x65D JUMP JUMPDEST DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x695 DUP2 PUSH2 0x66F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP2 EQ PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C1 DUP2 PUSH2 0x69B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E0 JUMPI PUSH2 0x6DF PUSH2 0x638 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6FF DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x710 DUP7 DUP3 DUP8 ADD PUSH2 0x6B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F DUP2 PUSH2 0x71A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x797 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AA JUMPI PUSH2 0x7A9 PUSH2 0x750 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F5 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x7B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81E DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x829 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x7B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xF 0xC3 0xAE 0xF9 0xBB 0x1E 0x28 0xB3 0xEC 0x1F PUSH18 0xB023A8C5B8563E9BC2E70CDDF82BFBFA7064 MSTORE8 0x25 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "467:1161:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;672:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;794:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:80;;;:::i;:::-;;759:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;844:22;;;;:::o;672:31::-;;;;:::o;794:25::-;;;;:::o;710:42::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1545:80::-;:::o;759:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1044:493::-;1128:4;1176:1;1153:8;:20;1162:10;1153:20;;;;;;;;;;;;;;;;:24;1145:33;;;;;;1221:7;1197:8;:20;1206:10;1197:20;;;;;;;;;;;;;;;;:31;;1189:40;;;;;;1269:1;1248:23;;:9;:23;;;1240:32;;;;;;1304:10;1291:23;;:9;:23;;;1283:32;;;;;;1351:33;1376:7;1351:8;:20;1360:10;1351:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;1328:8;:20;1337:10;1328:20;;;;;;;;;;;;;;;:56;;;;1417:32;1441:7;1417:8;:19;1426:9;1417:19;;;;;;;;;;;;;;;;:23;;:32;;;;:::i;:::-;1395:8;:19;1404:9;1395:19;;;;;;;;;;;;;;;:54;;;;1486:9;1465:40;;1474:10;1465:40;;;1497:7;1465:40;;;;;;:::i;:::-;;;;;;;;1525:4;1518:11;;1044:493;;;;;:::o;3122:96:0:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:619::-;2968:6;2976;2984;3033:2;3021:9;3012:7;3008:23;3004:32;3001:119;;;3039:79;;:::i;:::-;3001:119;3159:1;3184:53;3229:7;3220:6;3209:9;3205:22;3184:53;:::i;:::-;3174:63;;3130:117;3286:2;3312:53;3357:7;3348:6;3337:9;3333:22;3312:53;:::i;:::-;3302:63;;3257:118;3414:2;3440:53;3485:7;3476:6;3465:9;3461:22;3440:53;:::i;:::-;3430:63;;3385:118;2891:619;;;;;:::o;3516:90::-;3550:7;3593:5;3586:13;3579:21;3568:32;;3516:90;;;:::o;3612:109::-;3693:21;3708:5;3693:21;:::i;:::-;3688:3;3681:34;3612:109;;:::o;3727:210::-;3814:4;3852:2;3841:9;3837:18;3829:26;;3865:65;3927:1;3916:9;3912:17;3903:6;3865:65;:::i;:::-;3727:210;;;;:::o;3943:180::-;3991:77;3988:1;3981:88;4088:4;4085:1;4078:15;4112:4;4109:1;4102:15;4129:320;4173:6;4210:1;4204:4;4200:12;4190:22;;4257:1;4251:4;4247:12;4278:18;4268:81;;4334:4;4326:6;4322:17;4312:27;;4268:81;4396:2;4388:6;4385:14;4365:18;4362:38;4359:84;;4415:18;;:::i;:::-;4359:84;4180:269;4129:320;;;:::o;4455:180::-;4503:77;4500:1;4493:88;4600:4;4597:1;4590:15;4624:4;4621:1;4614:15;4641:194;4681:4;4701:20;4719:1;4701:20;:::i;:::-;4696:25;;4735:20;4753:1;4735:20;:::i;:::-;4730:25;;4779:1;4776;4772:9;4764:17;;4803:1;4797:4;4794:11;4791:37;;;4808:18;;:::i;:::-;4791:37;4641:194;;;;:::o;4841:191::-;4881:3;4900:20;4918:1;4900:20;:::i;:::-;4895:25;;4934:20;4952:1;4934:20;:::i;:::-;4929:25;;4977:1;4974;4970:9;4963:16;;4998:3;4995:1;4992:10;4989:36;;;5005:18;;:::i;:::-;4989:36;4841:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "434600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balancesOf()": "2430",
								"decimals()": "2474",
								"symbol()": "infinite",
								"tokenName()": "infinite",
								"totatSupply()": "2452",
								"transfer(address,address,uint256)": "infinite",
								"transferFrom()": "166"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 698,
									"end": 703,
									"name": "PUSH",
									"source": 1,
									"value": "2710"
								},
								{
									"begin": 672,
									"end": 703,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 703,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "77656233436C756273546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 710,
									"end": 752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 710,
									"end": 752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 710,
									"end": 752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "5743540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 759,
									"end": 787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 759,
									"end": 787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 817,
									"end": 819,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 794,
									"end": 819,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 794,
									"end": 819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 1628,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220850fc3aef9bb1e28b3ec1f71b023a8c5b8563e9bc2e70cddf82bfbfa7064532564736f6c63430008120033",
									".code": [
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "6C02A931"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "6C02A931"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "811C34D3"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "BEABACC8"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "19D37E4A"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "2AEFC8D2"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 1628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 844,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 844,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 672,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 672,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 794,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 794,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 710,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 710,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1545,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 759,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1044,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1044,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1044,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 703,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 672,
											"end": 703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 794,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 710,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 710,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 710,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1545,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 759,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 759,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1173,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1177,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1145,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1314,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1347,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1484,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "C951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1465,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1505,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2418,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2573,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2691,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3019,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3031,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3036,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3001,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3039,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3039,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3118,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3039,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3001,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3229,
											"end": 3236,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3184,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3237,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3357,
											"end": 3364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3312,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3365,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3312,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3440,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3440,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3440,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3606,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3516,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3600,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3516,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3612,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3693,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3688,
											"end": 3691,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3865,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3930,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3865,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3943,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4078,
											"end": 4093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4449,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4129,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4204,
											"end": 4208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4212,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4268,
											"end": 4349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4334,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4339,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4349,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4268,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4399,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4400,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4359,
											"end": 4443,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4415,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4359,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4180,
											"end": 4449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4635,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4455,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4500,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4581,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4590,
											"end": 4605,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4628,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4629,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4701,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4735,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4772,
											"end": 4781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4797,
											"end": 4801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4805,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4808,
											"end": 4826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4900,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4920,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4900,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4934,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 4954,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4934,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 4975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5025,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4989,
											"end": 5025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5005,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5025,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4989,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"web3token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balancesOf()": "19d37e4a",
							"decimals()": "313ce567",
							"symbol()": "95d89b41",
							"tokenName()": "6c02a931",
							"totatSupply()": "2aefc8d2",
							"transfer(address,address,uint256)": "beabacc8",
							"transferFrom()": "811c34d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TRANSFER\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balancesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totatSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"web3token.sol\":\"web3ClubsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"web3token.sol\":{\"keccak256\":\"0x7df40946bee85c63b84fbc619a9992d4309c4c9b600da524010dcb4eb44bd8c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3db64989854fc4d04ad362e557641a155fdb0dc35de6ad8cfc4e475da6fc504d\",\"dweb:/ipfs/QmXrNqYX48GZ3mbq4TeD8uPvpaQbS9wtGW3dwTx8wco5Dk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "totatSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "tokenName",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 326,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 329,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 331,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "balancesOf",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 335,
								"contract": "web3token.sol:web3ClubsToken",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> web3token.sol:31:23:\n   |\n31 |     function transfer(address _sender, address _receiver, uint _amount) public returns (bool) {\n   |                       ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1077,
					"file": "web3token.sol",
					"start": 1062
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"web3token.sol": {
				"ast": {
					"absolutePath": "web3token.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"web3ClubsToken": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "224:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 428,
							"sourceUnit": 312,
							"src": "350:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "web3ClubsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 427,
							"linearizedBaseContracts": [
								427
							],
							"name": "web3ClubsToken",
							"nameLocation": "476:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nameLocations": [
											"625:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "625:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "619:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2aefc8d2",
									"id": 320,
									"mutability": "mutable",
									"name": "totatSupply",
									"nameLocation": "684:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "672:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "672:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "698:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 323,
									"mutability": "mutable",
									"name": "tokenName",
									"nameLocation": "724:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "710:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 321,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "710:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "77656233436c756273546f6b656e",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "736:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_af36faeed2b4510d6449f1fffca300f5696fcba2c1dc459fc906863a07655165",
											"typeString": "literal_string \"web3ClubsToken\""
										},
										"value": "web3ClubsToken"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 326,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "773:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "759:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 324,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "759:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "574354",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "782:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c86c972ec5c054e0e517573f7718897d3ae8cbdee02e62c4a18b3c844e5560f5",
											"typeString": "literal_string \"WCT\""
										},
										"value": "WCT"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 329,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "806:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "794:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "794:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19d37e4a",
									"id": 331,
									"mutability": "mutable",
									"name": "balancesOf",
									"nameLocation": "856:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "844:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "844:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "944:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 427,
									"src": "915:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 334,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "924:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "915:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "c951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a9",
									"id": 343,
									"name": "TRANSFER",
									"nameLocation": "967:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "992:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "976:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1015:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "999:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1028:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1020:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:60:1"
									},
									"src": "961:75:1"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1134:403:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1153:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1162:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1166:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1162:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1153:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1176:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1153:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1145:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1145:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1145:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 364,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1197:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"expression": {
																		"id": 365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1206:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1210:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1206:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1197:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 368,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1221:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1197:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1189:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1248:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1269:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1261:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1261:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1261:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1240:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1291:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 383,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1304:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1308:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1304:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1291:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1283:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1283:32:1"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 388,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1328:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 391,
														"indexExpression": {
															"expression": {
																"id": 389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1337:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1341:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1337:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1328:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 397,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 392,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1351:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"expression": {
																		"id": 393,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1360:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1364:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1360:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1351:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1372:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1351:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1351:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1328:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1328:56:1"
											},
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 401,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1395:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 403,
														"indexExpression": {
															"id": 402,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "1404:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1395:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 408,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1441:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 404,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1417:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "1426:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1417:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1437:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1417:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1417:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1395:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1395:54:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1474:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1478:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1474:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "1486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "TRANSFER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "1465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1465:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "1460:45:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1525:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 353,
												"id": 420,
												"nodeType": "Return",
												"src": "1518:11:1"
											}
										]
									},
									"functionSelector": "beabacc8",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1053:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1070:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1062:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "1087:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1079:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1103:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1098:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1098:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:50:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1128:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:1"
									},
									"scope": 427,
									"src": "1044:493:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1581:44:1",
										"statements": []
									},
									"functionSelector": "811c34d3",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1554:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:1"
									},
									"scope": 427,
									"src": "1545:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 428,
							"src": "467:1161:1",
							"usedErrors": []
						}
					],
					"src": "224:1410:1"
				},
				"id": 1
			}
		}
	}
}
{
	"id": "9a4cb5b7c1d09d437404a06cd544844d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// The above line indicates that the license for this Solidity code is MIT.\r\n\r\n// The following line specifies that the Solidity compiler should only be used from version v0.8.13 to v0.9.0.\r\npragma solidity ^0.8.13;\r\n\r\n// The following line imports the SafeMath library from the OpenZeppelin smart contract library.\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\n// The following contract is named web3ClubsToken.\r\ncontract web3ClubsToken {\r\n\r\n    // The following line specifies that the SafeMath library should be used for uint256 data types in this contract.\r\n    using SafeMath for uint256;\r\n\r\n    //global var\r\n    uint public totalSupply = 1000000 * decimalFactor;\r\n    string public tokenName = \"web3ClubsToken\";\r\n    string public symbol = \"WCT\";\r\n    uint public decimals = 18; //decimal numbers\r\n    uint public decimalFactor = 10 ** uint256(decimals);\r\n\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    //mapping\r\n    mapping (address => uint256) public balancesOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    constructor() {\r\n        balancesOf[msg.sender] = totalSupply;\r\n\r\n    }\r\n\r\n\r\n    function transfer() public view {\r\n\r\n    }\r\n\r\n    function transferFrom() public view {\r\n        \r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool success){\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return success;\r\n    }\r\n\r\n    function mintToken() public returns (uint)  {\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc20.sol": {
				"web3ClubsToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balancesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc20.sol\":523:1777  contract web3ClubsToken {... */\n  mstore(0x40, 0x80)\n    /* \"erc20.sol\":764:777  decimalFactor */\n  sload(0x04)\n    /* \"erc20.sol\":754:761  1000000 */\n  0x0f4240\n    /* \"erc20.sol\":754:777  1000000 * decimalFactor */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"erc20.sol\":728:777  uint public totalSupply = 1000000 * decimalFactor */\n  0x00\n  sstore\n    /* \"erc20.sol\":784:826  string public tokenName = \"web3ClubsToken\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x77656233436c756273546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"erc20.sol\":833:861  string public symbol = \"WCT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5743540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_5:\n  pop\n    /* \"erc20.sol\":891:893  18 */\n  0x12\n    /* \"erc20.sol\":868:893  uint public decimals = 18 */\n  0x03\n  sstore\n    /* \"erc20.sol\":960:968  decimals */\n  sload(0x03)\n    /* \"erc20.sol\":946:948  10 */\n  0x0a\n    /* \"erc20.sol\":946:969  10 ** uint256(decimals) */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"erc20.sol\":918:969  uint public decimalFactor = 10 ** uint256(decimals) */\n  0x04\n  sstore\n    /* \"erc20.sol\":1292:1363  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n    /* \"erc20.sol\":1342:1353  totalSupply */\n  sload(0x00)\n    /* \"erc20.sol\":1317:1327  balancesOf */\n  0x05\n    /* \"erc20.sol\":1317:1339  balancesOf[msg.sender] */\n  0x00\n    /* \"erc20.sol\":1328:1338  msg.sender */\n  caller\n    /* \"erc20.sol\":1317:1339  balancesOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"erc20.sol\":1317:1353  balancesOf[msg.sender] = totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"erc20.sol\":523:1777  contract web3ClubsToken {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:84   */\ntag_12:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_13:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:686   */\ntag_2:\n    /* \"#utility.yul\":316:323   */\n  0x00\n    /* \"#utility.yul\":339:359   */\n  tag_40\n    /* \"#utility.yul\":357:358   */\n  dup3\n    /* \"#utility.yul\":339:359   */\n  tag_12\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":334:359   */\n  swap2\n  pop\n    /* \"#utility.yul\":373:393   */\n  tag_41\n    /* \"#utility.yul\":391:392   */\n  dup4\n    /* \"#utility.yul\":373:393   */\n  tag_12\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":368:393   */\n  swap3\n  pop\n    /* \"#utility.yul\":428:429   */\n  dup3\n    /* \"#utility.yul\":425:426   */\n  dup3\n    /* \"#utility.yul\":421:430   */\n  mul\n    /* \"#utility.yul\":450:480   */\n  tag_42\n    /* \"#utility.yul\":468:479   */\n  dup2\n    /* \"#utility.yul\":450:480   */\n  tag_12\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":439:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":629:630   */\n  dup3\n    /* \"#utility.yul\":620:627   */\n  dup3\n    /* \"#utility.yul\":616:631   */\n  div\n    /* \"#utility.yul\":613:614   */\n  dup5\n    /* \"#utility.yul\":610:632   */\n  eq\n    /* \"#utility.yul\":590:591   */\n  dup4\n    /* \"#utility.yul\":583:592   */\n  iszero\n    /* \"#utility.yul\":563:646   */\n  or\n    /* \"#utility.yul\":540:679   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":659:677   */\n  tag_44\n  tag_13\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":540:679   */\ntag_43:\n    /* \"#utility.yul\":324:686   */\n  pop\n    /* \"#utility.yul\":276:686   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":692:791   */\ntag_14:\n    /* \"#utility.yul\":744:750   */\n  0x00\n    /* \"#utility.yul\":778:783   */\n  dup2\n    /* \"#utility.yul\":772:784   */\n  mload\n    /* \"#utility.yul\":762:784   */\n  swap1\n  pop\n    /* \"#utility.yul\":692:791   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":797:977   */\ntag_15:\n    /* \"#utility.yul\":845:922   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":835:923   */\n  mstore\n    /* \"#utility.yul\":942:946   */\n  0x41\n    /* \"#utility.yul\":939:940   */\n  0x04\n    /* \"#utility.yul\":932:947   */\n  mstore\n    /* \"#utility.yul\":966:970   */\n  0x24\n    /* \"#utility.yul\":963:964   */\n  0x00\n    /* \"#utility.yul\":956:971   */\n  revert\n    /* \"#utility.yul\":983:1163   */\ntag_16:\n    /* \"#utility.yul\":1031:1108   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1028:1029   */\n  0x00\n    /* \"#utility.yul\":1021:1109   */\n  mstore\n    /* \"#utility.yul\":1128:1132   */\n  0x22\n    /* \"#utility.yul\":1125:1126   */\n  0x04\n    /* \"#utility.yul\":1118:1133   */\n  mstore\n    /* \"#utility.yul\":1152:1156   */\n  0x24\n    /* \"#utility.yul\":1149:1150   */\n  0x00\n    /* \"#utility.yul\":1142:1157   */\n  revert\n    /* \"#utility.yul\":1169:1489   */\ntag_17:\n    /* \"#utility.yul\":1213:1219   */\n  0x00\n    /* \"#utility.yul\":1250:1251   */\n  0x02\n    /* \"#utility.yul\":1244:1248   */\n  dup3\n    /* \"#utility.yul\":1240:1252   */\n  div\n    /* \"#utility.yul\":1230:1252   */\n  swap1\n  pop\n    /* \"#utility.yul\":1297:1298   */\n  0x01\n    /* \"#utility.yul\":1291:1295   */\n  dup3\n    /* \"#utility.yul\":1287:1299   */\n  and\n    /* \"#utility.yul\":1318:1336   */\n  dup1\n    /* \"#utility.yul\":1308:1389   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1374:1378   */\n  0x7f\n    /* \"#utility.yul\":1366:1372   */\n  dup3\n    /* \"#utility.yul\":1362:1379   */\n  and\n    /* \"#utility.yul\":1352:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1308:1389   */\ntag_49:\n    /* \"#utility.yul\":1436:1438   */\n  0x20\n    /* \"#utility.yul\":1428:1434   */\n  dup3\n    /* \"#utility.yul\":1425:1439   */\n  lt\n    /* \"#utility.yul\":1405:1423   */\n  dup2\n    /* \"#utility.yul\":1402:1440   */\n  sub\n    /* \"#utility.yul\":1399:1483   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1455:1473   */\n  tag_51\n  tag_16\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1399:1483   */\ntag_50:\n    /* \"#utility.yul\":1220:1489   */\n  pop\n    /* \"#utility.yul\":1169:1489   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1495:1636   */\ntag_18:\n    /* \"#utility.yul\":1544:1548   */\n  0x00\n    /* \"#utility.yul\":1567:1570   */\n  dup2\n    /* \"#utility.yul\":1559:1570   */\n  swap1\n  pop\n    /* \"#utility.yul\":1590:1593   */\n  dup2\n    /* \"#utility.yul\":1587:1588   */\n  0x00\n    /* \"#utility.yul\":1580:1594   */\n  mstore\n    /* \"#utility.yul\":1624:1628   */\n  0x20\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1611:1629   */\n  keccak256\n    /* \"#utility.yul\":1603:1629   */\n  swap1\n  pop\n    /* \"#utility.yul\":1495:1636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1642:1735   */\ntag_19:\n    /* \"#utility.yul\":1679:1685   */\n  0x00\n    /* \"#utility.yul\":1726:1728   */\n  0x20\n    /* \"#utility.yul\":1721:1723   */\n  0x1f\n    /* \"#utility.yul\":1714:1719   */\n  dup4\n    /* \"#utility.yul\":1710:1724   */\n  add\n    /* \"#utility.yul\":1706:1729   */\n  div\n    /* \"#utility.yul\":1696:1729   */\n  swap1\n  pop\n    /* \"#utility.yul\":1642:1735   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1741:1848   */\ntag_20:\n    /* \"#utility.yul\":1785:1793   */\n  0x00\n    /* \"#utility.yul\":1835:1840   */\n  dup3\n    /* \"#utility.yul\":1829:1833   */\n  dup3\n    /* \"#utility.yul\":1825:1841   */\n  shl\n    /* \"#utility.yul\":1804:1841   */\n  swap1\n  pop\n    /* \"#utility.yul\":1741:1848   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:2247   */\ntag_21:\n    /* \"#utility.yul\":1923:1929   */\n  0x00\n    /* \"#utility.yul\":1973:1974   */\n  0x08\n    /* \"#utility.yul\":1961:1971   */\n  dup4\n    /* \"#utility.yul\":1957:1975   */\n  mul\n    /* \"#utility.yul\":1996:2093   */\n  tag_56\n    /* \"#utility.yul\":2026:2092   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2015:2024   */\n  dup3\n    /* \"#utility.yul\":1996:2093   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2114:2153   */\n  tag_57\n    /* \"#utility.yul\":2144:2152   */\n  dup7\n    /* \"#utility.yul\":2133:2142   */\n  dup4\n    /* \"#utility.yul\":2114:2153   */\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2102:2153   */\n  swap6\n  pop\n    /* \"#utility.yul\":2186:2190   */\n  dup1\n    /* \"#utility.yul\":2182:2191   */\n  not\n    /* \"#utility.yul\":2175:2180   */\n  dup5\n    /* \"#utility.yul\":2171:2192   */\n  and\n    /* \"#utility.yul\":2162:2192   */\n  swap4\n  pop\n    /* \"#utility.yul\":2235:2239   */\n  dup1\n    /* \"#utility.yul\":2225:2233   */\n  dup7\n    /* \"#utility.yul\":2221:2240   */\n  and\n    /* \"#utility.yul\":2214:2219   */\n  dup5\n    /* \"#utility.yul\":2211:2241   */\n  or\n    /* \"#utility.yul\":2201:2241   */\n  swap3\n  pop\n    /* \"#utility.yul\":1930:2247   */\n  pop\n  pop\n    /* \"#utility.yul\":1854:2247   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2253:2313   */\ntag_22:\n    /* \"#utility.yul\":2281:2284   */\n  0x00\n    /* \"#utility.yul\":2302:2307   */\n  dup2\n    /* \"#utility.yul\":2295:2307   */\n  swap1\n  pop\n    /* \"#utility.yul\":2253:2313   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2319:2461   */\ntag_23:\n    /* \"#utility.yul\":2369:2378   */\n  0x00\n    /* \"#utility.yul\":2402:2455   */\n  tag_60\n    /* \"#utility.yul\":2420:2454   */\n  tag_61\n    /* \"#utility.yul\":2429:2453   */\n  tag_62\n    /* \"#utility.yul\":2447:2452   */\n  dup5\n    /* \"#utility.yul\":2429:2453   */\n  tag_12\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2420:2454   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2402:2455   */\n  tag_12\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2389:2455   */\n  swap1\n  pop\n    /* \"#utility.yul\":2319:2461   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2467:2542   */\ntag_24:\n    /* \"#utility.yul\":2510:2513   */\n  0x00\n    /* \"#utility.yul\":2531:2536   */\n  dup2\n    /* \"#utility.yul\":2524:2536   */\n  swap1\n  pop\n    /* \"#utility.yul\":2467:2542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2548:2817   */\ntag_25:\n    /* \"#utility.yul\":2658:2697   */\n  tag_65\n    /* \"#utility.yul\":2689:2696   */\n  dup4\n    /* \"#utility.yul\":2658:2697   */\n  tag_23\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2719:2810   */\n  tag_66\n    /* \"#utility.yul\":2768:2809   */\n  tag_67\n    /* \"#utility.yul\":2792:2808   */\n  dup3\n    /* \"#utility.yul\":2768:2809   */\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2760:2766   */\n  dup5\n    /* \"#utility.yul\":2753:2757   */\n  dup5\n    /* \"#utility.yul\":2747:2758   */\n  sload\n    /* \"#utility.yul\":2719:2810   */\n  tag_21\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2713:2717   */\n  dup3\n    /* \"#utility.yul\":2706:2811   */\n  sstore\n    /* \"#utility.yul\":2624:2817   */\n  pop\n    /* \"#utility.yul\":2548:2817   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2823:2896   */\ntag_26:\n    /* \"#utility.yul\":2868:2871   */\n  0x00\n    /* \"#utility.yul\":2823:2896   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2902:3091   */\ntag_27:\n    /* \"#utility.yul\":2979:3011   */\n  tag_70\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3020:3085   */\n  tag_71\n    /* \"#utility.yul\":3078:3084   */\n  dup2\n    /* \"#utility.yul\":3070:3076   */\n  dup5\n    /* \"#utility.yul\":3064:3068   */\n  dup5\n    /* \"#utility.yul\":3020:3085   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2955:3091   */\n  pop\n    /* \"#utility.yul\":2902:3091   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3097:3283   */\ntag_28:\n    /* \"#utility.yul\":3157:3277   */\ntag_73:\n    /* \"#utility.yul\":3174:3177   */\n  dup2\n    /* \"#utility.yul\":3167:3172   */\n  dup2\n    /* \"#utility.yul\":3164:3178   */\n  lt\n    /* \"#utility.yul\":3157:3277   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3228:3267   */\n  tag_76\n    /* \"#utility.yul\":3265:3266   */\n  0x00\n    /* \"#utility.yul\":3258:3263   */\n  dup3\n    /* \"#utility.yul\":3228:3267   */\n  tag_27\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3201:3202   */\n  0x01\n    /* \"#utility.yul\":3194:3199   */\n  dup2\n    /* \"#utility.yul\":3190:3203   */\n  add\n    /* \"#utility.yul\":3181:3203   */\n  swap1\n  pop\n    /* \"#utility.yul\":3157:3277   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":3097:3283   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3289:3832   */\ntag_29:\n    /* \"#utility.yul\":3390:3392   */\n  0x1f\n    /* \"#utility.yul\":3385:3388   */\n  dup3\n    /* \"#utility.yul\":3382:3393   */\n  gt\n    /* \"#utility.yul\":3379:3825   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3424:3462   */\n  tag_79\n    /* \"#utility.yul\":3456:3461   */\n  dup2\n    /* \"#utility.yul\":3424:3462   */\n  tag_18\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3508:3537   */\n  tag_80\n    /* \"#utility.yul\":3526:3536   */\n  dup5\n    /* \"#utility.yul\":3508:3537   */\n  tag_19\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3498:3506   */\n  dup2\n    /* \"#utility.yul\":3494:3538   */\n  add\n    /* \"#utility.yul\":3691:3693   */\n  0x20\n    /* \"#utility.yul\":3679:3689   */\n  dup6\n    /* \"#utility.yul\":3676:3694   */\n  lt\n    /* \"#utility.yul\":3673:3722   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3712:3720   */\n  dup2\n    /* \"#utility.yul\":3697:3720   */\n  swap1\n  pop\n    /* \"#utility.yul\":3673:3722   */\ntag_81:\n    /* \"#utility.yul\":3735:3815   */\n  tag_82\n    /* \"#utility.yul\":3791:3813   */\n  tag_83\n    /* \"#utility.yul\":3809:3812   */\n  dup6\n    /* \"#utility.yul\":3791:3813   */\n  tag_19\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3781:3789   */\n  dup4\n    /* \"#utility.yul\":3777:3814   */\n  add\n    /* \"#utility.yul\":3764:3775   */\n  dup3\n    /* \"#utility.yul\":3735:3815   */\n  tag_28\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3394:3825   */\n  pop\n  pop\n    /* \"#utility.yul\":3379:3825   */\ntag_78:\n    /* \"#utility.yul\":3289:3832   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3838:3955   */\ntag_30:\n    /* \"#utility.yul\":3892:3900   */\n  0x00\n    /* \"#utility.yul\":3942:3947   */\n  dup3\n    /* \"#utility.yul\":3936:3940   */\n  dup3\n    /* \"#utility.yul\":3932:3948   */\n  shr\n    /* \"#utility.yul\":3911:3948   */\n  swap1\n  pop\n    /* \"#utility.yul\":3838:3955   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3961:4130   */\ntag_31:\n    /* \"#utility.yul\":4005:4011   */\n  0x00\n    /* \"#utility.yul\":4038:4089   */\n  tag_86\n    /* \"#utility.yul\":4086:4087   */\n  0x00\n    /* \"#utility.yul\":4082:4088   */\n  not\n    /* \"#utility.yul\":4074:4079   */\n  dup5\n    /* \"#utility.yul\":4071:4072   */\n  0x08\n    /* \"#utility.yul\":4067:4080   */\n  mul\n    /* \"#utility.yul\":4038:4089   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4034:4090   */\n  not\n    /* \"#utility.yul\":4119:4123   */\n  dup1\n    /* \"#utility.yul\":4113:4117   */\n  dup4\n    /* \"#utility.yul\":4109:4124   */\n  and\n    /* \"#utility.yul\":4099:4124   */\n  swap2\n  pop\n    /* \"#utility.yul\":4012:4130   */\n  pop\n    /* \"#utility.yul\":3961:4130   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4135:4430   */\ntag_32:\n    /* \"#utility.yul\":4211:4215   */\n  0x00\n    /* \"#utility.yul\":4357:4386   */\n  tag_88\n    /* \"#utility.yul\":4382:4385   */\n  dup4\n    /* \"#utility.yul\":4376:4380   */\n  dup4\n    /* \"#utility.yul\":4357:4386   */\n  tag_31\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4349:4386   */\n  swap2\n  pop\n    /* \"#utility.yul\":4419:4422   */\n  dup3\n    /* \"#utility.yul\":4416:4417   */\n  0x02\n    /* \"#utility.yul\":4412:4423   */\n  mul\n    /* \"#utility.yul\":4406:4410   */\n  dup3\n    /* \"#utility.yul\":4403:4424   */\n  or\n    /* \"#utility.yul\":4395:4424   */\n  swap1\n  pop\n    /* \"#utility.yul\":4135:4430   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4435:5830   */\ntag_4:\n    /* \"#utility.yul\":4552:4589   */\n  tag_90\n    /* \"#utility.yul\":4585:4588   */\n  dup3\n    /* \"#utility.yul\":4552:4589   */\n  tag_14\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4654:4672   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4646:4652   */\n  dup2\n    /* \"#utility.yul\":4643:4673   */\n  gt\n    /* \"#utility.yul\":4640:4696   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4676:4694   */\n  tag_92\n  tag_15\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4640:4696   */\ntag_91:\n    /* \"#utility.yul\":4720:4758   */\n  tag_93\n    /* \"#utility.yul\":4752:4756   */\n  dup3\n    /* \"#utility.yul\":4746:4757   */\n  sload\n    /* \"#utility.yul\":4720:4758   */\n  tag_17\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4805:4872   */\n  tag_94\n    /* \"#utility.yul\":4865:4871   */\n  dup3\n    /* \"#utility.yul\":4857:4863   */\n  dup3\n    /* \"#utility.yul\":4851:4855   */\n  dup6\n    /* \"#utility.yul\":4805:4872   */\n  tag_29\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4899:4900   */\n  0x00\n    /* \"#utility.yul\":4923:4927   */\n  0x20\n    /* \"#utility.yul\":4910:4927   */\n  swap1\n  pop\n    /* \"#utility.yul\":4955:4957   */\n  0x1f\n    /* \"#utility.yul\":4947:4953   */\n  dup4\n    /* \"#utility.yul\":4944:4958   */\n  gt\n    /* \"#utility.yul\":4972:4973   */\n  0x01\n    /* \"#utility.yul\":4967:5585   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5629:5630   */\n  0x00\n    /* \"#utility.yul\":5646:5652   */\n  dup5\n    /* \"#utility.yul\":5643:5720   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5695:5704   */\n  dup3\n    /* \"#utility.yul\":5690:5693   */\n  dup8\n    /* \"#utility.yul\":5686:5705   */\n  add\n    /* \"#utility.yul\":5680:5706   */\n  mload\n    /* \"#utility.yul\":5671:5706   */\n  swap1\n  pop\n    /* \"#utility.yul\":5643:5720   */\ntag_97:\n    /* \"#utility.yul\":5746:5813   */\n  tag_98\n    /* \"#utility.yul\":5806:5812   */\n  dup6\n    /* \"#utility.yul\":5799:5804   */\n  dup3\n    /* \"#utility.yul\":5746:5813   */\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5740:5744   */\n  dup7\n    /* \"#utility.yul\":5733:5814   */\n  sstore\n    /* \"#utility.yul\":5602:5824   */\n  pop\n    /* \"#utility.yul\":4937:5824   */\n  jump(tag_95)\n    /* \"#utility.yul\":4967:5585   */\ntag_96:\n    /* \"#utility.yul\":5019:5023   */\n  0x1f\n    /* \"#utility.yul\":5015:5024   */\n  not\n    /* \"#utility.yul\":5007:5013   */\n  dup5\n    /* \"#utility.yul\":5003:5025   */\n  and\n    /* \"#utility.yul\":5053:5090   */\n  tag_99\n    /* \"#utility.yul\":5085:5089   */\n  dup7\n    /* \"#utility.yul\":5053:5090   */\n  tag_18\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5126:5334   */\ntag_100:\n    /* \"#utility.yul\":5140:5147   */\n  dup3\n    /* \"#utility.yul\":5137:5138   */\n  dup2\n    /* \"#utility.yul\":5134:5148   */\n  lt\n    /* \"#utility.yul\":5126:5334   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5219:5228   */\n  dup5\n    /* \"#utility.yul\":5214:5217   */\n  dup10\n    /* \"#utility.yul\":5210:5229   */\n  add\n    /* \"#utility.yul\":5204:5230   */\n  mload\n    /* \"#utility.yul\":5196:5202   */\n  dup3\n    /* \"#utility.yul\":5189:5231   */\n  sstore\n    /* \"#utility.yul\":5270:5271   */\n  0x01\n    /* \"#utility.yul\":5262:5268   */\n  dup3\n    /* \"#utility.yul\":5258:5272   */\n  add\n    /* \"#utility.yul\":5248:5272   */\n  swap2\n  pop\n    /* \"#utility.yul\":5317:5319   */\n  0x20\n    /* \"#utility.yul\":5306:5315   */\n  dup6\n    /* \"#utility.yul\":5302:5320   */\n  add\n    /* \"#utility.yul\":5289:5320   */\n  swap5\n  pop\n    /* \"#utility.yul\":5163:5167   */\n  0x20\n    /* \"#utility.yul\":5160:5161   */\n  dup2\n    /* \"#utility.yul\":5156:5168   */\n  add\n    /* \"#utility.yul\":5151:5168   */\n  swap1\n  pop\n    /* \"#utility.yul\":5126:5334   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":5362:5368   */\n  dup7\n    /* \"#utility.yul\":5353:5360   */\n  dup4\n    /* \"#utility.yul\":5350:5369   */\n  lt\n    /* \"#utility.yul\":5347:5526   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":5420:5429   */\n  dup5\n    /* \"#utility.yul\":5415:5418   */\n  dup10\n    /* \"#utility.yul\":5411:5430   */\n  add\n    /* \"#utility.yul\":5405:5431   */\n  mload\n    /* \"#utility.yul\":5463:5511   */\n  tag_104\n    /* \"#utility.yul\":5505:5509   */\n  0x1f\n    /* \"#utility.yul\":5497:5503   */\n  dup10\n    /* \"#utility.yul\":5493:5510   */\n  and\n    /* \"#utility.yul\":5482:5491   */\n  dup3\n    /* \"#utility.yul\":5463:5511   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5455:5461   */\n  dup4\n    /* \"#utility.yul\":5448:5512   */\n  sstore\n    /* \"#utility.yul\":5370:5526   */\n  pop\n    /* \"#utility.yul\":5347:5526   */\ntag_103:\n    /* \"#utility.yul\":5572:5573   */\n  0x01\n    /* \"#utility.yul\":5568:5569   */\n  0x02\n    /* \"#utility.yul\":5560:5566   */\n  dup9\n    /* \"#utility.yul\":5556:5570   */\n  mul\n    /* \"#utility.yul\":5552:5574   */\n  add\n    /* \"#utility.yul\":5546:5550   */\n  dup9\n    /* \"#utility.yul\":5539:5575   */\n  sstore\n    /* \"#utility.yul\":4974:5585   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4937:5824   */\ntag_95:\n  pop\n    /* \"#utility.yul\":4527:5830   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4435:5830   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5836:5938   */\ntag_33:\n    /* \"#utility.yul\":5878:5886   */\n  0x00\n    /* \"#utility.yul\":5925:5930   */\n  dup2\n    /* \"#utility.yul\":5922:5923   */\n  0x01\n    /* \"#utility.yul\":5918:5931   */\n  shr\n    /* \"#utility.yul\":5897:5931   */\n  swap1\n  pop\n    /* \"#utility.yul\":5836:5938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5944:6792   */\ntag_34:\n    /* \"#utility.yul\":6005:6010   */\n  0x00\n    /* \"#utility.yul\":6012:6016   */\n  dup1\n    /* \"#utility.yul\":6036:6042   */\n  dup3\n    /* \"#utility.yul\":6027:6042   */\n  swap2\n  pop\n    /* \"#utility.yul\":6060:6065   */\n  dup4\n    /* \"#utility.yul\":6051:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6074:6786   */\ntag_107:\n    /* \"#utility.yul\":6095:6096   */\n  0x01\n    /* \"#utility.yul\":6085:6093   */\n  dup6\n    /* \"#utility.yul\":6082:6097   */\n  gt\n    /* \"#utility.yul\":6074:6786   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":6190:6194   */\n  dup1\n    /* \"#utility.yul\":6185:6188   */\n  dup7\n    /* \"#utility.yul\":6181:6195   */\n  div\n    /* \"#utility.yul\":6175:6179   */\n  dup2\n    /* \"#utility.yul\":6172:6196   */\n  gt\n    /* \"#utility.yul\":6169:6219   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6199:6217   */\n  tag_111\n  tag_13\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":6169:6219   */\ntag_110:\n    /* \"#utility.yul\":6249:6250   */\n  0x01\n    /* \"#utility.yul\":6239:6247   */\n  dup6\n    /* \"#utility.yul\":6235:6251   */\n  and\n    /* \"#utility.yul\":6232:6683   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":6664:6668   */\n  dup1\n    /* \"#utility.yul\":6657:6662   */\n  dup3\n    /* \"#utility.yul\":6653:6669   */\n  mul\n    /* \"#utility.yul\":6644:6669   */\n  swap2\n  pop\n    /* \"#utility.yul\":6232:6683   */\ntag_112:\n    /* \"#utility.yul\":6714:6718   */\n  dup1\n    /* \"#utility.yul\":6708:6712   */\n  dup2\n    /* \"#utility.yul\":6704:6719   */\n  mul\n    /* \"#utility.yul\":6696:6719   */\n  swap1\n  pop\n    /* \"#utility.yul\":6744:6776   */\n  tag_113\n    /* \"#utility.yul\":6767:6775   */\n  dup6\n    /* \"#utility.yul\":6744:6776   */\n  tag_33\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":6732:6776   */\n  swap5\n  pop\n    /* \"#utility.yul\":6074:6786   */\n  jump(tag_107)\ntag_109:\n    /* \"#utility.yul\":5944:6792   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6798:7871   */\ntag_35:\n    /* \"#utility.yul\":6852:6857   */\n  0x00\n    /* \"#utility.yul\":7043:7051   */\n  dup3\n    /* \"#utility.yul\":7033:7073   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":7064:7065   */\n  0x01\n    /* \"#utility.yul\":7055:7065   */\n  swap1\n  pop\n    /* \"#utility.yul\":7066:7071   */\n  jump(tag_114)\n    /* \"#utility.yul\":7033:7073   */\ntag_115:\n    /* \"#utility.yul\":7092:7096   */\n  dup2\n    /* \"#utility.yul\":7082:7118   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":7109:7110   */\n  0x00\n    /* \"#utility.yul\":7100:7110   */\n  swap1\n  pop\n    /* \"#utility.yul\":7111:7116   */\n  jump(tag_114)\n    /* \"#utility.yul\":7082:7118   */\ntag_116:\n    /* \"#utility.yul\":7178:7182   */\n  dup2\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7221:7248   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":7262:7263   */\n  0x02\n    /* \"#utility.yul\":7257:7448   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":7171:7448   */\n  jump(tag_117)\n    /* \"#utility.yul\":7221:7248   */\ntag_118:\n    /* \"#utility.yul\":7239:7240   */\n  0x01\n    /* \"#utility.yul\":7230:7240   */\n  swap2\n  pop\n    /* \"#utility.yul\":7241:7246   */\n  pop\n  jump(tag_114)\n    /* \"#utility.yul\":7257:7448   */\ntag_119:\n    /* \"#utility.yul\":7302:7305   */\n  0xff\n    /* \"#utility.yul\":7292:7300   */\n  dup5\n    /* \"#utility.yul\":7289:7306   */\n  gt\n    /* \"#utility.yul\":7286:7329   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":7309:7327   */\n  tag_121\n  tag_13\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":7286:7329   */\ntag_120:\n    /* \"#utility.yul\":7358:7366   */\n  dup4\n    /* \"#utility.yul\":7355:7356   */\n  0x02\n    /* \"#utility.yul\":7351:7367   */\n  exp\n    /* \"#utility.yul\":7342:7367   */\n  swap2\n  pop\n    /* \"#utility.yul\":7393:7396   */\n  dup5\n    /* \"#utility.yul\":7386:7391   */\n  dup3\n    /* \"#utility.yul\":7383:7397   */\n  gt\n    /* \"#utility.yul\":7380:7420   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":7400:7418   */\n  tag_123\n  tag_13\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":7380:7420   */\ntag_122:\n    /* \"#utility.yul\":7433:7438   */\n  pop\n  jump(tag_114)\n    /* \"#utility.yul\":7171:7448   */\ntag_117:\n  pop\n    /* \"#utility.yul\":7557:7559   */\n  0x20\n    /* \"#utility.yul\":7547:7555   */\n  dup4\n    /* \"#utility.yul\":7544:7560   */\n  lt\n    /* \"#utility.yul\":7538:7541   */\n  0x0133\n    /* \"#utility.yul\":7532:7536   */\n  dup4\n    /* \"#utility.yul\":7529:7542   */\n  lt\n    /* \"#utility.yul\":7525:7561   */\n  and\n    /* \"#utility.yul\":7507:7509   */\n  0x4e\n    /* \"#utility.yul\":7497:7505   */\n  dup5\n    /* \"#utility.yul\":7494:7510   */\n  lt\n    /* \"#utility.yul\":7489:7491   */\n  0x0b\n    /* \"#utility.yul\":7483:7487   */\n  dup5\n    /* \"#utility.yul\":7480:7492   */\n  lt\n    /* \"#utility.yul\":7476:7511   */\n  and\n    /* \"#utility.yul\":7460:7571   */\n  or\n    /* \"#utility.yul\":7457:7703   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":7613:7621   */\n  dup3\n    /* \"#utility.yul\":7607:7611   */\n  dup3\n    /* \"#utility.yul\":7603:7622   */\n  exp\n    /* \"#utility.yul\":7594:7622   */\n  swap1\n  pop\n    /* \"#utility.yul\":7648:7651   */\n  dup4\n    /* \"#utility.yul\":7641:7646   */\n  dup2\n    /* \"#utility.yul\":7638:7652   */\n  gt\n    /* \"#utility.yul\":7635:7675   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":7655:7673   */\n  tag_126\n  tag_13\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7635:7675   */\ntag_125:\n    /* \"#utility.yul\":7688:7693   */\n  jump(tag_114)\n    /* \"#utility.yul\":7457:7703   */\ntag_124:\n    /* \"#utility.yul\":7728:7770   */\n  tag_127\n    /* \"#utility.yul\":7766:7769   */\n  dup5\n    /* \"#utility.yul\":7756:7764   */\n  dup5\n    /* \"#utility.yul\":7750:7754   */\n  dup5\n    /* \"#utility.yul\":7747:7748   */\n  0x01\n    /* \"#utility.yul\":7728:7770   */\n  tag_34\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7713:7770   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7802:7806   */\n  dup2\n    /* \"#utility.yul\":7797:7800   */\n  dup5\n    /* \"#utility.yul\":7793:7807   */\n  div\n    /* \"#utility.yul\":7786:7791   */\n  dup2\n    /* \"#utility.yul\":7783:7808   */\n  gt\n    /* \"#utility.yul\":7780:7831   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":7811:7829   */\n  tag_129\n  tag_13\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7780:7831   */\ntag_128:\n    /* \"#utility.yul\":7860:7864   */\n  dup2\n    /* \"#utility.yul\":7853:7858   */\n  dup2\n    /* \"#utility.yul\":7849:7865   */\n  mul\n    /* \"#utility.yul\":7840:7865   */\n  swap1\n  pop\n    /* \"#utility.yul\":6798:7871   */\ntag_114:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7877:8162   */\ntag_7:\n    /* \"#utility.yul\":7937:7942   */\n  0x00\n    /* \"#utility.yul\":7961:7984   */\n  tag_131\n    /* \"#utility.yul\":7979:7983   */\n  dup3\n    /* \"#utility.yul\":7961:7984   */\n  tag_12\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7953:7984   */\n  swap2\n  pop\n    /* \"#utility.yul\":8005:8032   */\n  tag_132\n    /* \"#utility.yul\":8023:8031   */\n  dup4\n    /* \"#utility.yul\":8005:8032   */\n  tag_12\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7993:8032   */\n  swap3\n  pop\n    /* \"#utility.yul\":8051:8155   */\n  tag_133\n    /* \"#utility.yul\":8088:8154   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8078:8086   */\n  dup5\n    /* \"#utility.yul\":8072:8076   */\n  dup5\n    /* \"#utility.yul\":8051:8155   */\n  tag_35\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":8042:8155   */\n  swap1\n  pop\n    /* \"#utility.yul\":7877:8162   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"erc20.sol\":523:1777  contract web3ClubsToken {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20.sol\":523:1777  contract web3ClubsToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x6c02a931\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6d6a6a4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x811c34d3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8a4068dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2004ffd9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6392a51f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc20.sol\":1485:1700  function approve(address _spender, uint _value) public returns (bool success){... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":728:777  uint public totalSupply = 1000000 * decimalFactor */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":1708:1762  function mintToken() public returns (uint)  {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":868:893  uint public decimals = 18 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":1166:1212  mapping (address => uint256) public balancesOf */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":784:826  string public tokenName = \"web3ClubsToken\" */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":918:969  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":1423:1477  function transferFrom() public view {... */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"erc20.sol\":1373:1415  function transfer() public view {... */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"erc20.sol\":833:861  string public symbol = \"WCT\" */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":1219:1283  mapping(address => mapping(address => uint256)) public allowance */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20.sol\":1485:1700  function approve(address _spender, uint _value) public returns (bool success){... */\n    tag_18:\n        /* \"erc20.sol\":1549:1561  bool success */\n      0x00\n        /* \"erc20.sol\":1607:1613  _value */\n      dup2\n        /* \"erc20.sol\":1573:1582  allowance */\n      0x06\n        /* \"erc20.sol\":1573:1594  allowance[msg.sender] */\n      0x00\n        /* \"erc20.sol\":1583:1593  msg.sender */\n      caller\n        /* \"erc20.sol\":1573:1594  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc20.sol\":1573:1604  allowance[msg.sender][_spender] */\n      0x00\n        /* \"erc20.sol\":1595:1603  _spender */\n      dup6\n        /* \"erc20.sol\":1573:1604  allowance[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc20.sol\":1573:1613  allowance[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20.sol\":1650:1658  _spender */\n      dup3\n        /* \"erc20.sol\":1629:1667  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20.sol\":1638:1648  msg.sender */\n      caller\n        /* \"erc20.sol\":1629:1667  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"erc20.sol\":1660:1666  _value */\n      dup5\n        /* \"erc20.sol\":1629:1667  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20.sol\":1485:1700  function approve(address _spender, uint _value) public returns (bool success){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20.sol\":728:777  uint public totalSupply = 1000000 * decimalFactor */\n    tag_22:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":1708:1762  function mintToken() public returns (uint)  {... */\n    tag_26:\n        /* \"erc20.sol\":1745:1749  uint */\n      0x00\n        /* \"erc20.sol\":1708:1762  function mintToken() public returns (uint)  {... */\n      swap1\n      jump\t// out\n        /* \"erc20.sol\":868:893  uint public decimals = 18 */\n    tag_29:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":1166:1212  mapping (address => uint256) public balancesOf */\n    tag_34:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":784:826  string public tokenName = \"web3ClubsToken\" */\n    tag_37:\n      0x01\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":918:969  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_41:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":1423:1477  function transferFrom() public view {... */\n    tag_44:\n      jump\t// out\n        /* \"erc20.sol\":1373:1415  function transfer() public view {... */\n    tag_46:\n      jump\t// out\n        /* \"erc20.sol\":833:861  string public symbol = \"WCT\" */\n    tag_48:\n      0x02\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_59\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_59\n      jump\t// in\n    tag_67:\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_69\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_68)\n    tag_69:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"erc20.sol\":1219:1283  mapping(address => mapping(address => uint256)) public allowance */\n    tag_53:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_75:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_96\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_74\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_76:\n        /* \"#utility.yul\":641:665   */\n      tag_98\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_75\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_99:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_77:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_101\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_78:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_79:\n        /* \"#utility.yul\":997:1021   */\n      tag_104\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_105:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_80:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_107\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_79\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_17:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_110\n      tag_72\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1290:1409   */\n    tag_109:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_111\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_112\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_80\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_81:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_82:\n        /* \"#utility.yul\":1854:1875   */\n      tag_115\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_81\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_20:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_117\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_82\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2222   */\n    tag_83:\n        /* \"#utility.yul\":2191:2215   */\n      tag_119\n        /* \"#utility.yul\":2209:2214   */\n      dup2\n        /* \"#utility.yul\":2191:2215   */\n      tag_78\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2186:2189   */\n      dup3\n        /* \"#utility.yul\":2179:2216   */\n      mstore\n        /* \"#utility.yul\":2104:2222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2450   */\n    tag_24:\n        /* \"#utility.yul\":2321:2325   */\n      0x00\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup3\n        /* \"#utility.yul\":2344:2362   */\n      add\n        /* \"#utility.yul\":2336:2362   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2443   */\n      tag_121\n        /* \"#utility.yul\":2440:2441   */\n      0x00\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2425:2442   */\n      add\n        /* \"#utility.yul\":2416:2422   */\n      dup5\n        /* \"#utility.yul\":2372:2443   */\n      tag_83\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2228:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2785   */\n    tag_33:\n        /* \"#utility.yul\":2515:2521   */\n      0x00\n        /* \"#utility.yul\":2564:2566   */\n      0x20\n        /* \"#utility.yul\":2552:2561   */\n      dup3\n        /* \"#utility.yul\":2543:2550   */\n      dup5\n        /* \"#utility.yul\":2539:2562   */\n      sub\n        /* \"#utility.yul\":2535:2567   */\n      slt\n        /* \"#utility.yul\":2532:2651   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":2570:2649   */\n      tag_124\n      tag_72\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2532:2651   */\n    tag_123:\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2715:2768   */\n      tag_125\n        /* \"#utility.yul\":2760:2767   */\n      dup5\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup6\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2715:2768   */\n      tag_77\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2705:2768   */\n      swap2\n      pop\n        /* \"#utility.yul\":2661:2778   */\n      pop\n        /* \"#utility.yul\":2456:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2890   */\n    tag_84:\n        /* \"#utility.yul\":2843:2849   */\n      0x00\n        /* \"#utility.yul\":2877:2882   */\n      dup2\n        /* \"#utility.yul\":2871:2883   */\n      mload\n        /* \"#utility.yul\":2861:2883   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3065   */\n    tag_85:\n        /* \"#utility.yul\":2980:2991   */\n      0x00\n        /* \"#utility.yul\":3014:3020   */\n      dup3\n        /* \"#utility.yul\":3009:3012   */\n      dup3\n        /* \"#utility.yul\":3002:3021   */\n      mstore\n        /* \"#utility.yul\":3054:3058   */\n      0x20\n        /* \"#utility.yul\":3049:3052   */\n      dup3\n        /* \"#utility.yul\":3045:3059   */\n      add\n        /* \"#utility.yul\":3030:3059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3317   */\n    tag_86:\n        /* \"#utility.yul\":3152:3153   */\n      0x00\n        /* \"#utility.yul\":3162:3275   */\n    tag_129:\n        /* \"#utility.yul\":3176:3182   */\n      dup4\n        /* \"#utility.yul\":3173:3174   */\n      dup2\n        /* \"#utility.yul\":3170:3183   */\n      lt\n        /* \"#utility.yul\":3162:3275   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3261:3262   */\n      dup1\n        /* \"#utility.yul\":3256:3259   */\n      dup3\n        /* \"#utility.yul\":3252:3263   */\n      add\n        /* \"#utility.yul\":3246:3264   */\n      mload\n        /* \"#utility.yul\":3242:3243   */\n      dup2\n        /* \"#utility.yul\":3237:3240   */\n      dup5\n        /* \"#utility.yul\":3233:3244   */\n      add\n        /* \"#utility.yul\":3226:3265   */\n      mstore\n        /* \"#utility.yul\":3198:3200   */\n      0x20\n        /* \"#utility.yul\":3195:3196   */\n      dup2\n        /* \"#utility.yul\":3191:3201   */\n      add\n        /* \"#utility.yul\":3186:3201   */\n      swap1\n      pop\n        /* \"#utility.yul\":3162:3275   */\n      jump(tag_129)\n    tag_131:\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3300:3306   */\n      dup5\n        /* \"#utility.yul\":3295:3298   */\n      dup5\n        /* \"#utility.yul\":3291:3307   */\n      add\n        /* \"#utility.yul\":3284:3311   */\n      mstore\n        /* \"#utility.yul\":3133:3317   */\n      pop\n        /* \"#utility.yul\":3071:3317   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3323:3425   */\n    tag_87:\n        /* \"#utility.yul\":3364:3370   */\n      0x00\n        /* \"#utility.yul\":3415:3417   */\n      0x1f\n        /* \"#utility.yul\":3411:3418   */\n      not\n        /* \"#utility.yul\":3406:3408   */\n      0x1f\n        /* \"#utility.yul\":3399:3404   */\n      dup4\n        /* \"#utility.yul\":3395:3409   */\n      add\n        /* \"#utility.yul\":3391:3419   */\n      and\n        /* \"#utility.yul\":3381:3419   */\n      swap1\n      pop\n        /* \"#utility.yul\":3323:3425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3431:3808   */\n    tag_88:\n        /* \"#utility.yul\":3519:3522   */\n      0x00\n        /* \"#utility.yul\":3547:3586   */\n      tag_134\n        /* \"#utility.yul\":3580:3585   */\n      dup3\n        /* \"#utility.yul\":3547:3586   */\n      tag_84\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3602:3673   */\n      tag_135\n        /* \"#utility.yul\":3666:3672   */\n      dup2\n        /* \"#utility.yul\":3661:3664   */\n      dup6\n        /* \"#utility.yul\":3602:3673   */\n      tag_85\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3595:3673   */\n      swap4\n      pop\n        /* \"#utility.yul\":3682:3747   */\n      tag_136\n        /* \"#utility.yul\":3740:3746   */\n      dup2\n        /* \"#utility.yul\":3735:3738   */\n      dup6\n        /* \"#utility.yul\":3728:3732   */\n      0x20\n        /* \"#utility.yul\":3721:3726   */\n      dup7\n        /* \"#utility.yul\":3717:3733   */\n      add\n        /* \"#utility.yul\":3682:3747   */\n      tag_86\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3772:3801   */\n      tag_137\n        /* \"#utility.yul\":3794:3800   */\n      dup2\n        /* \"#utility.yul\":3772:3801   */\n      tag_87\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3767:3770   */\n      dup5\n        /* \"#utility.yul\":3763:3802   */\n      add\n        /* \"#utility.yul\":3756:3802   */\n      swap2\n      pop\n        /* \"#utility.yul\":3523:3808   */\n      pop\n        /* \"#utility.yul\":3431:3808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3814:4127   */\n    tag_39:\n        /* \"#utility.yul\":3927:3931   */\n      0x00\n        /* \"#utility.yul\":3965:3967   */\n      0x20\n        /* \"#utility.yul\":3954:3963   */\n      dup3\n        /* \"#utility.yul\":3950:3968   */\n      add\n        /* \"#utility.yul\":3942:3968   */\n      swap1\n      pop\n        /* \"#utility.yul\":4014:4023   */\n      dup2\n        /* \"#utility.yul\":4008:4012   */\n      dup2\n        /* \"#utility.yul\":4004:4024   */\n      sub\n        /* \"#utility.yul\":4000:4001   */\n      0x00\n        /* \"#utility.yul\":3989:3998   */\n      dup4\n        /* \"#utility.yul\":3985:4002   */\n      add\n        /* \"#utility.yul\":3978:4025   */\n      mstore\n        /* \"#utility.yul\":4042:4120   */\n      tag_139\n        /* \"#utility.yul\":4115:4119   */\n      dup2\n        /* \"#utility.yul\":4106:4112   */\n      dup5\n        /* \"#utility.yul\":4042:4120   */\n      tag_88\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4034:4120   */\n      swap1\n      pop\n        /* \"#utility.yul\":3814:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4607   */\n    tag_52:\n        /* \"#utility.yul\":4201:4207   */\n      0x00\n        /* \"#utility.yul\":4209:4215   */\n      dup1\n        /* \"#utility.yul\":4258:4260   */\n      0x40\n        /* \"#utility.yul\":4246:4255   */\n      dup4\n        /* \"#utility.yul\":4237:4244   */\n      dup6\n        /* \"#utility.yul\":4233:4256   */\n      sub\n        /* \"#utility.yul\":4229:4261   */\n      slt\n        /* \"#utility.yul\":4226:4345   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4264:4343   */\n      tag_142\n      tag_72\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4226:4345   */\n    tag_141:\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4409:4462   */\n      tag_143\n        /* \"#utility.yul\":4454:4461   */\n      dup6\n        /* \"#utility.yul\":4445:4451   */\n      dup3\n        /* \"#utility.yul\":4434:4443   */\n      dup7\n        /* \"#utility.yul\":4430:4452   */\n      add\n        /* \"#utility.yul\":4409:4462   */\n      tag_77\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4399:4462   */\n      swap3\n      pop\n        /* \"#utility.yul\":4355:4472   */\n      pop\n        /* \"#utility.yul\":4511:4513   */\n      0x20\n        /* \"#utility.yul\":4537:4590   */\n      tag_144\n        /* \"#utility.yul\":4582:4589   */\n      dup6\n        /* \"#utility.yul\":4573:4579   */\n      dup3\n        /* \"#utility.yul\":4562:4571   */\n      dup7\n        /* \"#utility.yul\":4558:4580   */\n      add\n        /* \"#utility.yul\":4537:4590   */\n      tag_77\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4527:4590   */\n      swap2\n      pop\n        /* \"#utility.yul\":4482:4600   */\n      pop\n        /* \"#utility.yul\":4133:4607   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4613:4793   */\n    tag_89:\n        /* \"#utility.yul\":4661:4738   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4658:4659   */\n      0x00\n        /* \"#utility.yul\":4651:4739   */\n      mstore\n        /* \"#utility.yul\":4758:4762   */\n      0x22\n        /* \"#utility.yul\":4755:4756   */\n      0x04\n        /* \"#utility.yul\":4748:4763   */\n      mstore\n        /* \"#utility.yul\":4782:4786   */\n      0x24\n        /* \"#utility.yul\":4779:4780   */\n      0x00\n        /* \"#utility.yul\":4772:4787   */\n      revert\n        /* \"#utility.yul\":4799:5119   */\n    tag_59:\n        /* \"#utility.yul\":4843:4849   */\n      0x00\n        /* \"#utility.yul\":4880:4881   */\n      0x02\n        /* \"#utility.yul\":4874:4878   */\n      dup3\n        /* \"#utility.yul\":4870:4882   */\n      div\n        /* \"#utility.yul\":4860:4882   */\n      swap1\n      pop\n        /* \"#utility.yul\":4927:4928   */\n      0x01\n        /* \"#utility.yul\":4921:4925   */\n      dup3\n        /* \"#utility.yul\":4917:4929   */\n      and\n        /* \"#utility.yul\":4948:4966   */\n      dup1\n        /* \"#utility.yul\":4938:5019   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":5004:5008   */\n      0x7f\n        /* \"#utility.yul\":4996:5002   */\n      dup3\n        /* \"#utility.yul\":4992:5009   */\n      and\n        /* \"#utility.yul\":4982:5009   */\n      swap2\n      pop\n        /* \"#utility.yul\":4938:5019   */\n    tag_147:\n        /* \"#utility.yul\":5066:5068   */\n      0x20\n        /* \"#utility.yul\":5058:5064   */\n      dup3\n        /* \"#utility.yul\":5055:5069   */\n      lt\n        /* \"#utility.yul\":5035:5053   */\n      dup2\n        /* \"#utility.yul\":5032:5070   */\n      sub\n        /* \"#utility.yul\":5029:5113   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":5085:5103   */\n      tag_149\n      tag_89\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5029:5113   */\n    tag_148:\n        /* \"#utility.yul\":4850:5119   */\n      pop\n        /* \"#utility.yul\":4799:5119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ece7e998cc20b6e7118cb7e6dc17f1069ea40bf921d6cb989fc9477f5564dd864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8165:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "324:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "334:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "357:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "339:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "334:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "368:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "391:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "373:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "368:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "402:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "425:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "428:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "421:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "406:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "468:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "450:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "439:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "659:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "590:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "583:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "613:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "620:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "629:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "616:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "616:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "610:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "563:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "563:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:113:4"
															},
															"nodeType": "YulIf",
															"src": "540:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:4",
														"type": ""
													}
												],
												"src": "276:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "751:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "762:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "778:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "734:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "744:6:4",
														"type": ""
													}
												],
												"src": "692:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "825:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "835:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "942:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "932:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "963:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "956:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "956:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "797:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1011:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1028:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1031:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1021:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1021:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1125:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1118:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1142:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "983:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1244:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1250:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1261:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1291:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1287:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1265:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1338:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1352:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1366:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1352:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1318:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:26:4"
															},
															"nodeType": "YulIf",
															"src": "1308:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1441:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1455:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1405:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1428:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1436:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1425:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1402:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:38:4"
															},
															"nodeType": "YulIf",
															"src": "1399:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1204:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1213:6:4",
														"type": ""
													}
												],
												"src": "1169:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1559:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1567:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1559:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1590:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1580:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1603:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1624:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1611:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1603:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1536:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1544:4:4",
														"type": ""
													}
												],
												"src": "1495:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1686:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1696:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1714:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1710:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1706:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1679:6:4",
														"type": ""
													}
												],
												"src": "1642:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1794:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1804:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1829:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1835:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1804:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1769:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1785:8:4",
														"type": ""
													}
												],
												"src": "1741:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1930:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1940:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1961:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1957:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1944:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1984:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2015:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1996:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1988:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2102:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2133:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2144:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2114:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2102:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2175:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2186:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2162:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2201:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2214:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2225:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2235:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2221:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2211:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1891:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1898:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1910:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1923:6:4",
														"type": ""
													}
												],
												"src": "1854:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2285:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2295:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2302:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2271:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2281:3:4",
														"type": ""
													}
												],
												"src": "2253:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2379:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2389:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2447:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2429:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2429:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2420:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2420:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2402:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2389:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2359:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2369:9:4",
														"type": ""
													}
												],
												"src": "2319:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2514:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2524:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2531:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2510:3:4",
														"type": ""
													}
												],
												"src": "2467:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2634:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2689:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2658:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2638:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2713:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2753:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2747:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2747:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2792:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2768:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2768:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2719:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2706:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2601:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2607:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2615:7:4",
														"type": ""
													}
												],
												"src": "2548:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2872:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2882:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2889:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2882:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2868:3:4",
														"type": ""
													}
												],
												"src": "2823:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2965:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2979:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2979:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2969:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3064:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3020:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3020:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2941:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2947:6:4",
														"type": ""
													}
												],
												"src": "2902:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3147:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3258:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3265:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3228:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3228:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3228:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3167:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3174:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3164:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3179:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3181:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3194:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3201:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3190:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3190:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3181:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3161:2:4",
																"statements": []
															},
															"src": "3157:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3135:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3142:3:4",
														"type": ""
													}
												],
												"src": "3097:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3368:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3394:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3408:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3456:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "3424:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3424:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "3412:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3475:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "3498:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "3526:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "3508:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3508:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3494:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3494:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3479:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3695:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3697:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3712:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3697:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3679:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3691:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3676:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3676:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "3673:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3764:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3781:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3809:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3791:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3791:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3777:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3777:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3735:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3735:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3735:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3385:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3382:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:11:4"
															},
															"nodeType": "YulIf",
															"src": "3379:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3344:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3351:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3356:10:4",
														"type": ""
													}
												],
												"src": "3289:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3901:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3911:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3936:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3942:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3932:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3911:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3876:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3882:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3892:8:4",
														"type": ""
													}
												],
												"src": "3838:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4012:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4022:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4071:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4074:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4067:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4067:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4086:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4082:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4082:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4038:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4038:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4026:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4099:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4113:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4119:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4109:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3989:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3995:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4005:6:4",
														"type": ""
													}
												],
												"src": "3961:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4216:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4349:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4376:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4382:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4357:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4349:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4395:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4406:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4416:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "4419:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4412:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4403:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4395:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4197:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4203:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4211:4:4",
														"type": ""
													}
												],
												"src": "4135:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4527:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4538:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4585:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4552:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "4542:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4674:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4676:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4676:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4676:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4646:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4654:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4643:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4643:30:4"
															},
															"nodeType": "YulIf",
															"src": "4640:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4706:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4752:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4746:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4720:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4710:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4851:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4857:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4865:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4805:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4882:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4899:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4886:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4910:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4923:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4910:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4974:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4988:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5007:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5019:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5015:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5015:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5003:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5003:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4992:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5039:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5085:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5053:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5053:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5043:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5103:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5112:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5107:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5171:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5196:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5214:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5219:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5210:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5210:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5204:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5204:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5189:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5189:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5189:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5248:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5262:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5270:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5258:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5258:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5248:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5289:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5306:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5317:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5302:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5302:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5289:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5137:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5140:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5134:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5134:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5149:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5151:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5160:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5163:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5156:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5156:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5151:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5130:3:4",
																					"statements": []
																				},
																				"src": "5126:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5370:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5388:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5415:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5420:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5411:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5411:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5405:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5405:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5392:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5455:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "5482:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "5497:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "5505:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "5493:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5493:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "5463:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5463:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5448:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5448:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5448:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5353:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5362:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5350:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5350:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5347:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5546:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "5560:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5568:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "5556:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5556:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5572:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5552:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5552:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5539:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5539:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5539:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4967:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5602:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5616:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5629:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5620:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5653:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5671:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5690:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5695:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5686:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5686:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5680:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5680:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5671:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5646:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5643:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5740:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5799:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5806:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5746:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5746:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5733:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5733:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5733:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5594:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4947:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4955:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4944:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "4937:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4516:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4522:3:4",
														"type": ""
													}
												],
												"src": "4435:1395:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5887:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5897:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5925:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:13:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5897:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5878:8:4",
														"type": ""
													}
												],
												"src": "5836:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6017:775:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6027:15:4",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "6036:6:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6027:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6051:14:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6060:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6051:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6109:677:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6197:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6199:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6199:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6199:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6175:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6185:3:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6190:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6181:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6181:14:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6172:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6172:24:4"
																		},
																		"nodeType": "YulIf",
																		"src": "6169:50:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6264:419:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6644:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6657:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6664:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6653:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6653:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6644:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6249:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:16:4"
																		},
																		"nodeType": "YulIf",
																		"src": "6232:451:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6696:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6708:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6714:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6704:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6696:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6732:44:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6767:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "6744:22:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6744:32:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6732:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6085:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6082:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6082:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6098:2:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6078:3:4",
																"statements": []
															},
															"src": "6074:712:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5972:6:4",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5980:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5987:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5997:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6005:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6012:4:4",
														"type": ""
													}
												],
												"src": "5944:848:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6858:1013:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7053:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7055:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7064:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7055:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7066:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7043:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:16:4"
															},
															"nodeType": "YulIf",
															"src": "7033:40:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7098:20:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7100:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7109:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7100:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7111:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7092:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:12:4"
															},
															"nodeType": "YulIf",
															"src": "7082:36:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7228:20:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7230:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7239:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7230:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7241:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7221:27:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7272:176:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7307:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7309:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7309:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7309:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7292:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7302:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7289:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7289:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "7286:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7342:25:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7355:1:4",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7358:8:4"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "7351:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7351:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7342:5:4"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7398:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7400:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7400:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7400:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7386:5:4"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7393:3:4"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7383:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7383:14:4"
																				},
																				"nodeType": "YulIf",
																				"src": "7380:40:4"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7433:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7257:191:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7262:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7178:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "7171:277:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7580:123:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7594:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7607:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7613:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7603:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7603:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7594:5:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7653:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7655:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7655:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7655:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7641:5:4"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7648:3:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7638:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7638:14:4"
																		},
																		"nodeType": "YulIf",
																		"src": "7635:40:4"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7688:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7483:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7489:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7480:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7480:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7497:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7507:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7494:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7494:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7476:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7476:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7532:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7538:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7529:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7529:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7547:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7557:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7544:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7544:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7525:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7460:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:111:4"
															},
															"nodeType": "YulIf",
															"src": "7457:246:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7713:57:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7750:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7756:8:4"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7766:3:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7728:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:42:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7713:5:4"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7720:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7809:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7811:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7811:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7811:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7786:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7797:3:4"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7802:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7793:14:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7783:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7783:25:4"
															},
															"nodeType": "YulIf",
															"src": "7780:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7840:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7853:5:4"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7860:4:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:16:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7840:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6828:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6834:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6844:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6852:5:4",
														"type": ""
													}
												],
												"src": "6798:1073:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:219:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7953:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7979:4:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7961:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:23:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7953:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7993:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8023:8:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8005:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:27:4"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7993:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8072:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8078:8:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8051:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:104:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7918:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7924:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7937:5:4",
														"type": ""
													}
												],
												"src": "7877:285:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600454620f424062000017919062000154565b6000556040518060400160405280600e81526020017f77656233436c756273546f6b656e000000000000000000000000000000000000815250600190816200006091906200040f565b506040518060400160405280600381526020017f574354000000000000000000000000000000000000000000000000000000000081525060029081620000a791906200040f565b506012600355600354600a620000be91906200064a565b600455348015620000ce57600080fd5b50600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200069b565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000161826200011b565b91506200016e836200011b565b92508282026200017e816200011b565b9150828204841483151762000198576200019762000125565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200022157607f821691505b602082108103620002375762000236620001d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000262565b620002ad868362000262565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620002f0620002ea620002e4846200011b565b620002c5565b6200011b565b9050919050565b6000819050919050565b6200030c83620002cf565b620003246200031b82620002f7565b8484546200026f565b825550505050565b600090565b6200033b6200032c565b6200034881848462000301565b505050565b5b8181101562000370576200036460008262000331565b6001810190506200034e565b5050565b601f821115620003bf5762000389816200023d565b620003948462000252565b81016020851015620003a4578190505b620003bc620003b38562000252565b8301826200034d565b50505b505050565b600082821c905092915050565b6000620003e460001984600802620003c4565b1980831691505092915050565b6000620003ff8383620003d1565b9150826002028217905092915050565b6200041a826200019f565b67ffffffffffffffff811115620004365762000435620001aa565b5b62000442825462000208565b6200044f82828562000374565b600060209050601f83116001811462000487576000841562000472578287015190505b6200047e8582620003f1565b865550620004ee565b601f19841662000497866200023d565b60005b82811015620004c1578489015182556001820191506020850194506020810190506200049a565b86831015620004e15784890151620004dd601f891682620003d1565b8355505b6001600288020188555050505b505050505050565b60008160011c9050919050565b6000808291508390505b600185111562000555578086048111156200052d576200052c62000125565b5b60018516156200053d5780820291505b80810290506200054d85620004f6565b94506200050d565b94509492505050565b60008262000570576001905062000643565b8162000580576000905062000643565b8160018114620005995760028114620005a457620005da565b600191505062000643565b60ff841115620005b957620005b862000125565b5b8360020a915084821115620005d357620005d262000125565b5b5062000643565b5060208310610133831016604e8410600b8410161715620006145782820a9050838111156200060e576200060d62000125565b5b62000643565b62000623848484600162000503565b925090508184048111156200063d576200063c62000125565b5b81810290505b9392505050565b600062000657826200011b565b915062000664836200011b565b9250620006937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200055e565b905092915050565b61075680620006ab6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636c02a931116100715780636c02a931146101685780636d6a6a4d14610186578063811c34d3146101a45780638a4068dd146101ae57806395d89b41146101b8578063dd62ed3e146101d6576100a9565b8063095ea7b3146100ae57806318160ddd146100de5780632004ffd9146100fc578063313ce5671461011a5780636392a51f14610138575b600080fd5b6100c860048036038101906100c39190610501565b610206565b6040516100d5919061055c565b60405180910390f35b6100e66102f4565b6040516100f39190610586565b60405180910390f35b6101046102fa565b6040516101119190610586565b60405180910390f35b6101226102ff565b60405161012f9190610586565b60405180910390f35b610152600480360381019061014d91906105a1565b610305565b60405161015f9190610586565b60405180910390f35b61017061031d565b60405161017d919061065e565b60405180910390f35b61018e6103ab565b60405161019b9190610586565b60405180910390f35b6101ac6103b1565b005b6101b66103b3565b005b6101c06103b5565b6040516101cd919061065e565b60405180910390f35b6101f060048036038101906101eb9190610680565b610443565b6040516101fd9190610586565b60405180910390f35b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516102e69190610586565b60405180910390a392915050565b60005481565b600090565b60035481565b60056020528060005260406000206000915090505481565b6001805461032a906106ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610356906106ef565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b60045481565b565b565b600280546103c2906106ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee906106ef565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b505050505081565b6006602052816000526040600020602052806000526040600020600091509150505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104988261046d565b9050919050565b6104a88161048d565b81146104b357600080fd5b50565b6000813590506104c58161049f565b92915050565b6000819050919050565b6104de816104cb565b81146104e957600080fd5b50565b6000813590506104fb816104d5565b92915050565b6000806040838503121561051857610517610468565b5b6000610526858286016104b6565b9250506020610537858286016104ec565b9150509250929050565b60008115159050919050565b61055681610541565b82525050565b6000602082019050610571600083018461054d565b92915050565b610580816104cb565b82525050565b600060208201905061059b6000830184610577565b92915050565b6000602082840312156105b7576105b6610468565b5b60006105c5848285016104b6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000610630826105ce565b61063a81856105d9565b935061064a8185602086016105ea565b61065381610614565b840191505092915050565b600060208201905081810360008301526106788184610625565b905092915050565b6000806040838503121561069757610696610468565b5b60006106a5858286016104b6565b92505060206106b6858286016104b6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061070757607f821691505b60208210810361071a576107196106c0565b5b5091905056fea26469706673582212200ece7e998cc20b6e7118cb7e6dc17f1069ea40bf921d6cb989fc9477f5564dd864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 SLOAD PUSH3 0xF4240 PUSH3 0x17 SWAP2 SWAP1 PUSH3 0x154 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77656233436C756273546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x40F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5743540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP2 PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x40F JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x3 SSTORE PUSH1 0x3 SLOAD PUSH1 0xA PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x64A JUMP JUMPDEST PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0x69B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x161 DUP3 PUSH3 0x11B JUMP JUMPDEST SWAP2 POP PUSH3 0x16E DUP4 PUSH3 0x11B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x17E DUP2 PUSH3 0x11B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x198 JUMPI PUSH3 0x197 PUSH3 0x125 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x221 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x237 JUMPI PUSH3 0x236 PUSH3 0x1D9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2A1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x262 JUMP JUMPDEST PUSH3 0x2AD DUP7 DUP4 PUSH3 0x262 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F0 PUSH3 0x2EA PUSH3 0x2E4 DUP5 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x2C5 JUMP JUMPDEST PUSH3 0x11B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30C DUP4 PUSH3 0x2CF JUMP JUMPDEST PUSH3 0x324 PUSH3 0x31B DUP3 PUSH3 0x2F7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x26F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x33B PUSH3 0x32C JUMP JUMPDEST PUSH3 0x348 DUP2 DUP5 DUP5 PUSH3 0x301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x370 JUMPI PUSH3 0x364 PUSH1 0x0 DUP3 PUSH3 0x331 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x34E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3BF JUMPI PUSH3 0x389 DUP2 PUSH3 0x23D JUMP JUMPDEST PUSH3 0x394 DUP5 PUSH3 0x252 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3A4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3BC PUSH3 0x3B3 DUP6 PUSH3 0x252 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x34D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E4 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3C4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3FF DUP4 DUP4 PUSH3 0x3D1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x41A DUP3 PUSH3 0x19F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x436 JUMPI PUSH3 0x435 PUSH3 0x1AA JUMP JUMPDEST JUMPDEST PUSH3 0x442 DUP3 SLOAD PUSH3 0x208 JUMP JUMPDEST PUSH3 0x44F DUP3 DUP3 DUP6 PUSH3 0x374 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x487 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x472 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x47E DUP6 DUP3 PUSH3 0x3F1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4EE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x497 DUP7 PUSH3 0x23D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x49A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4E1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4DD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3D1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x555 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH3 0x52C PUSH3 0x125 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x53D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x54D DUP6 PUSH3 0x4F6 JUMP JUMPDEST SWAP5 POP PUSH3 0x50D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x570 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x643 JUMP JUMPDEST DUP2 PUSH3 0x580 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x643 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x599 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x5A4 JUMPI PUSH3 0x5DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x643 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x5B9 JUMPI PUSH3 0x5B8 PUSH3 0x125 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x5D3 JUMPI PUSH3 0x5D2 PUSH3 0x125 JUMP JUMPDEST JUMPDEST POP PUSH3 0x643 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x614 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x60E JUMPI PUSH3 0x60D PUSH3 0x125 JUMP JUMPDEST JUMPDEST PUSH3 0x643 JUMP JUMPDEST PUSH3 0x623 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x503 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x63D JUMPI PUSH3 0x63C PUSH3 0x125 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x657 DUP3 PUSH3 0x11B JUMP JUMPDEST SWAP2 POP PUSH3 0x664 DUP4 PUSH3 0x11B JUMP JUMPDEST SWAP3 POP PUSH3 0x693 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x55E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x756 DUP1 PUSH3 0x6AB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x811C34D3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2004FFD9 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x6392A51F EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x680 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x32A SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x410 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498 DUP3 PUSH2 0x46D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A8 DUP2 PUSH2 0x48D JUMP JUMPDEST DUP2 EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C5 DUP2 PUSH2 0x49F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP2 EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FB DUP2 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x526 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x571 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x580 DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B6 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C5 DUP5 DUP3 DUP6 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x630 DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x63A DUP2 DUP6 PUSH2 0x5D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x64A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x653 DUP2 PUSH2 0x614 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x678 DUP2 DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A5 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B6 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x707 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x71A JUMPI PUSH2 0x719 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xCE PUSH31 0x998CC20B6E7118CB7E6DC17F1069EA40BF921D6CB989FC9477F5564DD86473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "523:1254:3:-:0;;;764:13;;754:7;:23;;;;:::i;:::-;728:49;;784:42;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;833:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;891:2;868:25;;960:8;;946:2;:23;;;;:::i;:::-;918:51;;1292:71;;;;;;;;;;1342:11;;1317:10;:22;1328:10;1317:22;;;;;;;;;;;;;;;:36;;;;523:1254;;7:77:4;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:410;316:7;339:20;357:1;339:20;:::i;:::-;334:25;;373:20;391:1;373:20;:::i;:::-;368:25;;428:1;425;421:9;450:30;468:11;450:30;:::i;:::-;439:41;;629:1;620:7;616:15;613:1;610:22;590:1;583:9;563:83;540:139;;659:18;;:::i;:::-;540:139;324:362;276:410;;;;:::o;692:99::-;744:6;778:5;772:12;762:22;;692:99;;;:::o;797:180::-;845:77;842:1;835:88;942:4;939:1;932:15;966:4;963:1;956:15;983:180;1031:77;1028:1;1021:88;1128:4;1125:1;1118:15;1152:4;1149:1;1142:15;1169:320;1213:6;1250:1;1244:4;1240:12;1230:22;;1297:1;1291:4;1287:12;1318:18;1308:81;;1374:4;1366:6;1362:17;1352:27;;1308:81;1436:2;1428:6;1425:14;1405:18;1402:38;1399:84;;1455:18;;:::i;:::-;1399:84;1220:269;1169:320;;;:::o;1495:141::-;1544:4;1567:3;1559:11;;1590:3;1587:1;1580:14;1624:4;1621:1;1611:18;1603:26;;1495:141;;;:::o;1642:93::-;1679:6;1726:2;1721;1714:5;1710:14;1706:23;1696:33;;1642:93;;;:::o;1741:107::-;1785:8;1835:5;1829:4;1825:16;1804:37;;1741:107;;;;:::o;1854:393::-;1923:6;1973:1;1961:10;1957:18;1996:97;2026:66;2015:9;1996:97;:::i;:::-;2114:39;2144:8;2133:9;2114:39;:::i;:::-;2102:51;;2186:4;2182:9;2175:5;2171:21;2162:30;;2235:4;2225:8;2221:19;2214:5;2211:30;2201:40;;1930:317;;1854:393;;;;;:::o;2253:60::-;2281:3;2302:5;2295:12;;2253:60;;;:::o;2319:142::-;2369:9;2402:53;2420:34;2429:24;2447:5;2429:24;:::i;:::-;2420:34;:::i;:::-;2402:53;:::i;:::-;2389:66;;2319:142;;;:::o;2467:75::-;2510:3;2531:5;2524:12;;2467:75;;;:::o;2548:269::-;2658:39;2689:7;2658:39;:::i;:::-;2719:91;2768:41;2792:16;2768:41;:::i;:::-;2760:6;2753:4;2747:11;2719:91;:::i;:::-;2713:4;2706:105;2624:193;2548:269;;;:::o;2823:73::-;2868:3;2823:73;:::o;2902:189::-;2979:32;;:::i;:::-;3020:65;3078:6;3070;3064:4;3020:65;:::i;:::-;2955:136;2902:189;;:::o;3097:186::-;3157:120;3174:3;3167:5;3164:14;3157:120;;;3228:39;3265:1;3258:5;3228:39;:::i;:::-;3201:1;3194:5;3190:13;3181:22;;3157:120;;;3097:186;;:::o;3289:543::-;3390:2;3385:3;3382:11;3379:446;;;3424:38;3456:5;3424:38;:::i;:::-;3508:29;3526:10;3508:29;:::i;:::-;3498:8;3494:44;3691:2;3679:10;3676:18;3673:49;;;3712:8;3697:23;;3673:49;3735:80;3791:22;3809:3;3791:22;:::i;:::-;3781:8;3777:37;3764:11;3735:80;:::i;:::-;3394:431;;3379:446;3289:543;;;:::o;3838:117::-;3892:8;3942:5;3936:4;3932:16;3911:37;;3838:117;;;;:::o;3961:169::-;4005:6;4038:51;4086:1;4082:6;4074:5;4071:1;4067:13;4038:51;:::i;:::-;4034:56;4119:4;4113;4109:15;4099:25;;4012:118;3961:169;;;;:::o;4135:295::-;4211:4;4357:29;4382:3;4376:4;4357:29;:::i;:::-;4349:37;;4419:3;4416:1;4412:11;4406:4;4403:21;4395:29;;4135:295;;;;:::o;4435:1395::-;4552:37;4585:3;4552:37;:::i;:::-;4654:18;4646:6;4643:30;4640:56;;;4676:18;;:::i;:::-;4640:56;4720:38;4752:4;4746:11;4720:38;:::i;:::-;4805:67;4865:6;4857;4851:4;4805:67;:::i;:::-;4899:1;4923:4;4910:17;;4955:2;4947:6;4944:14;4972:1;4967:618;;;;5629:1;5646:6;5643:77;;;5695:9;5690:3;5686:19;5680:26;5671:35;;5643:77;5746:67;5806:6;5799:5;5746:67;:::i;:::-;5740:4;5733:81;5602:222;4937:887;;4967:618;5019:4;5015:9;5007:6;5003:22;5053:37;5085:4;5053:37;:::i;:::-;5112:1;5126:208;5140:7;5137:1;5134:14;5126:208;;;5219:9;5214:3;5210:19;5204:26;5196:6;5189:42;5270:1;5262:6;5258:14;5248:24;;5317:2;5306:9;5302:18;5289:31;;5163:4;5160:1;5156:12;5151:17;;5126:208;;;5362:6;5353:7;5350:19;5347:179;;;5420:9;5415:3;5411:19;5405:26;5463:48;5505:4;5497:6;5493:17;5482:9;5463:48;:::i;:::-;5455:6;5448:64;5370:156;5347:179;5572:1;5568;5560:6;5556:14;5552:22;5546:4;5539:36;4974:611;;;4937:887;;4527:1303;;;4435:1395;;:::o;5836:102::-;5878:8;5925:5;5922:1;5918:13;5897:34;;5836:102;;;:::o;5944:848::-;6005:5;6012:4;6036:6;6027:15;;6060:5;6051:14;;6074:712;6095:1;6085:8;6082:15;6074:712;;;6190:4;6185:3;6181:14;6175:4;6172:24;6169:50;;;6199:18;;:::i;:::-;6169:50;6249:1;6239:8;6235:16;6232:451;;;6664:4;6657:5;6653:16;6644:25;;6232:451;6714:4;6708;6704:15;6696:23;;6744:32;6767:8;6744:32;:::i;:::-;6732:44;;6074:712;;;5944:848;;;;;;;:::o;6798:1073::-;6852:5;7043:8;7033:40;;7064:1;7055:10;;7066:5;;7033:40;7092:4;7082:36;;7109:1;7100:10;;7111:5;;7082:36;7178:4;7226:1;7221:27;;;;7262:1;7257:191;;;;7171:277;;7221:27;7239:1;7230:10;;7241:5;;;7257:191;7302:3;7292:8;7289:17;7286:43;;;7309:18;;:::i;:::-;7286:43;7358:8;7355:1;7351:16;7342:25;;7393:3;7386:5;7383:14;7380:40;;;7400:18;;:::i;:::-;7380:40;7433:5;;;7171:277;;7557:2;7547:8;7544:16;7538:3;7532:4;7529:13;7525:36;7507:2;7497:8;7494:16;7489:2;7483:4;7480:12;7476:35;7460:111;7457:246;;;7613:8;7607:4;7603:19;7594:28;;7648:3;7641:5;7638:14;7635:40;;;7655:18;;:::i;:::-;7635:40;7688:5;;7457:246;7728:42;7766:3;7756:8;7750:4;7747:1;7728:42;:::i;:::-;7713:57;;;;7802:4;7797:3;7793:14;7786:5;7783:25;7780:51;;;7811:18;;:::i;:::-;7780:51;7860:4;7853:5;7849:16;7840:25;;6798:1073;;;;;;:::o;7877:285::-;7937:5;7961:23;7979:4;7961:23;:::i;:::-;7953:31;;8005:27;8023:8;8005:27;:::i;:::-;7993:39;;8051:104;8088:66;8078:8;8072:4;8051:104;:::i;:::-;8042:113;;7877:285;;;;:::o;523:1254:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_501": {
									"entryPoint": 1091,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_548": {
									"entryPoint": 518,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balancesOf_495": {
									"entryPoint": 773,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimalFactor_475": {
									"entryPoint": 939,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_467": {
									"entryPoint": 767,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToken_554": {
									"entryPoint": 762,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_464": {
									"entryPoint": 949,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenName_461": {
									"entryPoint": 797,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_458": {
									"entryPoint": 756,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_520": {
									"entryPoint": 945,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transfer_516": {
									"entryPoint": 947,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5122:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:4"
															},
															"nodeType": "YulIf",
															"src": "1290:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"src": "1197:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1711:7:4",
														"type": ""
													}
												],
												"src": "1677:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1832:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1820:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1827:3:4",
														"type": ""
													}
												],
												"src": "1773:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1980:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1990:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1952:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1964:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1975:4:4",
														"type": ""
													}
												],
												"src": "1888:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2169:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2209:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2191:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2179:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2157:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2164:3:4",
														"type": ""
													}
												],
												"src": "2104:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2336:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2372:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2298:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2310:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2321:4:4",
														"type": ""
													}
												],
												"src": "2228:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2522:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2568:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2570:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2570:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2570:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2543:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2539:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2539:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2564:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2535:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:32:4"
															},
															"nodeType": "YulIf",
															"src": "2532:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2661:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2676:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2680:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2705:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2715:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2705:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2492:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2503:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2515:6:4",
														"type": ""
													}
												],
												"src": "2456:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2850:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2861:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2877:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2871:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2833:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2843:6:4",
														"type": ""
													}
												],
												"src": "2791:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2992:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3009:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3002:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3049:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3030:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2964:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2969:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2980:11:4",
														"type": ""
													}
												],
												"src": "2896:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3133:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3143:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3152:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3147:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3212:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3237:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3242:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3233:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3233:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3256:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3261:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3252:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3252:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3246:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3246:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3226:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3226:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3173:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3176:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3170:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3184:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3186:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3195:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3198:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3191:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3191:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3186:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3166:3:4",
																"statements": []
															},
															"src": "3162:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3300:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3291:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3291:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3309:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3284:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3284:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3115:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3120:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3125:6:4",
														"type": ""
													}
												],
												"src": "3071:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3371:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3381:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3399:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3406:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3395:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3395:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3415:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3411:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3354:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3364:6:4",
														"type": ""
													}
												],
												"src": "3323:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3523:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3533:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3580:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3547:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3547:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3537:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3595:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3661:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3666:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3602:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3602:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3721:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3728:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3735:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3740:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3682:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3756:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3772:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3504:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3511:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3519:3:4",
														"type": ""
													}
												],
												"src": "3431:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3942:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3954:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3950:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3942:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3989:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4000:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4008:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3978:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3978:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4034:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4106:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4115:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4042:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4034:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3904:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3916:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3927:4:4",
														"type": ""
													}
												],
												"src": "3814:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4216:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4262:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4264:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4264:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4264:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4237:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4246:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4258:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4229:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:32:4"
															},
															"nodeType": "YulIf",
															"src": "4226:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4355:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4370:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4374:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4399:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4434:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4445:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4430:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4430:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4454:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4409:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4409:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4399:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4482:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4497:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4511:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4501:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4527:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4537:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4537:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4527:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4178:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4189:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4201:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4209:6:4",
														"type": ""
													}
												],
												"src": "4133:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4651:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4755:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4748:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4748:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4613:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4860:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4874:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4880:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4870:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4860:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4891:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4921:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4927:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4895:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4968:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4982:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4996:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5004:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4992:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4992:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4982:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4948:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:26:4"
															},
															"nodeType": "YulIf",
															"src": "4938:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5071:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "5085:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5085:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5085:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5035:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5058:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5066:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5055:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5055:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5032:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:38:4"
															},
															"nodeType": "YulIf",
															"src": "5029:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4834:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4843:6:4",
														"type": ""
													}
												],
												"src": "4799:320:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80636c02a931116100715780636c02a931146101685780636d6a6a4d14610186578063811c34d3146101a45780638a4068dd146101ae57806395d89b41146101b8578063dd62ed3e146101d6576100a9565b8063095ea7b3146100ae57806318160ddd146100de5780632004ffd9146100fc578063313ce5671461011a5780636392a51f14610138575b600080fd5b6100c860048036038101906100c39190610501565b610206565b6040516100d5919061055c565b60405180910390f35b6100e66102f4565b6040516100f39190610586565b60405180910390f35b6101046102fa565b6040516101119190610586565b60405180910390f35b6101226102ff565b60405161012f9190610586565b60405180910390f35b610152600480360381019061014d91906105a1565b610305565b60405161015f9190610586565b60405180910390f35b61017061031d565b60405161017d919061065e565b60405180910390f35b61018e6103ab565b60405161019b9190610586565b60405180910390f35b6101ac6103b1565b005b6101b66103b3565b005b6101c06103b5565b6040516101cd919061065e565b60405180910390f35b6101f060048036038101906101eb9190610680565b610443565b6040516101fd9190610586565b60405180910390f35b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516102e69190610586565b60405180910390a392915050565b60005481565b600090565b60035481565b60056020528060005260406000206000915090505481565b6001805461032a906106ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610356906106ef565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b60045481565b565b565b600280546103c2906106ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee906106ef565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b505050505081565b6006602052816000526040600020602052806000526040600020600091509150505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104988261046d565b9050919050565b6104a88161048d565b81146104b357600080fd5b50565b6000813590506104c58161049f565b92915050565b6000819050919050565b6104de816104cb565b81146104e957600080fd5b50565b6000813590506104fb816104d5565b92915050565b6000806040838503121561051857610517610468565b5b6000610526858286016104b6565b9250506020610537858286016104ec565b9150509250929050565b60008115159050919050565b61055681610541565b82525050565b6000602082019050610571600083018461054d565b92915050565b610580816104cb565b82525050565b600060208201905061059b6000830184610577565b92915050565b6000602082840312156105b7576105b6610468565b5b60006105c5848285016104b6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000610630826105ce565b61063a81856105d9565b935061064a8185602086016105ea565b61065381610614565b840191505092915050565b600060208201905081810360008301526106788184610625565b905092915050565b6000806040838503121561069757610696610468565b5b60006106a5858286016104b6565b92505060206106b6858286016104b6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061070757607f821691505b60208210810361071a576107196106c0565b5b5091905056fea26469706673582212200ece7e998cc20b6e7118cb7e6dc17f1069ea40bf921d6cb989fc9477f5564dd864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x811C34D3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2004FFD9 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x6392A51F EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x680 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x32A SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0x6EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x410 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498 DUP3 PUSH2 0x46D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A8 DUP2 PUSH2 0x48D JUMP JUMPDEST DUP2 EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C5 DUP2 PUSH2 0x49F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP2 EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FB DUP2 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x526 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x571 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x580 DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B6 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C5 DUP5 DUP3 DUP6 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x630 DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x63A DUP2 DUP6 PUSH2 0x5D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x64A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x653 DUP2 PUSH2 0x614 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x678 DUP2 DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x468 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A5 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B6 DUP6 DUP3 DUP7 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x707 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x71A JUMPI PUSH2 0x719 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xCE PUSH31 0x998CC20B6E7118CB7E6DC17F1069EA40BF921D6CB989FC9477F5564DD86473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "523:1254:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1485:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;728:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1708:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;868:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;784:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;918:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1423:54;;;:::i;:::-;;1373:42;;;:::i;:::-;;833:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1219:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1485:215;1549:12;1607:6;1573:9;:21;1583:10;1573:21;;;;;;;;;;;;;;;:31;1595:8;1573:31;;;;;;;;;;;;;;;:40;;;;1650:8;1629:38;;1638:10;1629:38;;;1660:6;1629:38;;;;;;:::i;:::-;;;;;;;;1485:215;;;;:::o;728:49::-;;;;:::o;1708:54::-;1745:4;1708:54;:::o;868:25::-;;;;:::o;1166:46::-;;;;;;;;;;;;;;;;;:::o;784:42::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;918:51::-;;;;:::o;1423:54::-;:::o;1373:42::-;:::o;833:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1219:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:329::-;2515:6;2564:2;2552:9;2543:7;2539:23;2535:32;2532:119;;;2570:79;;:::i;:::-;2532:119;2690:1;2715:53;2760:7;2751:6;2740:9;2736:22;2715:53;:::i;:::-;2705:63;;2661:117;2456:329;;;;:::o;2791:99::-;2843:6;2877:5;2871:12;2861:22;;2791:99;;;:::o;2896:169::-;2980:11;3014:6;3009:3;3002:19;3054:4;3049:3;3045:14;3030:29;;2896:169;;;;:::o;3071:246::-;3152:1;3162:113;3176:6;3173:1;3170:13;3162:113;;;3261:1;3256:3;3252:11;3246:18;3242:1;3237:3;3233:11;3226:39;3198:2;3195:1;3191:10;3186:15;;3162:113;;;3309:1;3300:6;3295:3;3291:16;3284:27;3133:184;3071:246;;;:::o;3323:102::-;3364:6;3415:2;3411:7;3406:2;3399:5;3395:14;3391:28;3381:38;;3323:102;;;:::o;3431:377::-;3519:3;3547:39;3580:5;3547:39;:::i;:::-;3602:71;3666:6;3661:3;3602:71;:::i;:::-;3595:78;;3682:65;3740:6;3735:3;3728:4;3721:5;3717:16;3682:65;:::i;:::-;3772:29;3794:6;3772:29;:::i;:::-;3767:3;3763:39;3756:46;;3523:285;3431:377;;;;:::o;3814:313::-;3927:4;3965:2;3954:9;3950:18;3942:26;;4014:9;4008:4;4004:20;4000:1;3989:9;3985:17;3978:47;4042:78;4115:4;4106:6;4042:78;:::i;:::-;4034:86;;3814:313;;;;:::o;4133:474::-;4201:6;4209;4258:2;4246:9;4237:7;4233:23;4229:32;4226:119;;;4264:79;;:::i;:::-;4226:119;4384:1;4409:53;4454:7;4445:6;4434:9;4430:22;4409:53;:::i;:::-;4399:63;;4355:117;4511:2;4537:53;4582:7;4573:6;4562:9;4558:22;4537:53;:::i;:::-;4527:63;;4482:118;4133:474;;;;;:::o;4613:180::-;4661:77;4658:1;4651:88;4758:4;4755:1;4748:15;4782:4;4779:1;4772:15;4799:320;4843:6;4880:1;4874:4;4870:12;4860:22;;4927:1;4921:4;4917:12;4948:18;4938:81;;5004:4;4996:6;4992:17;4982:27;;4938:81;5066:2;5058:6;5055:14;5035:18;5032:38;5029:84;;5085:18;;:::i;:::-;5029:84;4850:269;4799:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "375600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balancesOf(address)": "2903",
								"decimalFactor()": "2451",
								"decimals()": "2496",
								"mintToken()": "374",
								"symbol()": "infinite",
								"tokenName()": "infinite",
								"totalSupply()": "2452",
								"transfer()": "210",
								"transferFrom()": "188"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 764,
									"end": 777,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 764,
									"end": 777,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 754,
									"end": 761,
									"name": "PUSH",
									"source": 3,
									"value": "F4240"
								},
								{
									"begin": 754,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 754,
									"end": 777,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 754,
									"end": 777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 754,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 754,
									"end": 777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 754,
									"end": 777,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 754,
									"end": 777,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 728,
									"end": 777,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 728,
									"end": 777,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "77656233436C756273546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 784,
									"end": 826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 784,
									"end": 826,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 784,
									"end": 826,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "5743540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 833,
									"end": 861,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 833,
									"end": 861,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 891,
									"end": 893,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 868,
									"end": 893,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 868,
									"end": 893,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 960,
									"end": 968,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 960,
									"end": 968,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 946,
									"end": 948,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 946,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 946,
									"end": 969,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 946,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 946,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 946,
									"end": 969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 946,
									"end": 969,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 946,
									"end": 969,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 918,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 918,
									"end": 969,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1292,
									"end": 1363,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1342,
									"end": 1353,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1327,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1338,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1339,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1353,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1317,
									"end": 1353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 686,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 316,
									"end": 323,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 358,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 339,
									"end": 359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 339,
									"end": 359,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 391,
									"end": 392,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 373,
									"end": 393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 373,
									"end": 393,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 368,
									"end": 393,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 368,
									"end": 393,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 428,
									"end": 429,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 425,
									"end": 426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 421,
									"end": 430,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 468,
									"end": 479,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 450,
									"end": 480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 450,
									"end": 480,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 450,
									"end": 480,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 439,
									"end": 480,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 439,
									"end": 480,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 629,
									"end": 630,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 620,
									"end": 627,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 631,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 613,
									"end": 614,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 610,
									"end": 632,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 590,
									"end": 591,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 583,
									"end": 592,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 563,
									"end": 646,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 540,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 659,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 540,
									"end": 679,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 324,
									"end": 686,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 276,
									"end": 686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 791,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 692,
									"end": 791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 744,
									"end": 750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 783,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 772,
									"end": 784,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 762,
									"end": 784,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 762,
									"end": 784,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 791,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 797,
									"end": 977,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 797,
									"end": 977,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 923,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 942,
									"end": 946,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 966,
									"end": 970,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 963,
									"end": 964,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 956,
									"end": 971,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 983,
									"end": 1163,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 983,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1028,
									"end": 1029,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1021,
									"end": 1109,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1132,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1125,
									"end": 1126,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1118,
									"end": 1133,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1152,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1149,
									"end": 1150,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 1157,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1489,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1213,
									"end": 1219,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1250,
									"end": 1251,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1244,
									"end": 1248,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1240,
									"end": 1252,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1230,
									"end": 1252,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1230,
									"end": 1252,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1291,
									"end": 1295,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1287,
									"end": 1299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1336,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1308,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1308,
									"end": 1389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1378,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1366,
									"end": 1372,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1362,
									"end": 1379,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1379,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1379,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1308,
									"end": 1389,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1308,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1425,
									"end": 1439,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1402,
									"end": 1440,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1399,
									"end": 1483,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1455,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1455,
									"end": 1473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1473,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1455,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1483,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1399,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1489,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1489,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1636,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1495,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1544,
									"end": 1548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1567,
									"end": 1570,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1559,
									"end": 1570,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1559,
									"end": 1570,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1593,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1587,
									"end": 1588,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1594,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1611,
									"end": 1629,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1636,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1636,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1636,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1735,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1642,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1726,
									"end": 1728,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1714,
									"end": 1719,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1706,
									"end": 1729,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1696,
									"end": 1729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1696,
									"end": 1729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1735,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1735,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1785,
									"end": 1793,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1840,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1829,
									"end": 1833,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1825,
									"end": 1841,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1841,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1841,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1741,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1923,
									"end": 1929,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 1974,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1961,
									"end": 1971,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2026,
									"end": 2092,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2015,
									"end": 2024,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1996,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2093,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1996,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2153,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2133,
									"end": 2142,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2153,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2114,
									"end": 2153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2153,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2114,
									"end": 2153,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2102,
									"end": 2153,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 2102,
									"end": 2153,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2186,
									"end": 2190,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2182,
									"end": 2191,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2175,
									"end": 2180,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2192,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2192,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2192,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2225,
									"end": 2233,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2240,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2214,
									"end": 2219,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2211,
									"end": 2241,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2201,
									"end": 2241,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2201,
									"end": 2241,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1854,
									"end": 2247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2313,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2253,
									"end": 2313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2302,
									"end": 2307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2295,
									"end": 2307,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2295,
									"end": 2307,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2313,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2313,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2313,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2319,
									"end": 2461,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2319,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2369,
									"end": 2378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2420,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2429,
									"end": 2453,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2447,
									"end": 2452,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2429,
									"end": 2453,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2429,
									"end": 2453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2429,
									"end": 2453,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2429,
									"end": 2453,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2420,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2420,
									"end": 2454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2420,
									"end": 2454,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2420,
									"end": 2454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2402,
									"end": 2455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2389,
									"end": 2455,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2389,
									"end": 2455,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2319,
									"end": 2461,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2319,
									"end": 2461,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2319,
									"end": 2461,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2319,
									"end": 2461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2542,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2467,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2510,
									"end": 2513,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2531,
									"end": 2536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2524,
									"end": 2536,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2524,
									"end": 2536,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2542,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2542,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2542,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2548,
									"end": 2817,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2548,
									"end": 2817,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2658,
									"end": 2697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2697,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2658,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2719,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2768,
									"end": 2809,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2792,
									"end": 2808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2768,
									"end": 2809,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2768,
									"end": 2809,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2768,
									"end": 2809,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2760,
									"end": 2766,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2753,
									"end": 2757,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2747,
									"end": 2758,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2719,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2719,
									"end": 2810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2719,
									"end": 2810,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2719,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2713,
									"end": 2717,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2706,
									"end": 2811,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2817,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2548,
									"end": 2817,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2548,
									"end": 2817,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2548,
									"end": 2817,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2548,
									"end": 2817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 2896,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2823,
									"end": 2896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2868,
									"end": 2871,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2823,
									"end": 2896,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 2896,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 3091,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2902,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2979,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2979,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2979,
									"end": 3011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2979,
									"end": 3011,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2979,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 3078,
									"end": 3084,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3070,
									"end": 3076,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3064,
									"end": 3068,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3020,
									"end": 3085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3085,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 3020,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2955,
									"end": 3091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 3091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 3091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 3091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3283,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3097,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3174,
									"end": 3177,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3167,
									"end": 3172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3164,
									"end": 3178,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3228,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 3265,
									"end": 3266,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3258,
									"end": 3263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3228,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3228,
									"end": 3267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3228,
									"end": 3267,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 3228,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3201,
									"end": 3202,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3194,
									"end": 3199,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3190,
									"end": 3203,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3181,
									"end": 3203,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3181,
									"end": 3203,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3157,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3283,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3283,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3289,
									"end": 3832,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3289,
									"end": 3832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3390,
									"end": 3392,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3385,
									"end": 3388,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3382,
									"end": 3393,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3379,
									"end": 3825,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3379,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 3379,
									"end": 3825,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3424,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3456,
									"end": 3461,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3424,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3424,
									"end": 3462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3424,
									"end": 3462,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3424,
									"end": 3462,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3508,
									"end": 3537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3526,
									"end": 3536,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3508,
									"end": 3537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3508,
									"end": 3537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3508,
									"end": 3537,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3508,
									"end": 3537,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3498,
									"end": 3506,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3494,
									"end": 3538,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3691,
									"end": 3693,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3679,
									"end": 3689,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3676,
									"end": 3694,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3673,
									"end": 3722,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3673,
									"end": 3722,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3673,
									"end": 3722,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3712,
									"end": 3720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3697,
									"end": 3720,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3697,
									"end": 3720,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3673,
									"end": 3722,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3673,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3735,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3791,
									"end": 3813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3809,
									"end": 3812,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3791,
									"end": 3813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3813,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3791,
									"end": 3813,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3781,
									"end": 3789,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3777,
									"end": 3814,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3764,
									"end": 3775,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3735,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3735,
									"end": 3815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3735,
									"end": 3815,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3735,
									"end": 3815,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3394,
									"end": 3825,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3394,
									"end": 3825,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3379,
									"end": 3825,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 3379,
									"end": 3825,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3289,
									"end": 3832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3289,
									"end": 3832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3289,
									"end": 3832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3289,
									"end": 3832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3892,
									"end": 3900,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3942,
									"end": 3947,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3936,
									"end": 3940,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3932,
									"end": 3948,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3911,
									"end": 3948,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3911,
									"end": 3948,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4005,
									"end": 4011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4038,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 4086,
									"end": 4087,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4082,
									"end": 4088,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4074,
									"end": 4079,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4071,
									"end": 4072,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4067,
									"end": 4080,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 4038,
									"end": 4089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4089,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 4038,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4034,
									"end": 4090,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4119,
									"end": 4123,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4113,
									"end": 4117,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4109,
									"end": 4124,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4099,
									"end": 4124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4099,
									"end": 4124,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4012,
									"end": 4130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4211,
									"end": 4215,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4357,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4382,
									"end": 4385,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4380,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4357,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 4357,
									"end": 4386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4357,
									"end": 4386,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4357,
									"end": 4386,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4349,
									"end": 4386,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4349,
									"end": 4386,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4419,
									"end": 4422,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4416,
									"end": 4417,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4412,
									"end": 4423,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4406,
									"end": 4410,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4403,
									"end": 4424,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4395,
									"end": 4424,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4395,
									"end": 4424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4135,
									"end": 4430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4435,
									"end": 5830,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4435,
									"end": 5830,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4552,
									"end": 4589,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 4585,
									"end": 4588,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4552,
									"end": 4589,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 4552,
									"end": 4589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4552,
									"end": 4589,
									"name": "tag",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 4552,
									"end": 4589,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4654,
									"end": 4672,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4643,
									"end": 4673,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4640,
									"end": 4696,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4640,
									"end": 4696,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 4640,
									"end": 4696,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 4676,
									"end": 4694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4640,
									"end": 4696,
									"name": "tag",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 4640,
									"end": 4696,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4720,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 4752,
									"end": 4756,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4746,
									"end": 4757,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4720,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 4720,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4720,
									"end": 4758,
									"name": "tag",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 4720,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4805,
									"end": 4872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4865,
									"end": 4871,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4857,
									"end": 4863,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4851,
									"end": 4855,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4805,
									"end": 4872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 4805,
									"end": 4872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4805,
									"end": 4872,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4805,
									"end": 4872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4899,
									"end": 4900,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4923,
									"end": 4927,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4910,
									"end": 4927,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 4927,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4955,
									"end": 4957,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4947,
									"end": 4953,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4944,
									"end": 4958,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4972,
									"end": 4973,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5646,
									"end": 5652,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5720,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 5643,
									"end": 5720,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5695,
									"end": 5704,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5690,
									"end": 5693,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 5686,
									"end": 5705,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5680,
									"end": 5706,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5671,
									"end": 5706,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5671,
									"end": 5706,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5720,
									"name": "tag",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 5643,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5746,
									"end": 5813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 5806,
									"end": 5812,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5799,
									"end": 5804,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5746,
									"end": 5813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 5746,
									"end": 5813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5746,
									"end": 5813,
									"name": "tag",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 5746,
									"end": 5813,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5740,
									"end": 5744,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5733,
									"end": 5814,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5602,
									"end": 5824,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4937,
									"end": 5824,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4937,
									"end": 5824,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "tag",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4967,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5019,
									"end": 5023,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5015,
									"end": 5024,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 5007,
									"end": 5013,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5003,
									"end": 5025,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5085,
									"end": 5089,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 5053,
									"end": 5090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5140,
									"end": 5147,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5137,
									"end": 5138,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5134,
									"end": 5148,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5219,
									"end": 5228,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5214,
									"end": 5217,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 5210,
									"end": 5229,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5204,
									"end": 5230,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5196,
									"end": 5202,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5189,
									"end": 5231,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5270,
									"end": 5271,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5262,
									"end": 5268,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5258,
									"end": 5272,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5248,
									"end": 5272,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5248,
									"end": 5272,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5317,
									"end": 5319,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5306,
									"end": 5315,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5302,
									"end": 5320,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5320,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5167,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5160,
									"end": 5161,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5156,
									"end": 5168,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5151,
									"end": 5168,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5151,
									"end": 5168,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "tag",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 5126,
									"end": 5334,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5362,
									"end": 5368,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5360,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5350,
									"end": 5369,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5347,
									"end": 5526,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5347,
									"end": 5526,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 5347,
									"end": 5526,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5420,
									"end": 5429,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5415,
									"end": 5418,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 5411,
									"end": 5430,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5405,
									"end": 5431,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5463,
									"end": 5511,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5505,
									"end": 5509,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5497,
									"end": 5503,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 5493,
									"end": 5510,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5482,
									"end": 5491,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5463,
									"end": 5511,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 5463,
									"end": 5511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5463,
									"end": 5511,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5463,
									"end": 5511,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5455,
									"end": 5461,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5448,
									"end": 5512,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5370,
									"end": 5526,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5347,
									"end": 5526,
									"name": "tag",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 5347,
									"end": 5526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5572,
									"end": 5573,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5568,
									"end": 5569,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 5560,
									"end": 5566,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 5556,
									"end": 5570,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 5552,
									"end": 5574,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5546,
									"end": 5550,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 5539,
									"end": 5575,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4974,
									"end": 5585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4974,
									"end": 5585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4974,
									"end": 5585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4937,
									"end": 5824,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4937,
									"end": 5824,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4937,
									"end": 5824,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4527,
									"end": 5830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4527,
									"end": 5830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4527,
									"end": 5830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4435,
									"end": 5830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4435,
									"end": 5830,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4435,
									"end": 5830,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5836,
									"end": 5938,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5836,
									"end": 5938,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5878,
									"end": 5886,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5925,
									"end": 5930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5922,
									"end": 5923,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5918,
									"end": 5931,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 5897,
									"end": 5931,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5897,
									"end": 5931,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5836,
									"end": 5938,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5836,
									"end": 5938,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5836,
									"end": 5938,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5836,
									"end": 5938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6005,
									"end": 6010,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6012,
									"end": 6016,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6036,
									"end": 6042,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6027,
									"end": 6042,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6027,
									"end": 6042,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6060,
									"end": 6065,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6051,
									"end": 6065,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6051,
									"end": 6065,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "tag",
									"source": 4,
									"value": "107"
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6095,
									"end": 6096,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6085,
									"end": 6093,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6082,
									"end": 6097,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6185,
									"end": 6188,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6181,
									"end": 6195,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 6175,
									"end": 6179,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6172,
									"end": 6196,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6219,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6219,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 6169,
									"end": 6219,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6199,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 6199,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 6199,
									"end": 6217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6199,
									"end": 6217,
									"name": "tag",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 6199,
									"end": 6217,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6219,
									"name": "tag",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 6169,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6250,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6235,
									"end": 6251,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6232,
									"end": 6683,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6232,
									"end": 6683,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 6232,
									"end": 6683,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6664,
									"end": 6668,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6657,
									"end": 6662,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6653,
									"end": 6669,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6644,
									"end": 6669,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6644,
									"end": 6669,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6232,
									"end": 6683,
									"name": "tag",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 6232,
									"end": 6683,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6714,
									"end": 6718,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6708,
									"end": 6712,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6704,
									"end": 6719,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6696,
									"end": 6719,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6696,
									"end": 6719,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6744,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 6767,
									"end": 6775,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6744,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6744,
									"end": 6776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6744,
									"end": 6776,
									"name": "tag",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 6744,
									"end": 6776,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6732,
									"end": 6776,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 6732,
									"end": 6776,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "107"
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 6074,
									"end": 6786,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5944,
									"end": 6792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6857,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7043,
									"end": 7051,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7033,
									"end": 7073,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 7033,
									"end": 7073,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7065,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7055,
									"end": 7065,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7055,
									"end": 7065,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7066,
									"end": 7071,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 7066,
									"end": 7071,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7033,
									"end": 7073,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 7033,
									"end": 7073,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7082,
									"end": 7118,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 7082,
									"end": 7118,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7109,
									"end": 7110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7100,
									"end": 7110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7111,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 7111,
									"end": 7116,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7082,
									"end": 7118,
									"name": "tag",
									"source": 4,
									"value": "116"
								},
								{
									"begin": 7082,
									"end": 7118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7178,
									"end": 7182,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7262,
									"end": 7263,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7171,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 7171,
									"end": 7448,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "tag",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 7221,
									"end": 7248,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7239,
									"end": 7240,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7230,
									"end": 7240,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7240,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7246,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7246,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 7241,
									"end": 7246,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "tag",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 7257,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7302,
									"end": 7305,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 7292,
									"end": 7300,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7289,
									"end": 7306,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7286,
									"end": 7329,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7286,
									"end": 7329,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 7286,
									"end": 7329,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7309,
									"end": 7327,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 7309,
									"end": 7327,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7309,
									"end": 7327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7309,
									"end": 7327,
									"name": "tag",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 7309,
									"end": 7327,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7286,
									"end": 7329,
									"name": "tag",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 7286,
									"end": 7329,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7358,
									"end": 7366,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7356,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7351,
									"end": 7367,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7342,
									"end": 7367,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7342,
									"end": 7367,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7393,
									"end": 7396,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7386,
									"end": 7391,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7383,
									"end": 7397,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7380,
									"end": 7420,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7380,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 7380,
									"end": 7420,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7400,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 7400,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7400,
									"end": 7418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7400,
									"end": 7418,
									"name": "tag",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 7400,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7380,
									"end": 7420,
									"name": "tag",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 7380,
									"end": 7420,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7433,
									"end": 7438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7433,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 7433,
									"end": 7438,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7171,
									"end": 7448,
									"name": "tag",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 7171,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7171,
									"end": 7448,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7557,
									"end": 7559,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7547,
									"end": 7555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7544,
									"end": 7560,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7538,
									"end": 7541,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7532,
									"end": 7536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7529,
									"end": 7542,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7525,
									"end": 7561,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7507,
									"end": 7509,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 7497,
									"end": 7505,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7494,
									"end": 7510,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7489,
									"end": 7491,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 7483,
									"end": 7487,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7480,
									"end": 7492,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7476,
									"end": 7511,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7460,
									"end": 7571,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 7457,
									"end": 7703,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7457,
									"end": 7703,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 7457,
									"end": 7703,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7613,
									"end": 7621,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7607,
									"end": 7611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7603,
									"end": 7622,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7594,
									"end": 7622,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7594,
									"end": 7622,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7648,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7641,
									"end": 7646,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7638,
									"end": 7652,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 7635,
									"end": 7675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7655,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "126"
								},
								{
									"begin": 7655,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7655,
									"end": 7673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7655,
									"end": 7673,
									"name": "tag",
									"source": 4,
									"value": "126"
								},
								{
									"begin": 7655,
									"end": 7673,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7635,
									"end": 7675,
									"name": "tag",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 7635,
									"end": 7675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7688,
									"end": 7693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 7688,
									"end": 7693,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7457,
									"end": 7703,
									"name": "tag",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 7457,
									"end": 7703,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7728,
									"end": 7770,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7766,
									"end": 7769,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7756,
									"end": 7764,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7750,
									"end": 7754,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7747,
									"end": 7748,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7728,
									"end": 7770,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7728,
									"end": 7770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7728,
									"end": 7770,
									"name": "tag",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7728,
									"end": 7770,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7713,
									"end": 7770,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7713,
									"end": 7770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7713,
									"end": 7770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7713,
									"end": 7770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7802,
									"end": 7806,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7797,
									"end": 7800,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7793,
									"end": 7807,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7783,
									"end": 7808,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7780,
									"end": 7831,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7780,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 7780,
									"end": 7831,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7811,
									"end": 7829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7811,
									"end": 7829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7811,
									"end": 7829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7811,
									"end": 7829,
									"name": "tag",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7811,
									"end": 7829,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7780,
									"end": 7831,
									"name": "tag",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 7780,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7860,
									"end": 7864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7853,
									"end": 7858,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7849,
									"end": 7865,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 7840,
									"end": 7865,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7840,
									"end": 7865,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6798,
									"end": 7871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7937,
									"end": 7942,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7961,
									"end": 7984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7979,
									"end": 7983,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7961,
									"end": 7984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 7961,
									"end": 7984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7961,
									"end": 7984,
									"name": "tag",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7961,
									"end": 7984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7953,
									"end": 7984,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7953,
									"end": 7984,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8005,
									"end": 8032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 8023,
									"end": 8031,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8005,
									"end": 8032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 8005,
									"end": 8032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8005,
									"end": 8032,
									"name": "tag",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 8005,
									"end": 8032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7993,
									"end": 8032,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7993,
									"end": 8032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8051,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 8088,
									"end": 8154,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8078,
									"end": 8086,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8072,
									"end": 8076,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8051,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 8051,
									"end": 8155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8051,
									"end": 8155,
									"name": "tag",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 8051,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8042,
									"end": 8155,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8042,
									"end": 8155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7877,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 1777,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ece7e998cc20b6e7118cb7e6dc17f1069ea40bf921d6cb989fc9477f5564dd864736f6c63430008120033",
									".code": [
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "6C02A931"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "6C02A931"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "6D6A6A4D"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "811C34D3"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "8A4068DD"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "2004FFD9"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "6392A51F"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 523,
											"end": 1777,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1485,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1485,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 728,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1708,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1708,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 868,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 868,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1166,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1166,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1166,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 784,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 784,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 918,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 918,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1423,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1373,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 833,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 833,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1219,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1219,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1219,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1593,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1603,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1648,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1660,
											"end": 1666,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1629,
											"end": 1667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 777,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 784,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 784,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 784,
											"end": 826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 784,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 918,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1423,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1373,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 833,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 833,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 833,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2191,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2372,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2570,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2715,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2791,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2861,
											"end": 2883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2861,
											"end": 2883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 2991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3317,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3071,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3183,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3246,
											"end": 3264,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3162,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3298,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3284,
											"end": 3311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3425,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3323,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3418,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3399,
											"end": 3404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3419,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3580,
											"end": 3585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3547,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3586,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3547,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3661,
											"end": 3664,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3602,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3673,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3602,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3673,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3738,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3682,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3747,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3682,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3772,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3801,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3772,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4042,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4115,
											"end": 4119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4042,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4042,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4042,
											"end": 4120,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4042,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4244,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4261,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4345,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4226,
											"end": 4345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4264,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4264,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4264,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4345,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4226,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4443,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4430,
											"end": 4452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4409,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4409,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4462,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4582,
											"end": 4589,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4537,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4793,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4613,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4738,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4748,
											"end": 4763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5119,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4799,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4881,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4874,
											"end": 4878,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4882,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4929,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4938,
											"end": 5019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5019,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4938,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5069,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5032,
											"end": 5070,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5029,
											"end": 5113,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5085,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5113,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5029,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 5119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balancesOf(address)": "6392a51f",
							"decimalFactor()": "6d6a6a4d",
							"decimals()": "313ce567",
							"mintToken()": "2004ffd9",
							"symbol()": "95d89b41",
							"tokenName()": "6c02a931",
							"totalSupply()": "18160ddd",
							"transfer()": "8a4068dd",
							"transferFrom()": "811c34d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balancesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20.sol\":\"web3ClubsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"erc20.sol\":{\"keccak256\":\"0x2ebed71bc1690e81c24a83b568a11183427f4dbd25328a63e0855f0bad9e3a6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea2b3d68ff2b364aed2f2e8e3b6dfa218303337fa3834244847ce120c10aafeb\",\"dweb:/ipfs/Qmb1LmgRYRLHjmAgirCUMnbw7pNh22pToof2WVFVeJpLkq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 458,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 461,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "tokenName",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 467,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 475,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "decimalFactor",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 495,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "balancesOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 501,
								"contract": "erc20.sol:web3ClubsToken",
								"label": "allowance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"erc20.sol": {
				"ast": {
					"absolutePath": "erc20.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							446
						],
						"web3ClubsToken": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "224:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 447,
							"src": "350:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 113,
							"src": "411:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "web3ClubsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "web3ClubsToken",
							"nameLocation": "532:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 453,
									"libraryName": {
										"id": 451,
										"name": "SafeMath",
										"nameLocations": [
											"681:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "681:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "675:27:3",
									"typeName": {
										"id": 452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "694:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 458,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "740:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "728:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 454,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "728:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 455,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "754:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 456,
											"name": "decimalFactor",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 475,
											"src": "764:13:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "754:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 461,
									"mutability": "mutable",
									"name": "tokenName",
									"nameLocation": "798:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "784:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 459,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "784:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "77656233436c756273546f6b656e",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_af36faeed2b4510d6449f1fffca300f5696fcba2c1dc459fc906863a07655165",
											"typeString": "literal_string \"web3ClubsToken\""
										},
										"value": "web3ClubsToken"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 464,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "847:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "833:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 462,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "833:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "574354",
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "856:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c86c972ec5c054e0e517573f7718897d3ae8cbdee02e62c4a18b3c844e5560f5",
											"typeString": "literal_string \"WCT\""
										},
										"value": "WCT"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 467,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "880:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "868:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 465,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "868:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "891:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d6a6a4d",
									"id": 475,
									"mutability": "mutable",
									"name": "decimalFactor",
									"nameLocation": "930:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "918:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 468,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "918:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 474,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 469,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "946:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"arguments": [
												{
													"id": 472,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 467,
													"src": "960:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 471,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "952:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:3",
													"typeDescriptions": {}
												}
											},
											"id": 473,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "952:17:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "946:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 483,
									"name": "Transfer",
									"nameLocation": "986:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1011:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "995:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1034:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1018:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:61:3"
									},
									"src": "980:76:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 491,
									"name": "Approval",
									"nameLocation": "1068:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1093:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1077:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1101:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1135:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1127:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:66:3"
									},
									"src": "1062:81:3"
								},
								{
									"constant": false,
									"functionSelector": "6392a51f",
									"id": 495,
									"mutability": "mutable",
									"name": "balancesOf",
									"nameLocation": "1202:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1166:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 494,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 492,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1175:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1166:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 493,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1186:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 501,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1274:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1219:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 500,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 496,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1227:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1219:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 499,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 497,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1246:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1238:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 498,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1257:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1306:57:3",
										"statements": [
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 504,
															"name": "balancesOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "1317:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 507,
														"indexExpression": {
															"expression": {
																"id": 505,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1328:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1332:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1328:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1317:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1342:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1317:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1317:36:3"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1303:2:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:3"
									},
									"scope": 555,
									"src": "1292:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "1405:10:3",
										"statements": []
									},
									"functionSelector": "8a4068dd",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1382:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:0:3"
									},
									"scope": 555,
									"src": "1373:42:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1459:18:3",
										"statements": []
									},
									"functionSelector": "811c34d3",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1432:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1444:2:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1459:0:3"
									},
									"scope": 555,
									"src": "1423:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "1562:138:3",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 529,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1573:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 533,
															"indexExpression": {
																"expression": {
																	"id": 530,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1583:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1587:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1573:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 534,
														"indexExpression": {
															"id": 532,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "1595:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1573:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1607:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1573:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1573:40:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 539,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1638:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1642:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1638:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "1650:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "1660:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1629:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "EmitStatement",
												"src": "1624:43:3"
											},
											{
												"expression": {
													"id": 545,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 527,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 528,
												"id": 546,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1510:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1502:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1525:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1520:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1520:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:31:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1554:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1549:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:14:3"
									},
									"scope": 555,
									"src": "1485:215:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1752:10:3",
										"statements": []
									},
									"functionSelector": "2004ffd9",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "1717:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1745:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:6:3"
									},
									"scope": 555,
									"src": "1708:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 556,
							"src": "523:1254:3",
							"usedErrors": []
						}
					],
					"src": "224:1553:3"
				},
				"id": 3
			}
		}
	}
}
{
	"id": "915ef11db082b12d0fe727658d1de6c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"tokenweb3.sol": {
				"content": "// Specifies the Solidity version to use\r\npragma solidity ^0.8.13;\r\n\r\n// Imports the SafeMath library from the OpenZeppelin smart contract library.\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n// The following contract is named web3ClubsToken.\r\ncontract web3ClubsToken {\r\n\r\n    // The following line specifies that the SafeMath library should be used for uint256 data types in this contract.\r\n    using SafeMath for uint256;\r\n\r\n    // Declare the token properties \r\n    string public tokenName = \"web3ClubsToken\";\r\n    string public symbol = \"WCT\";\r\n    uint public decimals = 18;\r\n    uint public decimalFactor = 10 ** uint256(decimals);\r\n    uint public totalSupply = 1000000 * decimalFactor;\r\n\r\n    // Declare an event for when tokens are transferred\r\n    event TRANSFER(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    // Declare the mapping of balances to addresses\r\n    mapping (address => uint256) balances;\r\n\r\n    // Declare the mapping of allowances for transferring tokens between addresses\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    // Declare the initial balances for the contract creator\r\n    constructor(uint _totalSupply) public {\r\n        balances[msg.sender] = totalSupply;\r\n        _totalSupply = totalSupply;\r\n    }\r\n\r\n    // Declare the transfer function to send tokens from the sender to the receiver\r\n    function transfer(address _receiver, uint _amount) public returns (bool) {\r\n        // Check if the receiver address is not the zero address and not the sender address\r\n        require(_receiver != address(0));\r\n        require(_receiver != msg.sender);\r\n        // Check if the sender has enough tokens to transfer\r\n        require(balances[msg.sender] >= _amount);\r\n\r\n        // Subtract the transferred amount from the sender's balance\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        // Add the transferred amount to the receiver's balance\r\n        balances[_receiver] = balances[_receiver].add(_amount);\r\n        // Emit a transfer event\r\n        emit TRANSFER(msg.sender, _receiver, _amount);\r\n\r\n        // Return true if the transfer is successful\r\n        return true;\r\n    }\r\n\r\n    // Declare the transferFrom function to allow an address to transfer tokens from another address\r\n    function transferFrom(address _sender, address _receiver, uint _amount) public returns (bool) {\r\n        // Check if the sender and receiver addresses are not the zero address\r\n        require(_sender != address(0));\r\n        require(_receiver != address(0));\r\n        // Check if the sender and receiver addresses are not the same\r\n        require(_receiver != _sender);\r\n        // Check if the sender has enough tokens to transfer\r\n        require(balances[_sender] >= _amount);\r\n        // Check if the sender has granted enough allowance to the caller\r\n        require(allowed[_sender][msg.sender] >= _amount);\r\n\r\n        // Subtract the transferred amount from the sender's balance\r\n        balances[_sender] = balances[_sender].sub(_amount);\r\n        // Add the transferred amount to the receiver's balance\r\n        balances[_receiver] = balances[_receiver].add(_amount);\r\n        // Subtract the transferred amount from the allowed allowance\r\n        allowed[_sender][msg.sender] = allowed[_sender][msg.sender].sub(_amount);\r\n        // Emit a transfer event\r\n        emit TRANSFER(_sender, _receiver, _amount);\r\n\r\n        // Return true if the transfer is successful\r\n        return true;\r\n    }\r\n\r\n    \r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"tokenweb3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tokenweb3.sol": {
				"web3ClubsToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TRANSFER",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "decimalFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tokenweb3.sol\":262:3528  contract web3ClubsToken {... */\n  mstore(0x40, 0x80)\n    /* \"tokenweb3.sol\":487:529  string public tokenName = \"web3ClubsToken\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x77656233436c756273546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x00\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"tokenweb3.sol\":536:564  string public symbol = \"WCT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5743540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"tokenweb3.sol\":594:596  18 */\n  0x12\n    /* \"tokenweb3.sol\":571:596  uint public decimals = 18 */\n  0x02\n  sstore\n    /* \"tokenweb3.sol\":645:653  decimals */\n  sload(0x02)\n    /* \"tokenweb3.sol\":631:633  10 */\n  0x0a\n    /* \"tokenweb3.sol\":631:654  10 ** uint256(decimals) */\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"tokenweb3.sol\":603:654  uint public decimalFactor = 10 ** uint256(decimals) */\n  0x03\n  sstore\n    /* \"tokenweb3.sol\":697:710  decimalFactor */\n  sload(0x03)\n    /* \"tokenweb3.sol\":687:694  1000000 */\n  0x0f4240\n    /* \"tokenweb3.sol\":687:710  1000000 * decimalFactor */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"tokenweb3.sol\":661:710  uint public totalSupply = 1000000 * decimalFactor */\n  0x04\n  sstore\n    /* \"tokenweb3.sol\":1170:1298  constructor(uint _totalSupply) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"tokenweb3.sol\":1242:1253  totalSupply */\n  sload(0x04)\n    /* \"tokenweb3.sol\":1219:1227  balances */\n  0x05\n    /* \"tokenweb3.sol\":1219:1239  balances[msg.sender] */\n  0x00\n    /* \"tokenweb3.sol\":1228:1238  msg.sender */\n  caller\n    /* \"tokenweb3.sol\":1219:1239  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"tokenweb3.sol\":1219:1253  balances[msg.sender] = totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"tokenweb3.sol\":1279:1290  totalSupply */\n  sload(0x04)\n    /* \"tokenweb3.sol\":1264:1290  _totalSupply = totalSupply */\n  swap1\n  pop\n    /* \"tokenweb3.sol\":1170:1298  constructor(uint _totalSupply) public {... */\n  pop\n    /* \"tokenweb3.sol\":262:3528  contract web3ClubsToken {... */\n  jump(tag_13)\n    /* \"#utility.yul\":7:106   */\ntag_14:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_15:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_16:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_17:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_48:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_50\n  tag_16\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":714:798   */\ntag_49:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_18:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_19:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_20:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_21:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_20\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1429:1468   */\n  tag_56\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_22:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_23:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_24:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_60\n    /* \"#utility.yul\":1818:1852   */\n  tag_61\n    /* \"#utility.yul\":1827:1851   */\n  tag_62\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_22\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1818:1852   */\n  tag_23\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1800:1853   */\n  tag_22\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_25:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_26:\n    /* \"#utility.yul\":2056:2095   */\n  tag_65\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2117:2208   */\n  tag_66\n    /* \"#utility.yul\":2166:2207   */\n  tag_67\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_21\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_27:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_28:\n    /* \"#utility.yul\":2377:2409   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2418:2483   */\n  tag_71\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_29:\n    /* \"#utility.yul\":2555:2675   */\ntag_73:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_76\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_28\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_30:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_79\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_18\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2906:2935   */\n  tag_80\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_19\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_81:\n    /* \"#utility.yul\":3133:3213   */\n  tag_82\n    /* \"#utility.yul\":3189:3211   */\n  tag_83\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_19\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_29\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_78:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_31:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_32:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_86\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_31\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_33:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_88\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_90\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_14\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_92\n  tag_15\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4038:4094   */\ntag_91:\n    /* \"#utility.yul\":4118:4156   */\n  tag_93\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_17\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4203:4270   */\n  tag_94\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_97:\n    /* \"#utility.yul\":5144:5211   */\n  tag_98\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_33\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_95)\n    /* \"#utility.yul\":4365:4983   */\ntag_96:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_99\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_18\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_100:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_104\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_103:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_95:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_34:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_35:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_36:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_108:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_112\n  tag_34\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5753:5803   */\ntag_111:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_113:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_114\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_35\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_37:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_115)\n    /* \"#utility.yul\":6617:6657   */\ntag_116:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_115)\n    /* \"#utility.yul\":6666:6702   */\ntag_117:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_118)\n    /* \"#utility.yul\":6805:6832   */\ntag_119:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_115)\n    /* \"#utility.yul\":6841:7032   */\ntag_120:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_122\n  tag_34\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6870:6913   */\ntag_121:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_124\n  tag_34\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6964:7004   */\ntag_123:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_115)\n    /* \"#utility.yul\":6755:7032   */\ntag_118:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_127\n  tag_34\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7219:7259   */\ntag_126:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_115)\n    /* \"#utility.yul\":7041:7287   */\ntag_125:\n    /* \"#utility.yul\":7312:7354   */\n  tag_128\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_36\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_130\n  tag_34\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7364:7415   */\ntag_129:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_115:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7746   */\ntag_5:\n    /* \"#utility.yul\":7521:7526   */\n  0x00\n    /* \"#utility.yul\":7545:7568   */\n  tag_132\n    /* \"#utility.yul\":7563:7567   */\n  dup3\n    /* \"#utility.yul\":7545:7568   */\n  tag_22\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7537:7568   */\n  swap2\n  pop\n    /* \"#utility.yul\":7589:7616   */\n  tag_133\n    /* \"#utility.yul\":7607:7615   */\n  dup4\n    /* \"#utility.yul\":7589:7616   */\n  tag_22\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7577:7616   */\n  swap3\n  pop\n    /* \"#utility.yul\":7635:7739   */\n  tag_134\n    /* \"#utility.yul\":7672:7738   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7662:7670   */\n  dup5\n    /* \"#utility.yul\":7656:7660   */\n  dup5\n    /* \"#utility.yul\":7635:7739   */\n  tag_37\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7626:7739   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7746   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7752:8162   */\ntag_7:\n    /* \"#utility.yul\":7792:7799   */\n  0x00\n    /* \"#utility.yul\":7815:7835   */\n  tag_136\n    /* \"#utility.yul\":7833:7834   */\n  dup3\n    /* \"#utility.yul\":7815:7835   */\n  tag_22\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7810:7835   */\n  swap2\n  pop\n    /* \"#utility.yul\":7849:7869   */\n  tag_137\n    /* \"#utility.yul\":7867:7868   */\n  dup4\n    /* \"#utility.yul\":7849:7869   */\n  tag_22\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7844:7869   */\n  swap3\n  pop\n    /* \"#utility.yul\":7904:7905   */\n  dup3\n    /* \"#utility.yul\":7901:7902   */\n  dup3\n    /* \"#utility.yul\":7897:7906   */\n  mul\n    /* \"#utility.yul\":7926:7956   */\n  tag_138\n    /* \"#utility.yul\":7944:7955   */\n  dup2\n    /* \"#utility.yul\":7926:7956   */\n  tag_22\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7915:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":8105:8106   */\n  dup3\n    /* \"#utility.yul\":8096:8103   */\n  dup3\n    /* \"#utility.yul\":8092:8107   */\n  div\n    /* \"#utility.yul\":8089:8090   */\n  dup5\n    /* \"#utility.yul\":8086:8108   */\n  eq\n    /* \"#utility.yul\":8066:8067   */\n  dup4\n    /* \"#utility.yul\":8059:8068   */\n  iszero\n    /* \"#utility.yul\":8039:8122   */\n  or\n    /* \"#utility.yul\":8016:8155   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8135:8153   */\n  tag_140\n  tag_34\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8016:8155   */\ntag_139:\n    /* \"#utility.yul\":7800:8162   */\n  pop\n    /* \"#utility.yul\":7752:8162   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8249:8366   */\ntag_39:\n    /* \"#utility.yul\":8358:8359   */\n  0x00\n    /* \"#utility.yul\":8355:8356   */\n  dup1\n    /* \"#utility.yul\":8348:8360   */\n  revert\n    /* \"#utility.yul\":8495:8617   */\ntag_41:\n    /* \"#utility.yul\":8568:8592   */\n  tag_145\n    /* \"#utility.yul\":8586:8591   */\n  dup2\n    /* \"#utility.yul\":8568:8592   */\n  tag_22\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8561:8566   */\n  dup2\n    /* \"#utility.yul\":8558:8593   */\n  eq\n    /* \"#utility.yul\":8548:8611   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":8607:8608   */\n  0x00\n    /* \"#utility.yul\":8604:8605   */\n  dup1\n    /* \"#utility.yul\":8597:8609   */\n  revert\n    /* \"#utility.yul\":8548:8611   */\ntag_146:\n    /* \"#utility.yul\":8495:8617   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8623:8766   */\ntag_42:\n    /* \"#utility.yul\":8680:8685   */\n  0x00\n    /* \"#utility.yul\":8711:8717   */\n  dup2\n    /* \"#utility.yul\":8705:8718   */\n  mload\n    /* \"#utility.yul\":8696:8718   */\n  swap1\n  pop\n    /* \"#utility.yul\":8727:8760   */\n  tag_148\n    /* \"#utility.yul\":8754:8759   */\n  dup2\n    /* \"#utility.yul\":8727:8760   */\n  tag_41\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8623:8766   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8772:9123   */\ntag_10:\n    /* \"#utility.yul\":8842:8848   */\n  0x00\n    /* \"#utility.yul\":8891:8893   */\n  0x20\n    /* \"#utility.yul\":8879:8888   */\n  dup3\n    /* \"#utility.yul\":8870:8877   */\n  dup5\n    /* \"#utility.yul\":8866:8889   */\n  sub\n    /* \"#utility.yul\":8862:8894   */\n  slt\n    /* \"#utility.yul\":8859:8978   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":8897:8976   */\n  tag_151\n  tag_39\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8859:8978   */\ntag_150:\n    /* \"#utility.yul\":9017:9018   */\n  0x00\n    /* \"#utility.yul\":9042:9106   */\n  tag_152\n    /* \"#utility.yul\":9098:9105   */\n  dup5\n    /* \"#utility.yul\":9089:9095   */\n  dup3\n    /* \"#utility.yul\":9078:9087   */\n  dup6\n    /* \"#utility.yul\":9074:9096   */\n  add\n    /* \"#utility.yul\":9042:9106   */\n  tag_42\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":9032:9106   */\n  swap2\n  pop\n    /* \"#utility.yul\":8988:9116   */\n  pop\n    /* \"#utility.yul\":8772:9123   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"tokenweb3.sol\":262:3528  contract web3ClubsToken {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tokenweb3.sol\":262:3528  contract web3ClubsToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x6c02a931\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6d6a6a4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tokenweb3.sol\":661:710  uint public totalSupply = 1000000 * decimalFactor */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":2311:3515  function transferFrom(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":571:596  uint public decimals = 18 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":487:529  string public tokenName = \"web3ClubsToken\" */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":603:654  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":536:564  string public symbol = \"WCT\" */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":1391:2201  function transfer(address _receiver, uint _amount) public returns (bool) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tokenweb3.sol\":661:710  uint public totalSupply = 1000000 * decimalFactor */\n    tag_12:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"tokenweb3.sol\":2311:3515  function transferFrom(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n    tag_18:\n        /* \"tokenweb3.sol\":2399:2403  bool */\n      0x00\n        /* \"tokenweb3.sol\":2523:2524  0 */\n      dup1\n        /* \"tokenweb3.sol\":2504:2525  _sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":2504:2511  _sender */\n      dup5\n        /* \"tokenweb3.sol\":2504:2525  _sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tokenweb3.sol\":2496:2526  require(_sender != address(0)) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"tokenweb3.sol\":2566:2567  0 */\n      0x00\n        /* \"tokenweb3.sol\":2545:2568  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":2545:2554  _receiver */\n      dup4\n        /* \"tokenweb3.sol\":2545:2568  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tokenweb3.sol\":2537:2569  require(_receiver != address(0)) */\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n        /* \"tokenweb3.sol\":2673:2680  _sender */\n      dup4\n        /* \"tokenweb3.sol\":2660:2680  _receiver != _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":2660:2669  _receiver */\n      dup4\n        /* \"tokenweb3.sol\":2660:2680  _receiver != _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tokenweb3.sol\":2652:2681  require(_receiver != _sender) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"tokenweb3.sol\":2783:2790  _amount */\n      dup2\n        /* \"tokenweb3.sol\":2762:2770  balances */\n      0x05\n        /* \"tokenweb3.sol\":2762:2779  balances[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":2771:2778  _sender */\n      dup7\n        /* \"tokenweb3.sol\":2762:2779  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":2762:2790  balances[_sender] >= _amount */\n      lt\n      iszero\n        /* \"tokenweb3.sol\":2754:2791  require(balances[_sender] >= _amount) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"tokenweb3.sol\":2917:2924  _amount */\n      dup2\n        /* \"tokenweb3.sol\":2885:2892  allowed */\n      0x06\n        /* \"tokenweb3.sol\":2885:2901  allowed[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":2893:2900  _sender */\n      dup7\n        /* \"tokenweb3.sol\":2885:2901  allowed[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":2885:2913  allowed[_sender][msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":2902:2912  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":2885:2913  allowed[_sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":2885:2924  allowed[_sender][msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"tokenweb3.sol\":2877:2925  require(allowed[_sender][msg.sender] >= _amount) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"tokenweb3.sol\":3028:3058  balances[_sender].sub(_amount) */\n      tag_45\n        /* \"tokenweb3.sol\":3050:3057  _amount */\n      dup3\n        /* \"tokenweb3.sol\":3028:3036  balances */\n      0x05\n        /* \"tokenweb3.sol\":3028:3045  balances[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":3037:3044  _sender */\n      dup8\n        /* \"tokenweb3.sol\":3028:3045  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":3028:3049  balances[_sender].sub */\n      tag_46\n      swap1\n        /* \"tokenweb3.sol\":3028:3058  balances[_sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_45:\n        /* \"tokenweb3.sol\":3008:3016  balances */\n      0x05\n        /* \"tokenweb3.sol\":3008:3025  balances[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":3017:3024  _sender */\n      dup7\n        /* \"tokenweb3.sol\":3008:3025  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":3008:3058  balances[_sender] = balances[_sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tokenweb3.sol\":3156:3188  balances[_receiver].add(_amount) */\n      tag_47\n        /* \"tokenweb3.sol\":3180:3187  _amount */\n      dup3\n        /* \"tokenweb3.sol\":3156:3164  balances */\n      0x05\n        /* \"tokenweb3.sol\":3156:3175  balances[_receiver] */\n      0x00\n        /* \"tokenweb3.sol\":3165:3174  _receiver */\n      dup7\n        /* \"tokenweb3.sol\":3156:3175  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":3156:3179  balances[_receiver].add */\n      tag_48\n      swap1\n        /* \"tokenweb3.sol\":3156:3188  balances[_receiver].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"tokenweb3.sol\":3134:3142  balances */\n      0x05\n        /* \"tokenweb3.sol\":3134:3153  balances[_receiver] */\n      0x00\n        /* \"tokenweb3.sol\":3143:3152  _receiver */\n      dup6\n        /* \"tokenweb3.sol\":3134:3153  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":3134:3188  balances[_receiver] = balances[_receiver].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tokenweb3.sol\":3301:3342  allowed[_sender][msg.sender].sub(_amount) */\n      tag_49\n        /* \"tokenweb3.sol\":3334:3341  _amount */\n      dup3\n        /* \"tokenweb3.sol\":3301:3308  allowed */\n      0x06\n        /* \"tokenweb3.sol\":3301:3317  allowed[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":3309:3316  _sender */\n      dup8\n        /* \"tokenweb3.sol\":3301:3317  allowed[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":3301:3329  allowed[_sender][msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":3318:3328  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":3301:3329  allowed[_sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":3301:3333  allowed[_sender][msg.sender].sub */\n      tag_46\n      swap1\n        /* \"tokenweb3.sol\":3301:3342  allowed[_sender][msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"tokenweb3.sol\":3270:3277  allowed */\n      0x06\n        /* \"tokenweb3.sol\":3270:3286  allowed[_sender] */\n      0x00\n        /* \"tokenweb3.sol\":3278:3285  _sender */\n      dup7\n        /* \"tokenweb3.sol\":3270:3286  allowed[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":3270:3298  allowed[_sender][msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":3287:3297  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":3270:3298  allowed[_sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":3270:3342  allowed[_sender][msg.sender] = allowed[_sender][msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tokenweb3.sol\":3410:3419  _receiver */\n      dup3\n        /* \"tokenweb3.sol\":3392:3429  TRANSFER(_sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":3401:3408  _sender */\n      dup5\n        /* \"tokenweb3.sol\":3392:3429  TRANSFER(_sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a9\n        /* \"tokenweb3.sol\":3421:3428  _amount */\n      dup5\n        /* \"tokenweb3.sol\":3392:3429  TRANSFER(_sender, _receiver, _amount) */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"tokenweb3.sol\":3503:3507  true */\n      0x01\n        /* \"tokenweb3.sol\":3496:3507  return true */\n      swap1\n      pop\n        /* \"tokenweb3.sol\":2311:3515  function transferFrom(address _sender, address _receiver, uint _amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"tokenweb3.sol\":571:596  uint public decimals = 18 */\n    tag_22:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"tokenweb3.sol\":487:529  string public tokenName = \"web3ClubsToken\" */\n    tag_25:\n      0x00\n      dup1\n      sload\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_53\n      swap1\n      tag_52\n      jump\t// in\n    tag_53:\n      dup1\n      iszero\n      tag_54\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_55\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_54)\n    tag_55:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_56:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_56\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"tokenweb3.sol\":603:654  uint public decimalFactor = 10 ** uint256(decimals) */\n    tag_29:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"tokenweb3.sol\":536:564  string public symbol = \"WCT\" */\n    tag_32:\n      0x01\n      dup1\n      sload\n      tag_57\n      swap1\n      tag_52\n      jump\t// in\n    tag_57:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_52\n      jump\t// in\n    tag_58:\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"tokenweb3.sol\":1391:2201  function transfer(address _receiver, uint _amount) public returns (bool) {... */\n    tag_37:\n        /* \"tokenweb3.sol\":1458:1462  bool */\n      0x00\n        /* \"tokenweb3.sol\":1597:1598  0 */\n      dup1\n        /* \"tokenweb3.sol\":1576:1599  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":1576:1585  _receiver */\n      dup4\n        /* \"tokenweb3.sol\":1576:1599  _receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tokenweb3.sol\":1568:1600  require(_receiver != address(0)) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"tokenweb3.sol\":1632:1642  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":1619:1642  _receiver != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":1619:1628  _receiver */\n      dup4\n        /* \"tokenweb3.sol\":1619:1642  _receiver != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tokenweb3.sol\":1611:1643  require(_receiver != msg.sender) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"tokenweb3.sol\":1748:1755  _amount */\n      dup2\n        /* \"tokenweb3.sol\":1724:1732  balances */\n      0x05\n        /* \"tokenweb3.sol\":1724:1744  balances[msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":1733:1743  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":1724:1744  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":1724:1755  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"tokenweb3.sol\":1716:1756  require(balances[msg.sender] >= _amount) */\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n        /* \"tokenweb3.sol\":1862:1895  balances[msg.sender].sub(_amount) */\n      tag_66\n        /* \"tokenweb3.sol\":1887:1894  _amount */\n      dup3\n        /* \"tokenweb3.sol\":1862:1870  balances */\n      0x05\n        /* \"tokenweb3.sol\":1862:1882  balances[msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":1871:1881  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":1862:1882  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":1862:1886  balances[msg.sender].sub */\n      tag_46\n      swap1\n        /* \"tokenweb3.sol\":1862:1895  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"tokenweb3.sol\":1839:1847  balances */\n      0x05\n        /* \"tokenweb3.sol\":1839:1859  balances[msg.sender] */\n      0x00\n        /* \"tokenweb3.sol\":1848:1858  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":1839:1859  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":1839:1895  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tokenweb3.sol\":1993:2025  balances[_receiver].add(_amount) */\n      tag_67\n        /* \"tokenweb3.sol\":2017:2024  _amount */\n      dup3\n        /* \"tokenweb3.sol\":1993:2001  balances */\n      0x05\n        /* \"tokenweb3.sol\":1993:2012  balances[_receiver] */\n      0x00\n        /* \"tokenweb3.sol\":2002:2011  _receiver */\n      dup7\n        /* \"tokenweb3.sol\":1993:2012  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tokenweb3.sol\":1993:2016  balances[_receiver].add */\n      tag_48\n      swap1\n        /* \"tokenweb3.sol\":1993:2025  balances[_receiver].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"tokenweb3.sol\":1971:1979  balances */\n      0x05\n        /* \"tokenweb3.sol\":1971:1990  balances[_receiver] */\n      0x00\n        /* \"tokenweb3.sol\":1980:1989  _receiver */\n      dup6\n        /* \"tokenweb3.sol\":1971:1990  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tokenweb3.sol\":1971:2025  balances[_receiver] = balances[_receiver].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tokenweb3.sol\":2096:2105  _receiver */\n      dup3\n        /* \"tokenweb3.sol\":2075:2115  TRANSFER(msg.sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tokenweb3.sol\":2084:2094  msg.sender */\n      caller\n        /* \"tokenweb3.sol\":2075:2115  TRANSFER(msg.sender, _receiver, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a9\n        /* \"tokenweb3.sol\":2107:2114  _amount */\n      dup5\n        /* \"tokenweb3.sol\":2075:2115  TRANSFER(msg.sender, _receiver, _amount) */\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"tokenweb3.sol\":2189:2193  true */\n      0x01\n        /* \"tokenweb3.sol\":2182:2193  return true */\n      swap1\n      pop\n        /* \"tokenweb3.sol\":1391:2201  function transfer(address _receiver, uint _amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_75:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_76:\n        /* \"#utility.yul\":177:201   */\n      tag_98\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_75\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_100\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_76\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_78:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_80:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_81:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_106\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_80\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_82:\n        /* \"#utility.yul\":1076:1100   */\n      tag_108\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_81\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_109:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_83:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_111\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_82\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_84:\n        /* \"#utility.yul\":1349:1373   */\n      tag_113\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_75\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_114:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_85:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_116\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2168   */\n    tag_17:\n        /* \"#utility.yul\":1626:1632   */\n      0x00\n        /* \"#utility.yul\":1634:1640   */\n      dup1\n        /* \"#utility.yul\":1642:1648   */\n      0x00\n        /* \"#utility.yul\":1691:1693   */\n      0x60\n        /* \"#utility.yul\":1679:1688   */\n      dup5\n        /* \"#utility.yul\":1670:1677   */\n      dup7\n        /* \"#utility.yul\":1666:1689   */\n      sub\n        /* \"#utility.yul\":1662:1694   */\n      slt\n        /* \"#utility.yul\":1659:1778   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1697:1776   */\n      tag_119\n      tag_78\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1659:1778   */\n    tag_118:\n        /* \"#utility.yul\":1817:1818   */\n      0x00\n        /* \"#utility.yul\":1842:1895   */\n      tag_120\n        /* \"#utility.yul\":1887:1894   */\n      dup7\n        /* \"#utility.yul\":1878:1884   */\n      dup3\n        /* \"#utility.yul\":1867:1876   */\n      dup8\n        /* \"#utility.yul\":1863:1885   */\n      add\n        /* \"#utility.yul\":1842:1895   */\n      tag_83\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1832:1895   */\n      swap4\n      pop\n        /* \"#utility.yul\":1788:1905   */\n      pop\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1970:2023   */\n      tag_121\n        /* \"#utility.yul\":2015:2022   */\n      dup7\n        /* \"#utility.yul\":2006:2012   */\n      dup3\n        /* \"#utility.yul\":1995:2004   */\n      dup8\n        /* \"#utility.yul\":1991:2013   */\n      add\n        /* \"#utility.yul\":1970:2023   */\n      tag_83\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1960:2023   */\n      swap3\n      pop\n        /* \"#utility.yul\":1915:2033   */\n      pop\n        /* \"#utility.yul\":2072:2074   */\n      0x40\n        /* \"#utility.yul\":2098:2151   */\n      tag_122\n        /* \"#utility.yul\":2143:2150   */\n      dup7\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2098:2151   */\n      tag_85\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2088:2151   */\n      swap2\n      pop\n        /* \"#utility.yul\":2043:2161   */\n      pop\n        /* \"#utility.yul\":1549:2168   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2174:2264   */\n    tag_86:\n        /* \"#utility.yul\":2208:2215   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2244:2257   */\n      iszero\n        /* \"#utility.yul\":2237:2258   */\n      iszero\n        /* \"#utility.yul\":2226:2258   */\n      swap1\n      pop\n        /* \"#utility.yul\":2174:2264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2379   */\n    tag_87:\n        /* \"#utility.yul\":2351:2372   */\n      tag_125\n        /* \"#utility.yul\":2366:2371   */\n      dup2\n        /* \"#utility.yul\":2351:2372   */\n      tag_86\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2346:2349   */\n      dup3\n        /* \"#utility.yul\":2339:2373   */\n      mstore\n        /* \"#utility.yul\":2270:2379   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2595   */\n    tag_20:\n        /* \"#utility.yul\":2472:2476   */\n      0x00\n        /* \"#utility.yul\":2510:2512   */\n      0x20\n        /* \"#utility.yul\":2499:2508   */\n      dup3\n        /* \"#utility.yul\":2495:2513   */\n      add\n        /* \"#utility.yul\":2487:2513   */\n      swap1\n      pop\n        /* \"#utility.yul\":2523:2588   */\n      tag_127\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2574:2583   */\n      dup4\n        /* \"#utility.yul\":2570:2587   */\n      add\n        /* \"#utility.yul\":2561:2567   */\n      dup5\n        /* \"#utility.yul\":2523:2588   */\n      tag_87\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2385:2595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2601:2700   */\n    tag_88:\n        /* \"#utility.yul\":2653:2659   */\n      0x00\n        /* \"#utility.yul\":2687:2692   */\n      dup2\n        /* \"#utility.yul\":2681:2693   */\n      mload\n        /* \"#utility.yul\":2671:2693   */\n      swap1\n      pop\n        /* \"#utility.yul\":2601:2700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2706:2875   */\n    tag_89:\n        /* \"#utility.yul\":2790:2801   */\n      0x00\n        /* \"#utility.yul\":2824:2830   */\n      dup3\n        /* \"#utility.yul\":2819:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2831   */\n      mstore\n        /* \"#utility.yul\":2864:2868   */\n      0x20\n        /* \"#utility.yul\":2859:2862   */\n      dup3\n        /* \"#utility.yul\":2855:2869   */\n      add\n        /* \"#utility.yul\":2840:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2706:2875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3127   */\n    tag_90:\n        /* \"#utility.yul\":2962:2963   */\n      0x00\n        /* \"#utility.yul\":2972:3085   */\n    tag_131:\n        /* \"#utility.yul\":2986:2992   */\n      dup4\n        /* \"#utility.yul\":2983:2984   */\n      dup2\n        /* \"#utility.yul\":2980:2993   */\n      lt\n        /* \"#utility.yul\":2972:3085   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3071:3072   */\n      dup1\n        /* \"#utility.yul\":3066:3069   */\n      dup3\n        /* \"#utility.yul\":3062:3073   */\n      add\n        /* \"#utility.yul\":3056:3074   */\n      mload\n        /* \"#utility.yul\":3052:3053   */\n      dup2\n        /* \"#utility.yul\":3047:3050   */\n      dup5\n        /* \"#utility.yul\":3043:3054   */\n      add\n        /* \"#utility.yul\":3036:3075   */\n      mstore\n        /* \"#utility.yul\":3008:3010   */\n      0x20\n        /* \"#utility.yul\":3005:3006   */\n      dup2\n        /* \"#utility.yul\":3001:3011   */\n      add\n        /* \"#utility.yul\":2996:3011   */\n      swap1\n      pop\n        /* \"#utility.yul\":2972:3085   */\n      jump(tag_131)\n    tag_133:\n        /* \"#utility.yul\":3119:3120   */\n      0x00\n        /* \"#utility.yul\":3110:3116   */\n      dup5\n        /* \"#utility.yul\":3105:3108   */\n      dup5\n        /* \"#utility.yul\":3101:3117   */\n      add\n        /* \"#utility.yul\":3094:3121   */\n      mstore\n        /* \"#utility.yul\":2943:3127   */\n      pop\n        /* \"#utility.yul\":2881:3127   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3133:3235   */\n    tag_91:\n        /* \"#utility.yul\":3174:3180   */\n      0x00\n        /* \"#utility.yul\":3225:3227   */\n      0x1f\n        /* \"#utility.yul\":3221:3228   */\n      not\n        /* \"#utility.yul\":3216:3218   */\n      0x1f\n        /* \"#utility.yul\":3209:3214   */\n      dup4\n        /* \"#utility.yul\":3205:3219   */\n      add\n        /* \"#utility.yul\":3201:3229   */\n      and\n        /* \"#utility.yul\":3191:3229   */\n      swap1\n      pop\n        /* \"#utility.yul\":3133:3235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3241:3618   */\n    tag_92:\n        /* \"#utility.yul\":3329:3332   */\n      0x00\n        /* \"#utility.yul\":3357:3396   */\n      tag_136\n        /* \"#utility.yul\":3390:3395   */\n      dup3\n        /* \"#utility.yul\":3357:3396   */\n      tag_88\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3412:3483   */\n      tag_137\n        /* \"#utility.yul\":3476:3482   */\n      dup2\n        /* \"#utility.yul\":3471:3474   */\n      dup6\n        /* \"#utility.yul\":3412:3483   */\n      tag_89\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3405:3483   */\n      swap4\n      pop\n        /* \"#utility.yul\":3492:3557   */\n      tag_138\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3545:3548   */\n      dup6\n        /* \"#utility.yul\":3538:3542   */\n      0x20\n        /* \"#utility.yul\":3531:3536   */\n      dup7\n        /* \"#utility.yul\":3527:3543   */\n      add\n        /* \"#utility.yul\":3492:3557   */\n      tag_90\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3582:3611   */\n      tag_139\n        /* \"#utility.yul\":3604:3610   */\n      dup2\n        /* \"#utility.yul\":3582:3611   */\n      tag_91\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3577:3580   */\n      dup5\n        /* \"#utility.yul\":3573:3612   */\n      add\n        /* \"#utility.yul\":3566:3612   */\n      swap2\n      pop\n        /* \"#utility.yul\":3333:3618   */\n      pop\n        /* \"#utility.yul\":3241:3618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3937   */\n    tag_27:\n        /* \"#utility.yul\":3737:3741   */\n      0x00\n        /* \"#utility.yul\":3775:3777   */\n      0x20\n        /* \"#utility.yul\":3764:3773   */\n      dup3\n        /* \"#utility.yul\":3760:3778   */\n      add\n        /* \"#utility.yul\":3752:3778   */\n      swap1\n      pop\n        /* \"#utility.yul\":3824:3833   */\n      dup2\n        /* \"#utility.yul\":3818:3822   */\n      dup2\n        /* \"#utility.yul\":3814:3834   */\n      sub\n        /* \"#utility.yul\":3810:3811   */\n      0x00\n        /* \"#utility.yul\":3799:3808   */\n      dup4\n        /* \"#utility.yul\":3795:3812   */\n      add\n        /* \"#utility.yul\":3788:3835   */\n      mstore\n        /* \"#utility.yul\":3852:3930   */\n      tag_141\n        /* \"#utility.yul\":3925:3929   */\n      dup2\n        /* \"#utility.yul\":3916:3922   */\n      dup5\n        /* \"#utility.yul\":3852:3930   */\n      tag_92\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3844:3930   */\n      swap1\n      pop\n        /* \"#utility.yul\":3624:3937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4417   */\n    tag_36:\n        /* \"#utility.yul\":4011:4017   */\n      0x00\n        /* \"#utility.yul\":4019:4025   */\n      dup1\n        /* \"#utility.yul\":4068:4070   */\n      0x40\n        /* \"#utility.yul\":4056:4065   */\n      dup4\n        /* \"#utility.yul\":4047:4054   */\n      dup6\n        /* \"#utility.yul\":4043:4066   */\n      sub\n        /* \"#utility.yul\":4039:4071   */\n      slt\n        /* \"#utility.yul\":4036:4155   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4074:4153   */\n      tag_144\n      tag_78\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4036:4155   */\n    tag_143:\n        /* \"#utility.yul\":4194:4195   */\n      0x00\n        /* \"#utility.yul\":4219:4272   */\n      tag_145\n        /* \"#utility.yul\":4264:4271   */\n      dup6\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup7\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_83\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4165:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x20\n        /* \"#utility.yul\":4347:4400   */\n      tag_146\n        /* \"#utility.yul\":4392:4399   */\n      dup6\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup7\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_85\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3943:4417   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4603   */\n    tag_93:\n        /* \"#utility.yul\":4471:4548   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4461:4549   */\n      mstore\n        /* \"#utility.yul\":4568:4572   */\n      0x22\n        /* \"#utility.yul\":4565:4566   */\n      0x04\n        /* \"#utility.yul\":4558:4573   */\n      mstore\n        /* \"#utility.yul\":4592:4596   */\n      0x24\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4582:4597   */\n      revert\n        /* \"#utility.yul\":4609:4929   */\n    tag_52:\n        /* \"#utility.yul\":4653:4659   */\n      0x00\n        /* \"#utility.yul\":4690:4691   */\n      0x02\n        /* \"#utility.yul\":4684:4688   */\n      dup3\n        /* \"#utility.yul\":4680:4692   */\n      div\n        /* \"#utility.yul\":4670:4692   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4738   */\n      0x01\n        /* \"#utility.yul\":4731:4735   */\n      dup3\n        /* \"#utility.yul\":4727:4739   */\n      and\n        /* \"#utility.yul\":4758:4776   */\n      dup1\n        /* \"#utility.yul\":4748:4829   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":4814:4818   */\n      0x7f\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4802:4819   */\n      and\n        /* \"#utility.yul\":4792:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4748:4829   */\n    tag_149:\n        /* \"#utility.yul\":4876:4878   */\n      0x20\n        /* \"#utility.yul\":4868:4874   */\n      dup3\n        /* \"#utility.yul\":4865:4879   */\n      lt\n        /* \"#utility.yul\":4845:4863   */\n      dup2\n        /* \"#utility.yul\":4842:4880   */\n      sub\n        /* \"#utility.yul\":4839:4923   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4895:4913   */\n      tag_151\n      tag_93\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4839:4923   */\n    tag_150:\n        /* \"#utility.yul\":4660:4929   */\n      pop\n        /* \"#utility.yul\":4609:4929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4935:5115   */\n    tag_94:\n        /* \"#utility.yul\":4983:5060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":4973:5061   */\n      mstore\n        /* \"#utility.yul\":5080:5084   */\n      0x11\n        /* \"#utility.yul\":5077:5078   */\n      0x04\n        /* \"#utility.yul\":5070:5085   */\n      mstore\n        /* \"#utility.yul\":5104:5108   */\n      0x24\n        /* \"#utility.yul\":5101:5102   */\n      0x00\n        /* \"#utility.yul\":5094:5109   */\n      revert\n        /* \"#utility.yul\":5121:5315   */\n    tag_71:\n        /* \"#utility.yul\":5161:5165   */\n      0x00\n        /* \"#utility.yul\":5181:5201   */\n      tag_154\n        /* \"#utility.yul\":5199:5200   */\n      dup3\n        /* \"#utility.yul\":5181:5201   */\n      tag_75\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5176:5201   */\n      swap2\n      pop\n        /* \"#utility.yul\":5215:5235   */\n      tag_155\n        /* \"#utility.yul\":5233:5234   */\n      dup4\n        /* \"#utility.yul\":5215:5235   */\n      tag_75\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5210:5235   */\n      swap3\n      pop\n        /* \"#utility.yul\":5259:5260   */\n      dup3\n        /* \"#utility.yul\":5256:5257   */\n      dup3\n        /* \"#utility.yul\":5252:5261   */\n      sub\n        /* \"#utility.yul\":5244:5261   */\n      swap1\n      pop\n        /* \"#utility.yul\":5283:5284   */\n      dup2\n        /* \"#utility.yul\":5277:5281   */\n      dup2\n        /* \"#utility.yul\":5274:5285   */\n      gt\n        /* \"#utility.yul\":5271:5308   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":5288:5306   */\n      tag_157\n      tag_94\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5271:5308   */\n    tag_156:\n        /* \"#utility.yul\":5121:5315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5512   */\n    tag_74:\n        /* \"#utility.yul\":5361:5364   */\n      0x00\n        /* \"#utility.yul\":5380:5400   */\n      tag_159\n        /* \"#utility.yul\":5398:5399   */\n      dup3\n        /* \"#utility.yul\":5380:5400   */\n      tag_75\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5375:5400   */\n      swap2\n      pop\n        /* \"#utility.yul\":5414:5434   */\n      tag_160\n        /* \"#utility.yul\":5432:5433   */\n      dup4\n        /* \"#utility.yul\":5414:5434   */\n      tag_75\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5409:5434   */\n      swap3\n      pop\n        /* \"#utility.yul\":5457:5458   */\n      dup3\n        /* \"#utility.yul\":5454:5455   */\n      dup3\n        /* \"#utility.yul\":5450:5459   */\n      add\n        /* \"#utility.yul\":5443:5459   */\n      swap1\n      pop\n        /* \"#utility.yul\":5478:5481   */\n      dup1\n        /* \"#utility.yul\":5475:5476   */\n      dup3\n        /* \"#utility.yul\":5472:5482   */\n      gt\n        /* \"#utility.yul\":5469:5505   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":5485:5503   */\n      tag_162\n      tag_94\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5469:5505   */\n    tag_161:\n        /* \"#utility.yul\":5321:5512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cff01c6e8a8bd87cde796d9267859891894c282cb1528655a0deb789a522756464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9126:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:2"
															},
															"nodeType": "YulIf",
															"src": "623:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:2"
															},
															"nodeType": "YulIf",
															"src": "714:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:2",
														"type": ""
													}
												],
												"src": "484:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:2",
														"type": ""
													}
												],
												"src": "810:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:2",
														"type": ""
													}
												],
												"src": "957:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:2",
														"type": ""
													}
												],
												"src": "1056:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:2",
														"type": ""
													}
												],
												"src": "1169:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"src": "1568:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													}
												],
												"src": "1651:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:2",
														"type": ""
													}
												],
												"src": "1717:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:2",
														"type": ""
													}
												],
												"src": "1865:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:2",
														"type": ""
													}
												],
												"src": "1946:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:2",
														"type": ""
													}
												],
												"src": "2221:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:2",
														"type": ""
													}
												],
												"src": "2300:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:2",
																"statements": []
															},
															"src": "2555:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:2",
														"type": ""
													}
												],
												"src": "2495:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:2"
															},
															"nodeType": "YulIf",
															"src": "2777:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:2",
														"type": ""
													}
												],
												"src": "2687:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:2",
														"type": ""
													}
												],
												"src": "3236:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:2",
														"type": ""
													}
												],
												"src": "3359:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:2",
														"type": ""
													}
												],
												"src": "3533:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:2"
															},
															"nodeType": "YulIf",
															"src": "4038:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:2",
																					"statements": []
																				},
																				"src": "4524:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:2",
														"type": ""
													}
												],
												"src": "3833:1395:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5262:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5481:34:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:13:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5452:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5462:8:2",
														"type": ""
													}
												],
												"src": "5420:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:775:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5611:15:2",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5620:6:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5635:14:2",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5644:5:2"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5693:677:2",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5781:22:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:2"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:2"
																		},
																		"nodeType": "YulIf",
																		"src": "5753:50:2"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5848:419:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6228:25:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:2"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:2"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:2"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:2"
																		},
																		"nodeType": "YulIf",
																		"src": "5816:451:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6280:23:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:2"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:2"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:2"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6316:44:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:2"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:2"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:15:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5682:2:2",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5662:3:2",
																"statements": []
															},
															"src": "5658:712:2"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5556:6:2",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5564:5:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5571:8:2",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5581:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5589:5:2",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5596:4:2",
														"type": ""
													}
												],
												"src": "5528:848:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:1013:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:20:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6639:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:2",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6650:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:16:2"
															},
															"nodeType": "YulIf",
															"src": "6617:40:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:20:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6684:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6695:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:12:2"
															},
															"nodeType": "YulIf",
															"src": "6666:36:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6812:20:2",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6814:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:2",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:2"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6825:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6805:27:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6856:176:2",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6891:22:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:2",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:2"
																				},
																				"nodeType": "YulIf",
																				"src": "6870:43:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6926:25:2",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:2",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:2"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:2"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:2"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6982:22:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:2"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:2"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:2"
																				},
																				"nodeType": "YulIf",
																				"src": "6964:40:2"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7017:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6841:191:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:2",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6762:4:2"
															},
															"nodeType": "YulSwitch",
															"src": "6755:277:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7164:123:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7178:28:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:2"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:2"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:2"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7237:22:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:2"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:2"
																		},
																		"nodeType": "YulIf",
																		"src": "7219:40:2"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7272:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:2",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:2",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:2",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:111:2"
															},
															"nodeType": "YulIf",
															"src": "7041:246:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7297:57:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:2"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:2"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:42:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:2"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7393:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:2"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:25:2"
															},
															"nodeType": "YulIf",
															"src": "7364:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7424:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:2"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:16:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6412:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6418:8:2",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6428:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6436:5:2",
														"type": ""
													}
												],
												"src": "6382:1073:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7527:219:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7537:31:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7563:4:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7545:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:23:2"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7537:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7607:8:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7589:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:27:2"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7577:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7626:113:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7656:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7662:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7635:20:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:104:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7626:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7502:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7508:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7521:5:2",
														"type": ""
													}
												],
												"src": "7461:285:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7800:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7810:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7815:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7810:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7844:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7849:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7844:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7878:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7901:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7904:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7882:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7915:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7944:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7926:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7915:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8133:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8135:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8135:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8066:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8059:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8059:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8089:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8096:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8105:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8092:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8092:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8086:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8039:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8039:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:113:2"
															},
															"nodeType": "YulIf",
															"src": "8016:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7783:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7786:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7792:7:2",
														"type": ""
													}
												],
												"src": "7752:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8208:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8218:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8234:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8228:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8218:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8201:6:2",
														"type": ""
													}
												],
												"src": "8168:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8338:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8348:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8348:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8348:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8249:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8461:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8478:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8481:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8471:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8471:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8372:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8538:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8595:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8604:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8607:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8597:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8597:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8597:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8561:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8586:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8568:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8568:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8558:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8558:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8551:43:2"
															},
															"nodeType": "YulIf",
															"src": "8548:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8531:5:2",
														"type": ""
													}
												],
												"src": "8495:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8686:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8696:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8711:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8705:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8696:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8754:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8727:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8727:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8727:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8664:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8672:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8680:5:2",
														"type": ""
													}
												],
												"src": "8623:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8849:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8895:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8897:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8897:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8897:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8870:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8879:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8866:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:32:2"
															},
															"nodeType": "YulIf",
															"src": "8859:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "8988:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9003:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9017:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9007:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9032:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9078:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9089:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9074:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9074:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9098:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9042:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9032:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8819:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8830:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8842:6:2",
														"type": ""
													}
												],
												"src": "8772:351:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600e81526020017f77656233436c756273546f6b656e000000000000000000000000000000000000815250600090816200004a9190620003c0565b506040518060400160405280600381526020017f574354000000000000000000000000000000000000000000000000000000000081525060019081620000919190620003c0565b506012600255600254600a620000a891906200062a565b600355600354620f4240620000be91906200067b565b600455348015620000ce57600080fd5b50604051620013fb380380620013fb8339818101604052810190620000f49190620006fc565b600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004549050506200072e565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001c857607f821691505b602082108103620001de57620001dd62000180565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000209565b62000254868362000209565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002a16200029b62000295846200026c565b62000276565b6200026c565b9050919050565b6000819050919050565b620002bd8362000280565b620002d5620002cc82620002a8565b84845462000216565b825550505050565b600090565b620002ec620002dd565b620002f9818484620002b2565b505050565b5b81811015620003215762000315600082620002e2565b600181019050620002ff565b5050565b601f82111562000370576200033a81620001e4565b6200034584620001f9565b8101602085101562000355578190505b6200036d6200036485620001f9565b830182620002fe565b50505b505050565b600082821c905092915050565b6000620003956000198460080262000375565b1980831691505092915050565b6000620003b0838362000382565b9150826002028217905092915050565b620003cb8262000146565b67ffffffffffffffff811115620003e757620003e662000151565b5b620003f38254620001af565b6200040082828562000325565b600060209050601f83116001811462000438576000841562000423578287015190505b6200042f8582620003a2565b8655506200049f565b601f1984166200044886620001e4565b60005b8281101562000472578489015182556001820191506020850194506020810190506200044b565b868310156200049257848901516200048e601f89168262000382565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000535578086048111156200050d576200050c620004a7565b5b60018516156200051d5780820291505b80810290506200052d85620004d6565b9450620004ed565b94509492505050565b60008262000550576001905062000623565b8162000560576000905062000623565b81600181146200057957600281146200058457620005ba565b600191505062000623565b60ff841115620005995762000598620004a7565b5b8360020a915084821115620005b357620005b2620004a7565b5b5062000623565b5060208310610133831016604e8410600b8410161715620005f45782820a905083811115620005ee57620005ed620004a7565b5b62000623565b620006038484846001620004e3565b925090508184048111156200061d576200061c620004a7565b5b81810290505b9392505050565b600062000637826200026c565b915062000644836200026c565b9250620006737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200053e565b905092915050565b600062000688826200026c565b915062000695836200026c565b9250828202620006a5816200026c565b91508282048414831517620006bf57620006be620004a7565b5b5092915050565b600080fd5b620006d6816200026c565b8114620006e257600080fd5b50565b600081519050620006f681620006cb565b92915050565b600060208284031215620007155762000714620006c6565b5b60006200072584828501620006e5565b91505092915050565b610cbd806200073e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c02a9311161005b5780636c02a931146100ee5780636d6a6a4d1461010c57806395d89b411461012a578063a9059cbb146101485761007d565b806318160ddd1461008257806323b872dd146100a0578063313ce567146100d0575b600080fd5b61008a610178565b604051610097919061096b565b60405180910390f35b6100ba60048036038101906100b59190610a15565b61017e565b6040516100c79190610a83565b60405180910390f35b6100d86105a7565b6040516100e5919061096b565b60405180910390f35b6100f66105ad565b6040516101039190610b2e565b60405180910390f35b61011461063b565b604051610121919061096b565b60405180910390f35b610132610641565b60405161013f9190610b2e565b60405180910390f35b610162600480360381019061015d9190610b50565b6106cf565b60405161016f9190610a83565b60405180910390f35b60045481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101f157600080fd5b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361022957600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561027557600080fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102fe57600080fd5b61035082600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e582600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104b782600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610594919061096b565b60405180910390a3600190509392505050565b60025481565b600080546105ba90610bbf565b80601f01602080910402602001604051908101604052809291908181526020018280546105e690610bbf565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b505050505081565b60035481565b6001805461064e90610bbf565b80601f016020809104026020016040519081016040528092919081815260200182805461067a90610bbf565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361074157600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561078d57600080fd5b6107df82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610914919061096b565b60405180910390a36001905092915050565b600081836109349190610c1f565b905092915050565b6000818361094a9190610c53565b905092915050565b6000819050919050565b61096581610952565b82525050565b6000602082019050610980600083018461095c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b68261098b565b9050919050565b6109c6816109ab565b81146109d157600080fd5b50565b6000813590506109e3816109bd565b92915050565b6109f281610952565b81146109fd57600080fd5b50565b600081359050610a0f816109e9565b92915050565b600080600060608486031215610a2e57610a2d610986565b5b6000610a3c868287016109d4565b9350506020610a4d868287016109d4565b9250506040610a5e86828701610a00565b9150509250925092565b60008115159050919050565b610a7d81610a68565b82525050565b6000602082019050610a986000830184610a74565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad8578082015181840152602081019050610abd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b0082610a9e565b610b0a8185610aa9565b9350610b1a818560208601610aba565b610b2381610ae4565b840191505092915050565b60006020820190508181036000830152610b488184610af5565b905092915050565b60008060408385031215610b6757610b66610986565b5b6000610b75858286016109d4565b9250506020610b8685828601610a00565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bd757607f821691505b602082108103610bea57610be9610b90565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610952565b9150610c3583610952565b9250828203905081811115610c4d57610c4c610bf0565b5b92915050565b6000610c5e82610952565b9150610c6983610952565b9250828201905080821115610c8157610c80610bf0565b5b9291505056fea2646970667358221220cff01c6e8a8bd87cde796d9267859891894c282cb1528655a0deb789a522756464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77656233436C756273546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x3C0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5743540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x3C0 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x2 SSTORE PUSH1 0x2 SLOAD PUSH1 0xA PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x62A JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x3 SLOAD PUSH3 0xF4240 PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x67B JUMP JUMPDEST PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13FB CODESIZE SUB DUP1 PUSH3 0x13FB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x6FC JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD SWAP1 POP POP PUSH3 0x72E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DE JUMPI PUSH3 0x1DD PUSH3 0x180 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x248 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x209 JUMP JUMPDEST PUSH3 0x254 DUP7 DUP4 PUSH3 0x209 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A1 PUSH3 0x29B PUSH3 0x295 DUP5 PUSH3 0x26C JUMP JUMPDEST PUSH3 0x276 JUMP JUMPDEST PUSH3 0x26C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2BD DUP4 PUSH3 0x280 JUMP JUMPDEST PUSH3 0x2D5 PUSH3 0x2CC DUP3 PUSH3 0x2A8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x216 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x2EC PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x2F9 DUP2 DUP5 DUP5 PUSH3 0x2B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x321 JUMPI PUSH3 0x315 PUSH1 0x0 DUP3 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x2FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x370 JUMPI PUSH3 0x33A DUP2 PUSH3 0x1E4 JUMP JUMPDEST PUSH3 0x345 DUP5 PUSH3 0x1F9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x355 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x36D PUSH3 0x364 DUP6 PUSH3 0x1F9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x2FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x395 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x375 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B0 DUP4 DUP4 PUSH3 0x382 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3CB DUP3 PUSH3 0x146 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3E7 JUMPI PUSH3 0x3E6 PUSH3 0x151 JUMP JUMPDEST JUMPDEST PUSH3 0x3F3 DUP3 SLOAD PUSH3 0x1AF JUMP JUMPDEST PUSH3 0x400 DUP3 DUP3 DUP6 PUSH3 0x325 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x438 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x423 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x42F DUP6 DUP3 PUSH3 0x3A2 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x49F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x448 DUP7 PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x472 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x492 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x48E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x382 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x535 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x50D JUMPI PUSH3 0x50C PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x51D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x52D DUP6 PUSH3 0x4D6 JUMP JUMPDEST SWAP5 POP PUSH3 0x4ED JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x550 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x623 JUMP JUMPDEST DUP2 PUSH3 0x560 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x623 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x579 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x584 JUMPI PUSH3 0x5BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x623 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x599 JUMPI PUSH3 0x598 PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x5B3 JUMPI PUSH3 0x5B2 PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST POP PUSH3 0x623 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x5F4 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x5EE JUMPI PUSH3 0x5ED PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST PUSH3 0x623 JUMP JUMPDEST PUSH3 0x603 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x4E3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x61D JUMPI PUSH3 0x61C PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x637 DUP3 PUSH3 0x26C JUMP JUMPDEST SWAP2 POP PUSH3 0x644 DUP4 PUSH3 0x26C JUMP JUMPDEST SWAP3 POP PUSH3 0x673 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x53E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x688 DUP3 PUSH3 0x26C JUMP JUMPDEST SWAP2 POP PUSH3 0x695 DUP4 PUSH3 0x26C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x6A5 DUP2 PUSH3 0x26C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x6BF JUMPI PUSH3 0x6BE PUSH3 0x4A7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x6D6 DUP2 PUSH3 0x26C JUMP JUMPDEST DUP2 EQ PUSH3 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6F6 DUP2 PUSH3 0x6CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x715 JUMPI PUSH3 0x714 PUSH3 0x6C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x725 DUP5 DUP3 DUP6 ADD PUSH3 0x6E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBD DUP1 PUSH3 0x73E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x148 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3E5 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4B7 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E6 SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x874 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x914 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0xC1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x952 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x980 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B6 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x9AB JUMP JUMPDEST DUP2 EQ PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E3 DUP2 PUSH2 0x9BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x952 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA0F DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2D PUSH2 0x986 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3C DUP7 DUP3 DUP8 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA4D DUP7 DUP3 DUP8 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA5E DUP7 DUP3 DUP8 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP3 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB0A DUP2 DUP6 PUSH2 0xAA9 JUMP JUMPDEST SWAP4 POP PUSH2 0xB1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB23 DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB48 DUP2 DUP5 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0x986 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP6 DUP3 DUP7 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB86 DUP6 DUP3 DUP7 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xBD7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBEA JUMPI PUSH2 0xBE9 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP PUSH2 0xC35 DUP4 PUSH2 0x952 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xBF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP PUSH2 0xC69 DUP4 PUSH2 0x952 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xBF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF CREATE SHR PUSH15 0x8A8BD87CDE796D9267859891894C28 0x2C 0xB1 MSTORE DUP7 SSTORE LOG0 0xDE 0xB7 DUP10 0xA5 0x22 PUSH22 0x6464736F6C6343000812003300000000000000000000 ",
							"sourceMap": "262:3266:1:-:0;;;487:42;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;536:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;594:2;571:25;;645:8;;631:2;:23;;;;:::i;:::-;603:51;;697:13;;687:7;:23;;;;:::i;:::-;661:49;;1170:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1242:11;;1219:8;:20;1228:10;1219:20;;;;;;;;;;;;;;;:34;;;;1279:11;;1264:26;;1170:128;262:3266;;7:99:2;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:285::-;7521:5;7545:23;7563:4;7545:23;:::i;:::-;7537:31;;7589:27;7607:8;7589:27;:::i;:::-;7577:39;;7635:104;7672:66;7662:8;7656:4;7635:104;:::i;:::-;7626:113;;7461:285;;;;:::o;7752:410::-;7792:7;7815:20;7833:1;7815:20;:::i;:::-;7810:25;;7849:20;7867:1;7849:20;:::i;:::-;7844:25;;7904:1;7901;7897:9;7926:30;7944:11;7926:30;:::i;:::-;7915:41;;8105:1;8096:7;8092:15;8089:1;8086:22;8066:1;8059:9;8039:83;8016:139;;8135:18;;:::i;:::-;8016:139;7800:362;7752:410;;;;:::o;8249:117::-;8358:1;8355;8348:12;8495:122;8568:24;8586:5;8568:24;:::i;:::-;8561:5;8558:35;8548:63;;8607:1;8604;8597:12;8548:63;8495:122;:::o;8623:143::-;8680:5;8711:6;8705:13;8696:22;;8727:33;8754:5;8727:33;:::i;:::-;8623:143;;;;:::o;8772:351::-;8842:6;8891:2;8879:9;8870:7;8866:23;8862:32;8859:119;;;8897:79;;:::i;:::-;8859:119;9017:1;9042:64;9098:7;9089:6;9078:9;9074:22;9042:64;:::i;:::-;9032:74;;8988:128;8772:351;;;;:::o;262:3266:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 2364,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimalFactor_334": {
									"entryPoint": 1595,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_326": {
									"entryPoint": 1447,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 2342,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_323": {
									"entryPoint": 1601,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenName_320": {
									"entryPoint": 1453,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_339": {
									"entryPoint": 376,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_544": {
									"entryPoint": 382,
									"id": 544,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_442": {
									"entryPoint": 1743,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5515:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:2",
														"type": ""
													}
												],
												"src": "769:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:2",
														"type": ""
													}
												],
												"src": "901:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:2"
															},
															"nodeType": "YulIf",
															"src": "1056:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:2",
														"type": ""
													}
												],
												"src": "1003:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"src": "1131:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:2"
															},
															"nodeType": "YulIf",
															"src": "1329:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:2",
														"type": ""
													}
												],
												"src": "1276:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:2",
														"type": ""
													}
												],
												"src": "1404:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1649:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1695:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1697:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1697:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1697:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1670:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1691:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:32:2"
															},
															"nodeType": "YulIf",
															"src": "1659:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1788:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1803:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1807:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1832:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1867:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1878:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1863:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1863:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1887:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1842:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1832:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1915:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1930:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1944:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1934:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1960:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1995:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2006:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1991:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1991:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2015:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1970:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1960:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2043:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2058:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2072:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2062:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2088:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2123:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2134:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2119:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2119:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2143:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2098:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2098:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2088:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1614:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1626:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1634:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1642:6:2",
														"type": ""
													}
												],
												"src": "1549:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2226:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2251:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2244:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2226:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2198:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2208:7:2",
														"type": ""
													}
												],
												"src": "2174:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2346:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2366:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2351:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2351:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2317:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2324:3:2",
														"type": ""
													}
												],
												"src": "2270:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2510:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2495:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2487:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2561:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2585:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2570:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2570:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2523:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2523:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2449:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2461:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2472:4:2",
														"type": ""
													}
												],
												"src": "2385:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2671:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2687:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2681:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2643:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2653:6:2",
														"type": ""
													}
												],
												"src": "2601:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2802:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2819:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2859:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2864:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2855:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2840:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2774:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2779:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2790:11:2",
														"type": ""
													}
												],
												"src": "2706:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2943:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2953:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2962:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2957:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3022:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3047:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3052:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3043:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3043:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3066:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3071:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3062:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3062:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3056:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3056:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3036:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2983:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2980:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2994:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2996:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3005:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3008:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3001:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3001:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2996:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2976:3:2",
																"statements": []
															},
															"src": "2972:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3105:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3110:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3119:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2925:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2930:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2935:6:2",
														"type": ""
													}
												],
												"src": "2881:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3191:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3209:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3216:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3225:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3221:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3191:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3164:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3174:6:2",
														"type": ""
													}
												],
												"src": "3133:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3343:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3390:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3357:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3347:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3471:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3476:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3412:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3531:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3545:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3492:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3492:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3566:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3577:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3604:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3582:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3314:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3321:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3329:3:2",
														"type": ""
													}
												],
												"src": "3241:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3742:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3752:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3764:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3775:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3760:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3752:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3799:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3810:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3795:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3795:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3818:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3824:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3814:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3788:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3844:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3916:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3925:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3852:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3844:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3714:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3726:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3737:4:2",
														"type": ""
													}
												],
												"src": "3624:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4026:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4074:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4047:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4039:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:32:2"
															},
															"nodeType": "YulIf",
															"src": "4036:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4165:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4180:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4184:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3988:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3999:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4011:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4019:6:2",
														"type": ""
													}
												],
												"src": "3943:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4451:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4565:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4568:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4558:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4589:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4592:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4582:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4582:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4423:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4660:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4670:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4684:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4690:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4701:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4731:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4705:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4778:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4792:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4806:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4814:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4802:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4802:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4792:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4758:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:26:2"
															},
															"nodeType": "YulIf",
															"src": "4748:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4881:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4895:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4895:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4895:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4845:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4868:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4865:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4865:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4842:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:38:2"
															},
															"nodeType": "YulIf",
															"src": "4839:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4644:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4653:6:2",
														"type": ""
													}
												],
												"src": "4609:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4963:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5077:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5101:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5094:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4935:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5166:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5176:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5199:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5181:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5176:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5210:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5233:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5215:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5210:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5244:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5256:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5259:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5252:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5244:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5286:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5288:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5288:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5288:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5277:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5283:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5274:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:11:2"
															},
															"nodeType": "YulIf",
															"src": "5271:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5152:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5155:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5161:4:2",
														"type": ""
													}
												],
												"src": "5121:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5375:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5398:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5380:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5375:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5409:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5432:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5414:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5409:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5443:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5454:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5457:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5450:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5483:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5485:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5485:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5485:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5472:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:10:2"
															},
															"nodeType": "YulIf",
															"src": "5469:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5352:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5355:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5361:3:2",
														"type": ""
													}
												],
												"src": "5321:191:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c02a9311161005b5780636c02a931146100ee5780636d6a6a4d1461010c57806395d89b411461012a578063a9059cbb146101485761007d565b806318160ddd1461008257806323b872dd146100a0578063313ce567146100d0575b600080fd5b61008a610178565b604051610097919061096b565b60405180910390f35b6100ba60048036038101906100b59190610a15565b61017e565b6040516100c79190610a83565b60405180910390f35b6100d86105a7565b6040516100e5919061096b565b60405180910390f35b6100f66105ad565b6040516101039190610b2e565b60405180910390f35b61011461063b565b604051610121919061096b565b60405180910390f35b610132610641565b60405161013f9190610b2e565b60405180910390f35b610162600480360381019061015d9190610b50565b6106cf565b60405161016f9190610a83565b60405180910390f35b60045481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101f157600080fd5b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361022957600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561027557600080fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102fe57600080fd5b61035082600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e582600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104b782600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610594919061096b565b60405180910390a3600190509392505050565b60025481565b600080546105ba90610bbf565b80601f01602080910402602001604051908101604052809291908181526020018280546105e690610bbf565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b505050505081565b60035481565b6001805461064e90610bbf565b80601f016020809104026020016040519081016040528092919081815260200182805461067a90610bbf565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361074157600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561078d57600080fd5b6107df82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093c90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a984604051610914919061096b565b60405180910390a36001905092915050565b600081836109349190610c1f565b905092915050565b6000818361094a9190610c53565b905092915050565b6000819050919050565b61096581610952565b82525050565b6000602082019050610980600083018461095c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b68261098b565b9050919050565b6109c6816109ab565b81146109d157600080fd5b50565b6000813590506109e3816109bd565b92915050565b6109f281610952565b81146109fd57600080fd5b50565b600081359050610a0f816109e9565b92915050565b600080600060608486031215610a2e57610a2d610986565b5b6000610a3c868287016109d4565b9350506020610a4d868287016109d4565b9250506040610a5e86828701610a00565b9150509250925092565b60008115159050919050565b610a7d81610a68565b82525050565b6000602082019050610a986000830184610a74565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad8578082015181840152602081019050610abd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b0082610a9e565b610b0a8185610aa9565b9350610b1a818560208601610aba565b610b2381610ae4565b840191505092915050565b60006020820190508181036000830152610b488184610af5565b905092915050565b60008060408385031215610b6757610b66610986565b5b6000610b75858286016109d4565b9250506020610b8685828601610a00565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bd757607f821691505b602082108103610bea57610be9610b90565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610952565b9150610c3583610952565b9250828203905081811115610c4d57610c4c610bf0565b5b92915050565b6000610c5e82610952565b9150610c6983610952565b9250828201905080821115610c8157610c80610bf0565b5b9291505056fea2646970667358221220cff01c6e8a8bd87cde796d9267859891894c282cb1528655a0deb789a522756464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x6D6A6A4D EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x148 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3E5 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4B7 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E6 SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x633 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x633 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x616 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0xBBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x926 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x874 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x93C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9 DUP5 PUSH1 0x40 MLOAD PUSH2 0x914 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0xC1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x952 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x980 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B6 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x9AB JUMP JUMPDEST DUP2 EQ PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E3 DUP2 PUSH2 0x9BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x952 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA0F DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2D PUSH2 0x986 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3C DUP7 DUP3 DUP8 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA4D DUP7 DUP3 DUP8 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA5E DUP7 DUP3 DUP8 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB00 DUP3 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB0A DUP2 DUP6 PUSH2 0xAA9 JUMP JUMPDEST SWAP4 POP PUSH2 0xB1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB23 DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB48 DUP2 DUP5 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0x986 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB75 DUP6 DUP3 DUP7 ADD PUSH2 0x9D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB86 DUP6 DUP3 DUP7 ADD PUSH2 0xA00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xBD7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBEA JUMPI PUSH2 0xBE9 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP PUSH2 0xC35 DUP4 PUSH2 0x952 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xBF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP PUSH2 0xC69 DUP4 PUSH2 0x952 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xBF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF CREATE SHR PUSH15 0x8A8BD87CDE796D9267859891894C28 0x2C 0xB1 MSTORE DUP7 SSTORE LOG0 0xDE 0xB7 DUP10 0xA5 0x22 PUSH22 0x6464736F6C6343000812003300000000000000000000 ",
							"sourceMap": "262:3266:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2311:1204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1391:810;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:49;;;;:::o;2311:1204::-;2399:4;2523:1;2504:21;;:7;:21;;;2496:30;;;;;;2566:1;2545:23;;:9;:23;;;2537:32;;;;;;2673:7;2660:20;;:9;:20;;;2652:29;;;;;;2783:7;2762:8;:17;2771:7;2762:17;;;;;;;;;;;;;;;;:28;;2754:37;;;;;;2917:7;2885;:16;2893:7;2885:16;;;;;;;;;;;;;;;:28;2902:10;2885:28;;;;;;;;;;;;;;;;:39;;2877:48;;;;;;3028:30;3050:7;3028:8;:17;3037:7;3028:17;;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;3008:8;:17;3017:7;3008:17;;;;;;;;;;;;;;;:50;;;;3156:32;3180:7;3156:8;:19;3165:9;3156:19;;;;;;;;;;;;;;;;:23;;:32;;;;:::i;:::-;3134:8;:19;3143:9;3134:19;;;;;;;;;;;;;;;:54;;;;3301:41;3334:7;3301;:16;3309:7;3301:16;;;;;;;;;;;;;;;:28;3318:10;3301:28;;;;;;;;;;;;;;;;:32;;:41;;;;:::i;:::-;3270:7;:16;3278:7;3270:16;;;;;;;;;;;;;;;:28;3287:10;3270:28;;;;;;;;;;;;;;;:72;;;;3410:9;3392:37;;3401:7;3392:37;;;3421:7;3392:37;;;;;;:::i;:::-;;;;;;;;3503:4;3496:11;;2311:1204;;;;;:::o;571:25::-;;;;:::o;487:42::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;603:51::-;;;;:::o;536:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1391:810::-;1458:4;1597:1;1576:23;;:9;:23;;;1568:32;;;;;;1632:10;1619:23;;:9;:23;;;1611:32;;;;;;1748:7;1724:8;:20;1733:10;1724:20;;;;;;;;;;;;;;;;:31;;1716:40;;;;;;1862:33;1887:7;1862:8;:20;1871:10;1862:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;1839:8;:20;1848:10;1839:20;;;;;;;;;;;;;;;:56;;;;1993:32;2017:7;1993:8;:19;2002:9;1993:19;;;;;;;;;;;;;;;;:23;;:32;;;;:::i;:::-;1971:8;:19;1980:9;1971:19;;;;;;;;;;;;;;;:54;;;;2096:9;2075:40;;2084:10;2075:40;;;2107:7;2075:40;;;;;;:::i;:::-;;;;;;;;2189:4;2182:11;;1391:810;;;;:::o;3122:96:0:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:619::-;1626:6;1634;1642;1691:2;1679:9;1670:7;1666:23;1662:32;1659:119;;;1697:79;;:::i;:::-;1659:119;1817:1;1842:53;1887:7;1878:6;1867:9;1863:22;1842:53;:::i;:::-;1832:63;;1788:117;1944:2;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1915:118;2072:2;2098:53;2143:7;2134:6;2123:9;2119:22;2098:53;:::i;:::-;2088:63;;2043:118;1549:619;;;;;:::o;2174:90::-;2208:7;2251:5;2244:13;2237:21;2226:32;;2174:90;;;:::o;2270:109::-;2351:21;2366:5;2351:21;:::i;:::-;2346:3;2339:34;2270:109;;:::o;2385:210::-;2472:4;2510:2;2499:9;2495:18;2487:26;;2523:65;2585:1;2574:9;2570:17;2561:6;2523:65;:::i;:::-;2385:210;;;;:::o;2601:99::-;2653:6;2687:5;2681:12;2671:22;;2601:99;;;:::o;2706:169::-;2790:11;2824:6;2819:3;2812:19;2864:4;2859:3;2855:14;2840:29;;2706:169;;;;:::o;2881:246::-;2962:1;2972:113;2986:6;2983:1;2980:13;2972:113;;;3071:1;3066:3;3062:11;3056:18;3052:1;3047:3;3043:11;3036:39;3008:2;3005:1;3001:10;2996:15;;2972:113;;;3119:1;3110:6;3105:3;3101:16;3094:27;2943:184;2881:246;;;:::o;3133:102::-;3174:6;3225:2;3221:7;3216:2;3209:5;3205:14;3201:28;3191:38;;3133:102;;;:::o;3241:377::-;3329:3;3357:39;3390:5;3357:39;:::i;:::-;3412:71;3476:6;3471:3;3412:71;:::i;:::-;3405:78;;3492:65;3550:6;3545:3;3538:4;3531:5;3527:16;3492:65;:::i;:::-;3582:29;3604:6;3582:29;:::i;:::-;3577:3;3573:39;3566:46;;3333:285;3241:377;;;;:::o;3624:313::-;3737:4;3775:2;3764:9;3760:18;3752:26;;3824:9;3818:4;3814:20;3810:1;3799:9;3795:17;3788:47;3852:78;3925:4;3916:6;3852:78;:::i;:::-;3844:86;;3624:313;;;;:::o;3943:474::-;4011:6;4019;4068:2;4056:9;4047:7;4043:23;4039:32;4036:119;;;4074:79;;:::i;:::-;4036:119;4194:1;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4165:117;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3943:474;;;;;:::o;4423:180::-;4471:77;4468:1;4461:88;4568:4;4565:1;4558:15;4592:4;4589:1;4582:15;4609:320;4653:6;4690:1;4684:4;4680:12;4670:22;;4737:1;4731:4;4727:12;4758:18;4748:81;;4814:4;4806:6;4802:17;4792:27;;4748:81;4876:2;4868:6;4865:14;4845:18;4842:38;4839:84;;4895:18;;:::i;:::-;4839:84;4660:269;4609:320;;;:::o;4935:180::-;4983:77;4980:1;4973:88;5080:4;5077:1;5070:15;5104:4;5101:1;5094:15;5121:194;5161:4;5181:20;5199:1;5181:20;:::i;:::-;5176:25;;5215:20;5233:1;5215:20;:::i;:::-;5210:25;;5259:1;5256;5252:9;5244:17;;5283:1;5277:4;5274:11;5271:37;;;5288:18;;:::i;:::-;5271:37;5121:194;;;;:::o;5321:191::-;5361:3;5380:20;5398:1;5380:20;:::i;:::-;5375:25;;5414:20;5432:1;5414:20;:::i;:::-;5409:25;;5457:1;5454;5450:9;5443:16;;5478:3;5475:1;5472:10;5469:36;;;5485:18;;:::i;:::-;5469:36;5321:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "652200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"decimalFactor()": "2451",
								"decimals()": "2474",
								"symbol()": "infinite",
								"tokenName()": "infinite",
								"totalSupply()": "2430",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "77656233436C756273546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 487,
									"end": 529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 529,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 487,
									"end": 529,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "5743540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 536,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 536,
									"end": 564,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 536,
									"end": 564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 596,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 571,
									"end": 596,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 571,
									"end": 596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 653,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 645,
									"end": 653,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 631,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 631,
									"end": 654,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 654,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 631,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 631,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 631,
									"end": 654,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 631,
									"end": 654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 603,
									"end": 654,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 603,
									"end": 654,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 697,
									"end": 710,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 697,
									"end": 710,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 687,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "F4240"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 687,
									"end": 710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 687,
									"end": 710,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 710,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 661,
									"end": 710,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1170,
									"end": 1298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1253,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1242,
									"end": 1253,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1227,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1219,
									"end": 1239,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1279,
									"end": 1290,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 1290,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 2,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7521,
									"end": 7526,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7563,
									"end": 7567,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7545,
									"end": 7568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7607,
									"end": 7615,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7589,
									"end": 7616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7672,
									"end": 7738,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7662,
									"end": 7670,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7635,
									"end": 7739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7792,
									"end": 7799,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7833,
									"end": 7834,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7815,
									"end": 7835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7867,
									"end": 7868,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7849,
									"end": 7869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7944,
									"end": 7955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7926,
									"end": 7956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8105,
									"end": 8106,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8107,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 8089,
									"end": 8090,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8086,
									"end": 8108,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 8066,
									"end": 8067,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8039,
									"end": 8122,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8135,
									"end": 8153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "tag",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7800,
									"end": 8162,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7752,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8249,
									"end": 8366,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 8249,
									"end": 8366,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8358,
									"end": 8359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8355,
									"end": 8356,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8348,
									"end": 8360,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8495,
									"end": 8617,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 8495,
									"end": 8617,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8568,
									"end": 8592,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8586,
									"end": 8591,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8568,
									"end": 8592,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8568,
									"end": 8592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8568,
									"end": 8592,
									"name": "tag",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8568,
									"end": 8592,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8561,
									"end": 8566,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8558,
									"end": 8593,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 8548,
									"end": 8611,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8548,
									"end": 8611,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8607,
									"end": 8608,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8604,
									"end": 8605,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8597,
									"end": 8609,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8548,
									"end": 8611,
									"name": "tag",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8548,
									"end": 8611,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8495,
									"end": 8617,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8495,
									"end": 8617,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8680,
									"end": 8685,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8711,
									"end": 8717,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8705,
									"end": 8718,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8696,
									"end": 8718,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8696,
									"end": 8718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8727,
									"end": 8760,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 8754,
									"end": 8759,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8727,
									"end": 8760,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 8727,
									"end": 8760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8727,
									"end": 8760,
									"name": "tag",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 8727,
									"end": 8760,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8623,
									"end": 8766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8842,
									"end": 8848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8891,
									"end": 8893,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8879,
									"end": 8888,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8870,
									"end": 8877,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8866,
									"end": 8889,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8862,
									"end": 8894,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 8859,
									"end": 8978,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8859,
									"end": 8978,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 8859,
									"end": 8978,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8897,
									"end": 8976,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "151"
								},
								{
									"begin": 8897,
									"end": 8976,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 8897,
									"end": 8976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8897,
									"end": 8976,
									"name": "tag",
									"source": 2,
									"value": "151"
								},
								{
									"begin": 8897,
									"end": 8976,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8859,
									"end": 8978,
									"name": "tag",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 8859,
									"end": 8978,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9017,
									"end": 9018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9042,
									"end": 9106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "152"
								},
								{
									"begin": 9098,
									"end": 9105,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9089,
									"end": 9095,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9078,
									"end": 9087,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 9074,
									"end": 9096,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9042,
									"end": 9106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 9042,
									"end": 9106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9042,
									"end": 9106,
									"name": "tag",
									"source": 2,
									"value": "152"
								},
								{
									"begin": 9042,
									"end": 9106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9032,
									"end": 9106,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9032,
									"end": 9106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8988,
									"end": 9116,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8772,
									"end": 9123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3528,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cff01c6e8a8bd87cde796d9267859891894c282cb1528655a0deb789a522756464736f6c63430008120033",
									".code": [
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "6C02A931"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "6C02A931"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "6D6A6A4D"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 3528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 661,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2311,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2311,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 487,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 603,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 603,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1391,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1391,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2778,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2754,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2892,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2913,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2924,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2877,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3028,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3058,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3174,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3156,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3152,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3188,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3328,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3329,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3301,
											"end": 3333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3285,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3298,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3342,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "C951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9"
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3392,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 3515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 487,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 487,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 487,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1642,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1743,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1744,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1887,
											"end": 1894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1881,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1882,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1862,
											"end": 1886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1858,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1859,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1895,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2017,
											"end": 2024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2012,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1993,
											"end": 2016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1993,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1990,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2025,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "C951F2D1CB32BB3B3EB40D2F8BE24AA5E7586A00252C401A21EBBA36D4B088A9"
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2075,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2115,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 2201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1677,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1694,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1659,
											"end": 1778,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1697,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1697,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1697,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1659,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1887,
											"end": 1894,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1842,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1895,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1970,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 2033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2098,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2351,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2523,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2523,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2601,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3127,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3050,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2972,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3108,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3094,
											"end": 3121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3235,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3133,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3390,
											"end": 3395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3357,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3396,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3357,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3412,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3483,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3412,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3483,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3548,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3536,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3492,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3557,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3492,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3604,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3582,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3580,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3814,
											"end": 3834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3795,
											"end": 3812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3852,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3930,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3852,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4056,
											"end": 4065,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4054,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4071,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4155,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4036,
											"end": 4155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4074,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4074,
											"end": 4153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4153,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4074,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4155,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4036,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4165,
											"end": 4282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4603,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4423,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4548,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4929,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4609,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4748,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4818,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4792,
											"end": 4819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4792,
											"end": 4819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4748,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4879,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 4880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4839,
											"end": 4923,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4895,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4923,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4839,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4660,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 5115,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4935,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5060,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5080,
											"end": 5084,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5077,
											"end": 5078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5070,
											"end": 5085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5108,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5199,
											"end": 5200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5181,
											"end": 5201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5201,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5181,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5233,
											"end": 5234,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5215,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5244,
											"end": 5261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5244,
											"end": 5261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5285,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5271,
											"end": 5308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5288,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5308,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5271,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5380,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5432,
											"end": 5433,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5414,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5434,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5485,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"tokenweb3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"decimalFactor()": "6d6a6a4d",
							"decimals()": "313ce567",
							"symbol()": "95d89b41",
							"tokenName()": "6c02a931",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TRANSFER\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tokenweb3.sol\":\"web3ClubsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"tokenweb3.sol\":{\"keccak256\":\"0x3eb68875142415f49b4323f88771ab24b10d90f77870f72a44fe3bbc542598b2\",\"urls\":[\"bzz-raw://eb656f7a883ea335863da17833d4e82636bfba7b72cb60802f255f9cf9c2f1b8\",\"dweb:/ipfs/QmVru3H29BzsSy4SQ3v53TWweemFRmq2FHGXrBMnyTftSM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "tokenName",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 326,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "decimalFactor",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 351,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 357,
								"contract": "tokenweb3.sol:web3ClubsToken",
								"label": "allowed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> tokenweb3.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "tokenweb3.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> tokenweb3.sol:30:5:\n   |\n30 |     constructor(uint _totalSupply) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1298,
					"file": "tokenweb3.sol",
					"start": 1170
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"tokenweb3.sol": {
				"ast": {
					"absolutePath": "tokenweb3.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"web3ClubsToken": [
							545
						]
					},
					"id": 546,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 312,
							"src": "149:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "web3ClubsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545
							],
							"name": "web3ClubsToken",
							"nameLocation": "271:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nameLocations": [
											"420:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "420:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "414:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 320,
									"mutability": "mutable",
									"name": "tokenName",
									"nameLocation": "501:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "487:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "77656233436c756273546f6b656e",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "513:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_af36faeed2b4510d6449f1fffca300f5696fcba2c1dc459fc906863a07655165",
											"typeString": "literal_string \"web3ClubsToken\""
										},
										"value": "web3ClubsToken"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 323,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "550:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "536:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 321,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "536:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "574354",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "559:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c86c972ec5c054e0e517573f7718897d3ae8cbdee02e62c4a18b3c844e5560f5",
											"typeString": "literal_string \"WCT\""
										},
										"value": "WCT"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 326,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "583:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "571:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 324,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "571:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "594:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d6a6a4d",
									"id": 334,
									"mutability": "mutable",
									"name": "decimalFactor",
									"nameLocation": "615:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "603:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "603:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 328,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "631:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"arguments": [
												{
													"id": 331,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 326,
													"src": "645:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 330,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "637:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 332,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "637:17:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "631:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 339,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "673:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "661:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "661:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 336,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "687:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 337,
											"name": "decimalFactor",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 334,
											"src": "697:13:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "687:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c951f2d1cb32bb3b3eb40d2f8be24aa5e7586a00252c401a21ebba36d4b088a9",
									"id": 347,
									"name": "TRANSFER",
									"nameLocation": "782:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "807:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "791:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "830:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "814:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "843:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "835:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:60:1"
									},
									"src": "776:75:1"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "941:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "912:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 350,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 348,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "921:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "912:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 349,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1092:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "1042:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1051:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1042:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 355,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1071:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1062:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 354,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1082:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "1208:90:1",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 362,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1219:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 365,
														"indexExpression": {
															"expression": {
																"id": 363,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1228:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1232:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1228:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1219:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1242:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1219:34:1"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1264:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1279:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1264:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1264:26:1"
											}
										]
									},
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "1187:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1182:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:19:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:0:1"
									},
									"scope": 545,
									"src": "1170:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "1464:737:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "1576:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1597:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1589:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1589:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1576:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1568:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1568:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1568:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "1619:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 394,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1632:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1636:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1632:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1619:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1611:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1611:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1611:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 400,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "1724:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 403,
																"indexExpression": {
																	"expression": {
																		"id": 401,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1733:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1737:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1733:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1724:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 404,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "1748:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1724:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1716:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1716:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "1716:40:1"
											},
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 408,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1839:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 411,
														"indexExpression": {
															"expression": {
																"id": 409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1848:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1852:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1848:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1839:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 417,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "1887:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 412,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "1862:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 415,
																"indexExpression": {
																	"expression": {
																		"id": 413,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1871:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1875:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1871:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1862:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1883:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1862:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1862:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1839:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1839:56:1"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 421,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1971:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 423,
														"indexExpression": {
															"id": 422,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1980:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1971:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 428,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "2017:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 424,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "1993:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 426,
																"indexExpression": {
																	"id": 425,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "2002:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1993:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2013:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1993:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1993:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1971:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1971:54:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2084:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2088:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2084:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "2096:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2107:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "TRANSFER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2075:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "EmitStatement",
												"src": "2070:45:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2189:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 382,
												"id": 440,
												"nodeType": "Return",
												"src": "2182:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1400:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "1417:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1409:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1433:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:33:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1458:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1458:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:6:1"
									},
									"scope": 545,
									"src": "1391:810:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2405:1110:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "2504:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2515:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2515:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2515:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2504:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "2496:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "2545:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2566:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2558:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 464,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2558:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2558:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2545:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2537:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "2660:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 473,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "2673:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2660:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2652:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 478,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "2762:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 480,
																"indexExpression": {
																	"id": 479,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "2771:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2762:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 481,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "2783:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2762:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2754:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2754:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 486,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "2885:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 487,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2893:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 491,
																"indexExpression": {
																	"expression": {
																		"id": 489,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2902:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2906:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2902:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2885:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 492,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "2917:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2885:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2877:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2877:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "2877:48:1"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 496,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3008:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 498,
														"indexExpression": {
															"id": 497,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3017:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3008:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 503,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "3050:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 499,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3028:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"id": 500,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "3037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3028:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3046:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3028:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3028:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3008:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "3008:50:1"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 507,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3134:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 508,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3143:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3134:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 514,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "3180:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 510,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3156:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 512,
																"indexExpression": {
																	"id": 511,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "3165:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3156:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3176:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "3156:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3156:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3134:54:1"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 518,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "3270:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 522,
															"indexExpression": {
																"id": 519,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "3278:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3270:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 523,
														"indexExpression": {
															"expression": {
																"id": 520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3287:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3291:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3287:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3270:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 531,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "3334:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 524,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "3301:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 526,
																	"indexExpression": {
																		"id": 525,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "3309:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3301:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 529,
																"indexExpression": {
																	"expression": {
																		"id": 527,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3318:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3322:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3318:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3301:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3330:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3301:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3301:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3270:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "3270:72:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 536,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3401:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3410:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3421:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "TRANSFER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3392:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3392:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "EmitStatement",
												"src": "3387:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 542,
												"nodeType": "Return",
												"src": "3496:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2320:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "2341:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2333:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2358:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2350:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2374:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2369:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2369:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:50:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2399:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:6:1"
									},
									"scope": 545,
									"src": "2311:1204:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 546,
							"src": "262:3266:1",
							"usedErrors": []
						}
					],
					"src": "42:3488:1"
				},
				"id": 1
			}
		}
	}
}